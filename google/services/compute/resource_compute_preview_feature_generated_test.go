// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Magic Modules and manual
//     changes will be clobbered when the file is regenerated.
//
//     Please read more about how to change this file in
//     .github/CONTRIBUTING.md.
//
// ----------------------------------------------------------------------------

package compute_test

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"

	"github.com/hashicorp/terraform-provider-google/google/acctest"
)

func TestAccComputePreviewFeature_previewFeatureBasicExample(t *testing.T) {
	t.Parallel()

	context := map[string]interface{}{
		"random_suffix": acctest.RandString(t, 10),
	}

	acctest.VcrTest(t, resource.TestCase{
		PreCheck:                 func() { acctest.AccTestPreCheck(t) },
		ProtoV5ProviderFactories: acctest.ProtoV5ProviderFactories(t),
		Steps: []resource.TestStep{
			{
				Config: testAccComputePreviewFeature_previewFeatureBasicExample(context),
			},
			{
				ResourceName:            "google_compute_preview_feature.gce_preview_feature",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"name", "rollout_operation"},
			},
		},
	})
}

func testAccComputePreviewFeature_previewFeatureBasicExample(context map[string]interface{}) string {
	return acctest.Nprintf(`
resource "google_compute_preview_feature" "gce_preview_feature" {
  name              = "alpha-api-access"
  activation_status = "ACTIVATION_STATE_UNSPECIFIED"
  rollout_operation {
    rollout_input {
      predefined_rollout_plan = "ROLLOUT_PLAN_FAST_ROLLOUT"
    }
  }
}
`, context)
}
