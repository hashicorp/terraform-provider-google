// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Magic Modules and manual
//     changes will be clobbered when the file is regenerated.
//
//     Please read more about how to change this file in
//     .github/CONTRIBUTING.md.
//
// ----------------------------------------------------------------------------

package apihub_test

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"

	"github.com/hashicorp/terraform-provider-google/google/acctest"
	"github.com/hashicorp/terraform-provider-google/google/envvar"
)

func TestAccApihubHostProjectRegistration_apihubHostProjectRegistrationBasicExample(t *testing.T) {
	t.Parallel()

	context := map[string]interface{}{
		"billing_account": envvar.GetTestBillingAccountFromEnv(t),
		"org_id":          envvar.GetTestOrgFromEnv(t),
		"random_suffix":   acctest.RandString(t, 10),
	}

	acctest.VcrTest(t, resource.TestCase{
		PreCheck:                 func() { acctest.AccTestPreCheck(t) },
		ProtoV5ProviderFactories: acctest.ProtoV5ProviderFactories(t),
		ExternalProviders: map[string]resource.ExternalProvider{
			"time": {},
		},
		Steps: []resource.TestStep{
			{
				Config: testAccApihubHostProjectRegistration_apihubHostProjectRegistrationBasicExample(context),
			},
			{
				ResourceName:            "google_apihub_host_project_registration.apihub_host_project",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"host_project_registration_id", "location"},
			},
		},
	})
}

func testAccApihubHostProjectRegistration_apihubHostProjectRegistrationBasicExample(context map[string]interface{}) string {
	return acctest.Nprintf(`
resource "google_project" "project" {
    name       = "tf-test-apihub-proj%{random_suffix}"
    project_id = "tf-test-apihub-proj%{random_suffix}"
    org_id     = "%{org_id}"
    billing_account = "%{billing_account}"
    deletion_policy = "DELETE"
}

resource "time_sleep" "wait_60_seconds" {
    create_duration = "60s"
    depends_on = [google_project.project]
}

# Enable API hub API
resource "google_project_service" "apihub_service" {
    project = google_project.project.project_id
    service = "apihub.googleapis.com"
    depends_on = [time_sleep.wait_60_seconds]
}

resource "google_apihub_host_project_registration" "apihub_host_project"{
    project = google_project.project.project_id
    location = "asia-south1"
    host_project_registration_id = google_project.project.project_id
    gcp_project = "projects/${google_project.project.project_id}"

    depends_on = [google_project_service.apihub_service]
}
`, context)
}
