// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Magic Modules and manual
//     changes will be clobbered when the file is regenerated.
//
//     Please read more about how to change this file in
//     .github/CONTRIBUTING.md.
//
// ----------------------------------------------------------------------------

package servicenetworking_test

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"

	"github.com/hashicorp/terraform-provider-google/google/acctest"
)

func TestAccServiceNetworkingVPCServiceControls_serviceNetworkingVpcServiceControlsBasicExample(t *testing.T) {
	t.Parallel()

	context := map[string]interface{}{
		"random_suffix": acctest.RandString(t, 10),
	}

	acctest.VcrTest(t, resource.TestCase{
		PreCheck:                 func() { acctest.AccTestPreCheck(t) },
		ProtoV5ProviderFactories: acctest.ProtoV5ProviderFactories(t),
		Steps: []resource.TestStep{
			{
				Config: testAccServiceNetworkingVPCServiceControls_serviceNetworkingVpcServiceControlsBasicExample(context),
			},
			{
				ResourceName:            "google_service_networking_vpc_service_controls.default",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"network", "project", "service"},
			},
		},
	})
}

func testAccServiceNetworkingVPCServiceControls_serviceNetworkingVpcServiceControlsBasicExample(context map[string]interface{}) string {
	return acctest.Nprintf(`
# Create a VPC
resource "google_compute_network" "default" {
  name = "tf-test-example-network%{random_suffix}"
}

# Create an IP address
resource "google_compute_global_address" "default" {
  name          = "tf-test-psa-range%{random_suffix}"
  purpose       = "VPC_PEERING"
  address_type  = "INTERNAL"
  prefix_length = 16
  network       = google_compute_network.default.id
}

# Create a private connection
resource "google_service_networking_connection" "default" {
  network                 = google_compute_network.default.id
  service                 = "servicenetworking.googleapis.com"
  reserved_peering_ranges = [google_compute_global_address.default.name]
}

# Enable VPC-SC on the producer network
resource "google_service_networking_vpc_service_controls" "default" {
  network    = google_compute_network.default.name
  service    = "servicenetworking.googleapis.com"
  enabled    = true
  depends_on = [google_service_networking_connection.default]
}
`, context)
}
