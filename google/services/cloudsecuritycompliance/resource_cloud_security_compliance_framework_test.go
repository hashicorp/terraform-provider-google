// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0
// ----------------------------------------------------------------------------
//
//	***     AUTO GENERATED CODE    ***    Type: Handwritten     ***
//
// ----------------------------------------------------------------------------
//
//	This code is generated by Magic Modules using the following:
//
//	Source file: https://github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/third_party/terraform/services/cloudsecuritycompliance/resource_cloud_security_compliance_framework_test.go
//
//	DO NOT EDIT this file directly. Any changes made to this file will be
//	overwritten during the next generation cycle.
//
// ----------------------------------------------------------------------------
package cloudsecuritycompliance_test

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"

	"github.com/hashicorp/terraform-provider-google/google/acctest"
	"github.com/hashicorp/terraform-provider-google/google/envvar"
)

func TestAccCloudSecurityComplianceFramework_basic(t *testing.T) {
	t.Parallel()

	context := map[string]interface{}{
		"org_id":        envvar.GetTestOrgTargetFromEnv(t),
		"random_suffix": acctest.RandString(t, 10),
	}

	acctest.VcrTest(t, resource.TestCase{
		PreCheck:                 func() { acctest.AccTestPreCheck(t) },
		ProtoV5ProviderFactories: acctest.ProtoV5ProviderFactories(t),
		Steps: []resource.TestStep{
			{
				Config: testAccCloudSecurityComplianceFramework_basic(context),
			},
			{
				ResourceName:            "google_cloud_security_compliance_framework.example",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"framework_id", "location", "organization"},
			},
		},
	})
}

func testAccCloudSecurityComplianceFramework_basic(context map[string]interface{}) string {
	return acctest.Nprintf(`
resource "google_cloud_security_compliance_framework" "example" {
  name 		   = "organizations/%{org_id}/locations/global/frameworks/tf-test-example-framework%{random_suffix}"
  organization = "%{org_id}"
  location     = "global"
  framework_id = "tf-test-example-framework%{random_suffix}"
  
  display_name = "Terraform Framework Name"
  description  = "An Terraform description for the framework"
  
  cloud_control_details {
		name              = "organizations/%{org_id}/locations/global/cloudControls/builtin-assess-resource-availability"
		major_revision_id = "1"
    
    parameters {
      name = "location"
      parameter_value {
        string_value = "us-central1"
      }
    }
  }
}
`, context)
}

func TestAccCloudSecurityComplianceFramework_update(t *testing.T) {
	t.Parallel()

	context := map[string]interface{}{
		"org_id":        envvar.GetTestOrgTargetFromEnv(t),
		"random_suffix": acctest.RandString(t, 10),
	}

	acctest.VcrTest(t, resource.TestCase{
		PreCheck:                 func() { acctest.AccTestPreCheck(t) },
		ProtoV5ProviderFactories: acctest.ProtoV5ProviderFactories(t),
		Steps: []resource.TestStep{
			{
				Config: testAccCloudSecurityComplianceFramework_basic(context),
			},
			{
				ResourceName:            "google_cloud_security_compliance_framework.example",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"framework_id", "location", "organization"},
			},
			{
				Config: testAccCloudSecurityComplianceFramework_update(context),
			},
			{
				ResourceName:            "google_cloud_security_compliance_framework.example",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"framework_id", "location", "organization"},
			},
		},
	})
}

func testAccCloudSecurityComplianceFramework_update(context map[string]interface{}) string {
	return acctest.Nprintf(`
resource "google_cloud_security_compliance_framework" "example" {
  name 		   = "organizations/%{org_id}/locations/global/frameworks/tf-test-example-framework%{random_suffix}"
  organization = "%{org_id}"
  location     = "global"
  framework_id = "tf-test-example-framework%{random_suffix}"
  
  display_name = "Updated Terraform Framework Name"
  description  = "An updated description for the framework with additional details"
  
  cloud_control_details {
    name              = "organizations/%{org_id}/locations/global/cloudControls/builtin-data-access-governance"
    major_revision_id = "1"
    
    parameters {
      name = "location"
      parameter_value {
        string_value = "us-west1"
      }
    }
  }
}
`, context)
}
