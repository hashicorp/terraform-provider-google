// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0
// ----------------------------------------------------------------------------
//
//	***     AUTO GENERATED CODE    ***    Type: Handwritten     ***
//
// ----------------------------------------------------------------------------
//
//	This code is generated by Magic Modules using the following:
//
//	Source file: https://github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/third_party/terraform/services/networkservices/resource_network_services_edge_cache_origin_test.go
//
//	DO NOT EDIT this file directly. Any changes made to this file will be
//	overwritten during the next generation cycle.
//
// ----------------------------------------------------------------------------
package networkservices_test

import (
	"fmt"
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/hashicorp/terraform-provider-google/google/acctest"
)

func TestAccNetworkServicesEdgeCacheOrigin_updateAndImport(t *testing.T) {
	t.Parallel()
	name := "tf-test-origin-" + acctest.RandString(t, 10)
	acctest.VcrTest(t, resource.TestCase{
		PreCheck:                 func() { acctest.AccTestPreCheck(t) },
		ProtoV5ProviderFactories: acctest.ProtoV5ProviderFactories(t),
		CheckDestroy:             testAccCheckNetworkServicesEdgeCacheOriginDestroyProducer(t),
		Steps: []resource.TestStep{
			{
				Config: testAccNetworkServicesEdgeCacheOrigin_update_0(name),
			},
			{
				ResourceName:            "google_network_services_edge_cache_origin.instance",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"name", "labels", "terraform_labels"},
			},
			{
				Config: testAccNetworkServicesEdgeCacheOrigin_update_1(name),
			},
			{
				ResourceName:            "google_network_services_edge_cache_origin.instance",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"name", "labels", "terraform_labels"},
			},
		},
	})
}
func testAccNetworkServicesEdgeCacheOrigin_update_0(name string) string {
	return fmt.Sprintf(`
	resource "google_network_services_edge_cache_origin" "instance" {
		name                 = "%s"
		origin_address       = "gs://media-edge-default"
		description          = "The default bucket for media edge test"
		max_attempts         = 2
		labels = {
			a = "b"
		}
		retry_conditions = ["NOT_FOUND"]
		timeout {
			connect_timeout = "10s"
		}
		flex_shielding {
			flex_shielding_regions = ["AFRICA_SOUTH1"]
		}
	}
`, name)
}
func testAccNetworkServicesEdgeCacheOrigin_update_1(name string) string {
	return fmt.Sprintf(`
	resource "google_network_services_edge_cache_origin" "instance" {
		name                 = "%s"
		origin_address       = "gs://media-edge-fallback"
		description          = "The default bucket for media edge test"
		max_attempts         = 3
		retry_conditions     = ["FORBIDDEN"]
		timeout {
			connect_timeout = "9s"
			max_attempts_timeout = "14s"
			response_timeout = "29s"
			read_timeout = "13s"
		}
		flex_shielding {
			flex_shielding_regions = ["ME_CENTRAL1"]
		}
	}
`, name)
}
