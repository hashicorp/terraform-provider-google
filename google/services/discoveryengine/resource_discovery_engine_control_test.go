// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0
// ----------------------------------------------------------------------------
//
//	***     AUTO GENERATED CODE    ***    Type: Handwritten     ***
//
// ----------------------------------------------------------------------------
//
//	This code is generated by Magic Modules using the following:
//
//	Source file: https://github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/third_party/terraform/services/discoveryengine/resource_discovery_engine_control_test.go
//
//	DO NOT EDIT this file directly. Any changes made to this file will be
//	overwritten during the next generation cycle.
//
// ----------------------------------------------------------------------------
package discoveryengine_test

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/hashicorp/terraform-provider-google/google/acctest"
)

func TestAccDiscoveryEngineControl_discoveryengineControlBasicExample_update(t *testing.T) {
	t.Parallel()

	context := map[string]interface{}{
		"random_suffix": acctest.RandString(t, 10),
	}

	acctest.VcrTest(t, resource.TestCase{
		PreCheck:                 func() { acctest.AccTestPreCheck(t) },
		ProtoV5ProviderFactories: acctest.ProtoV5ProviderFactories(t),
		Steps: []resource.TestStep{
			{
				Config: testAccDiscoveryEngineControl_discoveryengineControlBasicExample_basic(context),
			},
			{
				ResourceName:      "google_discovery_engine_control.basic",
				ImportState:       true,
				ImportStateVerify: true,
			},
			{
				Config: testAccDiscoveryEngineControl_discoveryengineControlBasicExample_update(context),
			},
			{
				ResourceName:      "google_discovery_engine_control.basic",
				ImportState:       true,
				ImportStateVerify: true,
			},
		},
		CheckDestroy: testAccCheckDiscoveryEngineControlDestroyProducer(t),
	})
}

func testAccDiscoveryEngineControl_discoveryengineControlBasicExample_basic(context map[string]interface{}) string {
	return acctest.Nprintf(`
resource "google_discovery_engine_data_store" "basic" {
  location   = "global"
  data_store_id = "tf-test-data-store-id-%{random_suffix}"
  display_name = "tf-test-data-store-%{random_suffix}"
  industry_vertical = "GENERIC"
  content_config = "NO_CONTENT"
  solution_types = ["SOLUTION_TYPE_SEARCH"]
}

resource "google_discovery_engine_search_engine" "basic" {
  location = google_discovery_engine_data_store.basic.location
  engine_id = "tf-test-engine-id-%{random_suffix}"
  collection_id = "default_collection"
  display_name = "tf-test-engine-%{random_suffix}"
  industry_vertical = google_discovery_engine_data_store.basic.industry_vertical
  data_store_ids = [google_discovery_engine_data_store.basic.data_store_id]
  search_engine_config {
    search_tier = "SEARCH_TIER_STANDARD"
    search_add_ons = ["SEARCH_ADD_ON_LLM"]
  }
}

resource "google_discovery_engine_control" "basic" {
  location = google_discovery_engine_search_engine.basic.location
	collection_id = google_discovery_engine_search_engine.basic.collection_id
  engine_id = google_discovery_engine_search_engine.basic.engine_id
  control_id = "tf-test-control-id-%{random_suffix}"
  display_name = "tf-test-control-%{random_suffix}"
  solution_type = "SOLUTION_TYPE_SEARCH"
  use_cases = ["SEARCH_USE_CASE_SEARCH"]
  synonyms_action {
    synonyms = ["test", "experiment"]
  }
}
`, context)
}

func testAccDiscoveryEngineControl_discoveryengineControlBasicExample_update(context map[string]interface{}) string {
	return acctest.Nprintf(`
resource "google_discovery_engine_data_store" "basic" {
  location   = "global"
  data_store_id = "tf-test-data-store-id-%{random_suffix}"
  display_name = "tf-test-data-store-%{random_suffix}"
  industry_vertical = "GENERIC"
  content_config = "NO_CONTENT"
  solution_types = ["SOLUTION_TYPE_SEARCH"]
}

resource "google_discovery_engine_search_engine" "basic" {
  location = google_discovery_engine_data_store.basic.location
  engine_id = "tf-test-engine-id-%{random_suffix}"
  collection_id = "default_collection"
  display_name = "tf-test-engine-%{random_suffix}"
  industry_vertical = google_discovery_engine_data_store.basic.industry_vertical
  data_store_ids = [google_discovery_engine_data_store.basic.data_store_id]
  search_engine_config {
    search_tier = "SEARCH_TIER_STANDARD"
    search_add_ons = ["SEARCH_ADD_ON_LLM"]
  }
}

resource "google_discovery_engine_control" "basic" {
  location = google_discovery_engine_search_engine.basic.location
  engine_id = google_discovery_engine_search_engine.basic.engine_id
  control_id = "tf-test-control-id-%{random_suffix}"
  display_name = "tf-test-control-%{random_suffix}-update"
  solution_type = "SOLUTION_TYPE_SEARCH"
  use_cases = ["SEARCH_USE_CASE_SEARCH"]
  synonyms_action {
    synonyms = ["test", "experiment", "trial"]
  }
}
`, context)
}
