// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0
// ----------------------------------------------------------------------------
//
//	***     AUTO GENERATED CODE    ***    Type: Handwritten     ***
//
// ----------------------------------------------------------------------------
//
//	This code is generated by Magic Modules using the following:
//
//	Source file: https://github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/third_party/terraform/services/discoveryengine/resource_discovery_engine_data_connector_test.go
//
//	DO NOT EDIT this file directly. Any changes made to this file will be
//	overwritten during the next generation cycle.
//
// ----------------------------------------------------------------------------
package discoveryengine_test

import (
	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/hashicorp/terraform-provider-google/google/acctest"
	"testing"
)

func TestAccDiscoveryEngineDataConnector_discoveryengineDataconnectorJiraBasicExample_update(t *testing.T) {
	// Skips this update test due to duration and flakiness.
	t.Skip()

	t.Parallel()

	context := map[string]interface{}{
		"client_id":     "tf-test-client-id",
		"client_secret": "tf-test-client-secret",
		"random_suffix": acctest.RandString(t, 10),
	}

	acctest.VcrTest(t, resource.TestCase{
		PreCheck:                 func() { acctest.AccTestPreCheck(t) },
		ProtoV5ProviderFactories: acctest.ProtoV5ProviderFactories(t),
		ExternalProviders: map[string]resource.ExternalProvider{
			"time": {},
		},
		Steps: []resource.TestStep{
			{
				Config: testAccDiscoveryEngineDataConnector_discoveryengineDataconnectorJiraBasicExample_basic(context),
			},
			{
				ResourceName:            "google_discovery_engine_data_connector.jira-basic",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"collection_display_name", "collection_id", "location", "params"},
			},
			{
				Config: testAccDiscoveryEngineDataConnector_discoveryengineDataconnectorJiraBasicExample_update(context),
			},
			{
				ResourceName:            "google_discovery_engine_data_connector.jira-basic",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"collection_display_name", "collection_id", "location", "params"},
			},
		},
	})
}

func testAccDiscoveryEngineDataConnector_discoveryengineDataconnectorJiraBasicExample_basic(context map[string]interface{}) string {
	return acctest.Nprintf(`

resource "google_discovery_engine_data_connector" "jira-basic" {
  location                  = "global"
  collection_id             = "tf-test-collection-id%{random_suffix}"
  collection_display_name   = "tf-test-dataconnector-jira"
  data_source               = "jira"
  params = {
      instance_id           = "33db20a3-dc45-4305-a505-d70b68599840"
      instance_uri          = "https://vaissptbots1.atlassian.net/"
      client_secret         = "%{client_secret}"
      client_id             = "%{client_id}"
      refresh_token         = "fill-in-the-blank"
  }
  refresh_interval          = "86400s"
  entities {
      entity_name           = "project"
  }
  entities {
      entity_name           = "issue"
  }
  entities {
      entity_name           = "attachment"
  }
  entities {
      entity_name           = "comment"
  }
  entities {
      entity_name           = "worklog"
  }
  static_ip_enabled         = true
}
`, context)
}

func testAccDiscoveryEngineDataConnector_discoveryengineDataconnectorJiraBasicExample_update(context map[string]interface{}) string {
	return acctest.Nprintf(`
resource "time_sleep" "wait_1_hour" {
  create_duration = "3s"
}

resource "google_discovery_engine_data_connector" "jira-basic" {
  depends_on                = [time_sleep.wait_1_hour]
  location                  = "global"
  collection_id             = "tf-test-collection-id%{random_suffix}"
  collection_display_name   = "tf-test-dataconnector-jira"
  data_source               = "jira"
  params = {
      max_qps               = "100"
  }
  refresh_interval          = "172800s"
  entities {
      entity_name           = "project"
  }
  entities {
      entity_name           = "issue"
  }
  entities {
      entity_name           = "attachment"
  }
  entities {
      entity_name           = "comment"
  }
  entities {
      entity_name           = "worklog"
  }
  static_ip_enabled         = true
}
`, context)
}
