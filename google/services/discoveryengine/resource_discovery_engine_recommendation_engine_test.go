// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0
// ----------------------------------------------------------------------------
//
//	***     AUTO GENERATED CODE    ***    Type: Handwritten     ***
//
// ----------------------------------------------------------------------------
//
//	This code is generated by Magic Modules using the following:
//
//	Source file: https://github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/third_party/terraform/services/discoveryengine/resource_discovery_engine_recommendation_engine_test.go
//
//	DO NOT EDIT this file directly. Any changes made to this file will be
//	overwritten during the next generation cycle.
//
// ----------------------------------------------------------------------------
package discoveryengine_test

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/hashicorp/terraform-provider-google/google/acctest"
)

func TestAccDiscoveryEngineRecommendationEngine_discoveryengineRecommendationengineMediaExample_update(t *testing.T) {
	t.Parallel()

	context := map[string]interface{}{
		"random_suffix": acctest.RandString(t, 10),
	}

	acctest.VcrTest(t, resource.TestCase{
		PreCheck:                 func() { acctest.AccTestPreCheck(t) },
		ProtoV5ProviderFactories: acctest.ProtoV5ProviderFactories(t),
		Steps: []resource.TestStep{
			{
				Config: testAccDiscoveryEngineRecommendationEngine_discoveryengineRecommendationengineMediaExample(context),
			},
			{
				ResourceName:            "google_discovery_engine_recommendation_engine.media",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"common_config", "engine_id", "industry_vertical", "location"},
			},
			{
				Config: testAccDiscoveryEngineRecommendationEngine_discoveryengineRecommendationengineMediaExample(context),
			},
			{
				ResourceName:            "google_discovery_engine_recommendation_engine.media",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"common_config", "engine_id", "industry_vertical", "location"},
			},
		},
	})
}

func testAccDiscoveryEngineRecommendationEngine_discoveryengineRecommendationengineMediaExample_basic(context map[string]interface{}) string {
	return acctest.Nprintf(`
resource "google_discovery_engine_data_store" "media" {
  location                     = "global"
  data_store_id                = "tf-test-recommendation-datastore-id%{random_suffix}"
  display_name                 = "tf-test-structured-datastore"
  industry_vertical            = "MEDIA"
  content_config               = "NO_CONTENT"
  solution_types               = ["SOLUTION_TYPE_RECOMMENDATION"]
  create_advanced_site_search  = false
  skip_default_schema_creation = false
}
resource "google_discovery_engine_recommendation_engine" "media" {
  engine_id                    = "tf-test-recommendation-engine-id%{random_suffix}"
  location                     = google_discovery_engine_data_store.media.location
  display_name                 = "Example Media Recommendation Engine"
  data_store_ids               = [google_discovery_engine_data_store.media.data_store_id]
  industry_vertical            = "MEDIA"
  media_recommendation_engine_config {
    type                       = "recommended-for-you"
    optimization_objective     = "ctr"
    training_state             = "PAUSED"
    engine_features_config {
        recommended_for_you_config {
            context_event_type = "generic"
        }
    }
  }
  common_config {
    company_name               = "test-company"
  }
}
`, context)
}

func testAccDiscoveryEngineRecommendationEngine_discoveryengineRecommendationengineMediaExample_update(context map[string]interface{}) string {
	return acctest.Nprintf(`
resource "google_discovery_engine_data_store" "media" {
  location                     = "global"
  data_store_id                = "tf-test-recommendation-datastore-id%{random_suffix}"
  display_name                 = "tf-test-structured-datastore"
  industry_vertical            = "MEDIA"
  content_config               = "NO_CONTENT"
  solution_types               = ["SOLUTION_TYPE_RECOMMENDATION"]
  create_advanced_site_search  = false
  skip_default_schema_creation = false
}
resource "google_discovery_engine_recommendation_engine" "media" {
  engine_id                    = "tf-test-recommendation-engine-id%{random_suffix}"
  location                     = google_discovery_engine_data_store.media.location
  display_name                 = "Example Media Recommendation Engine"
  data_store_ids               = [google_discovery_engine_data_store.media.data_store_id]
  industry_vertical            = "MEDIA"
  media_recommendation_engine_config {
    type                       = "recommended-for-you"
    optimization_objective     = "cvr"
	optimization_objective_config {
		target_field           = "watch-percentage"
		target_field_value_float = 0.5
	}
    training_state             = "PAUSED"
    engine_features_config {
        recommended_for_you_config {
            context_event_type = "generic"
        }
    }
  }
  common_config {
    company_name               = "test-company"
  }
}
`, context)
}
