// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0
// ----------------------------------------------------------------------------
//
//	***     AUTO GENERATED CODE    ***    Type: Handwritten     ***
//
// ----------------------------------------------------------------------------
//
//	This code is generated by Magic Modules using the following:
//
//	Source file: https://github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/third_party/terraform/services/resourcemanager3/resource_resource_manager_capability_test.go
//
//	DO NOT EDIT this file directly. Any changes made to this file will be
//	overwritten during the next generation cycle.
//
// ----------------------------------------------------------------------------
package resourcemanager3_test

import (
	"regexp"
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"

	"github.com/hashicorp/terraform-provider-google/google/acctest"
	"github.com/hashicorp/terraform-provider-google/google/envvar"
)

func TestAccResourceManagerCapability_resourceManagerCapabilityExample_basic(t *testing.T) {
	t.Parallel()

	context := map[string]interface{}{
		"org_id":        envvar.GetTestOrgFromEnv(t),
		"random_suffix": acctest.RandString(t, 10),
	}
	folderTFResourceName := "google_folder.folder"

	acctest.VcrTest(t, resource.TestCase{
		PreCheck:                 func() { acctest.AccTestPreCheck(t) },
		ProtoV5ProviderFactories: acctest.ProtoV5ProviderFactories(t),
		ExternalProviders: map[string]resource.ExternalProvider{
			"time": {},
		},
		Steps: []resource.TestStep{
			{
				Config: testAccResourceManagerCapability_resourceManagerCapabilityExample_basic(context),
			},
			{
				ResourceName:      folderTFResourceName,
				ImportState:       true,
				ImportStateVerify: false,
				Check: resource.ComposeTestCheckFunc(
					// Checks are now performed on the state *after* the import/refresh.
					resource.TestCheckResourceAttr(folderTFResourceName, "configured_capabilities.#", "1"),
					resource.TestMatchResourceAttr(folderTFResourceName, "management_project", regexp.MustCompile(".+")),
				),
			},
			{
				ResourceName:            "google_resource_manager_capability.capability",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"capability_name", "parent"},
			},
		},
	})
}

func testAccResourceManagerCapability_resourceManagerCapabilityExample_basic(context map[string]interface{}) string {
	return acctest.Nprintf(`
resource "google_folder" "folder" {
  display_name     = "my-folder%{random_suffix}"
  parent           = "organizations/%{org_id}"
  deletion_protection = false
}
resource "time_sleep" "wait_60s" {
  depends_on = [google_folder.folder]
  create_duration = "60s"
}
resource "google_resource_manager_capability" "capability" {
  value            = true
  parent           = "${google_folder.folder.name}"
  capability_name  = "app-management"
  depends_on = [time_sleep.wait_60s, google_folder.folder]
}
`, context)
}
