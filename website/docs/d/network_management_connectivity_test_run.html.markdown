---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: Handwritten     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Source file: https://github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/third_party/terraform/website/docs/d/network_management_connectivity_test_run.html.markdown
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "Network Management"
description: |-
  A connectivity test is a static analysis of your resource configurations
  that enables you to evaluate connectivity to and from Google Cloud
  resources in your Virtual Private Cloud (VPC) network.
---

# google_network_management_connectivity_test_run


!> This datasource triggers side effects on the target resource. It will take a long time to refresh (i.e. `terraform plan` will take much longer than usual) and may modify the state of the parent resource or other copies of the resource copying the same parent.

A connectivity test is a static analysis of your resource configurations
that enables you to evaluate connectivity to and from Google Cloud
resources in your Virtual Private Cloud (VPC) network. This data source allows
you to trigger a rerun operation on a connectivity test and return the results.

To get more information about connectivity tests, see:

* [API documentation](https://cloud.google.com/network-intelligence-center/docs/reference/networkmanagement/rest/v1/projects.locations.global.connectivityTests/rerun)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/network-intelligence-center/docs)

## Example Usage - Network Management Connectivity Test Run Instances

```hcl
data "google_network_management_connectivity_test_run" "instance-test-run" {
  name = google_network_management_connectivity_test.instance-test.name
}

resource "google_network_management_connectivity_test" "instance-test" {
  name = "conn-test-instances"
  source {
    instance = google_compute_instance.source.id
  }

  destination {
    instance = google_compute_instance.destination.id
  }

  protocol = "TCP"
  labels = {
    env = "test"
  }
}

resource "google_compute_instance" "source" {
  name = "source-vm"
  machine_type = "e2-medium"

  boot_disk {
    initialize_params {
      image = data.google_compute_image.debian_9.id
    }
  }

  network_interface {
    network = google_compute_network.vpc.id
    access_config {
    }
  }
}

resource "google_compute_instance" "destination" {
  name = "dest-vm"
  machine_type = "e2-medium"

  boot_disk {
    initialize_params {
      image = data.google_compute_image.debian_9.id
    }
  }

  network_interface {
    network = google_compute_network.vpc.id
    access_config {
    }
  }
}

resource "google_compute_network" "vpc" {
  name = "conn-test-net"
}

data "google_compute_image" "debian_9" {
  family  = "debian-11"
  project = "debian-cloud"
}
```

## Argument Reference

The following arguments are supported:


* `name` -
  (Required)
  Unique name for the connectivity test.


- - -


* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/global/connectivityTests/{{name}}`

* `reachability_details` -
  Connectivity test reachability details.
  Structure is [documented below](#nested_reachability_details).


<a name="nested_reachability_details"></a>The `reachability_details` block contains:

* `result` -
  (Output)
  Status of the connectivity test: RESULT_UNSPECIFIED, REACHABLE, UNREACHABLE, AMBIGUOUS or UNDETERMINED.

* `verify_time` -
  (Output)
  Time when reachability details were determined. An RFC3339 timestamp in UTC time.
  This in the format of yyyy-MM-ddTHH:mm:ss.SSSZ.

* `traces` -
  (Output)
  List of connectivity test traces.
  Structure is [documented below](#nested_reachability_details_traces).


<a name="nested_reachability_details_traces"></a>The `traces` block contains:

* `endpoint_info` -
  (Output)
  Derived from the source and destination endpoints definition specified by user request, and validated by the data plane model.
  Structure is [documented below](#nested_reachability_details_traces_traces_endpoint_info).

* `steps` -
  (Output)
  A trace of a test contains multiple steps from the initial state to the final state (delivered, dropped, forwarded, or aborted).
  Structure is [documented below](#nested_reachability_details_traces_traces_steps).

* `forward_trace_id` -
  (Output)
  ID of the trace.


<a name="nested_reachability_details_traces_traces_endpoint_info"></a>The `endpoint_info` block contains:

* `source_ip` -
  (Output)
  Source IP address.

* `destination_ip` -
  (Output)
  Destination IP address.

* `protocol` -
  (Output)
  IP protocol in string format, for example: "TCP", "UDP", "ICMP".

* `source_port` -
  (Output)
  Source port. Only valid when protocol is TCP or UDP.

* `destination_port` -
  (Output)
  Destination port. Only valid when protocol is TCP or UDP.

* `source_network_uri` -
  (Output)
  URI of the network where this packet originates from.

* `destination_network_uri` -
  (Output)
  URI of the network where this packet is sent to.

* `source_agent_uri` -
  (Output)
  URI of the source telemetry agent this packet originates from.

<a name="nested_reachability_details_traces_traces_steps"></a>The `steps` block contains:

* `description` -
  (Output)
  Description of the connectivity test step.

* `state` -
  (Output)
  State of the connectivity test step.

* `causes_drop` -
  (Output)
  If this step leads to the final state Drop.

* `project_id` -
  (Output)
  Project ID of the connectivity test step.

