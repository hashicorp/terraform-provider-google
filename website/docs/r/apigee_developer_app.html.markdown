---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Configuration: https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/apigee/DeveloperApp.yaml
#     Template:      https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/terraform/resource.html.markdown.tmpl
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "Apigee"
description: |-
  Creates an app associated with a developer.
---

# google_apigee_developer_app

Creates an app associated with a developer.
This API associates the developer app with the specified API product
and auto-generates an API key for the app to use in calls to API proxies
inside that API product.


To get more information about DeveloperApp, see:

* [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.apps)
* How-to Guides
    * [Creating a developer](https://cloud.google.com/apigee/docs/api-platform/publish/creating-apps-surface-your-api)

~> **Warning:** All arguments including the following potentially sensitive
values will be stored in the raw state as plain text: `credentials.credentials.consumer_secret`.
[Read more about sensitive data in state](https://www.terraform.io/language/state/sensitive-data).

## Example Usage - Apigee Developer App Basic


```hcl
resource "google_apigee_developer_app" "apigee_developer_app" {
  name            = "sample-app"
  org_id          = google_apigee_organization.apigee_org.id
  developer_id    = google_apigee_developer.developer.id
  developer_email = google_apigee_developer.developer.email
  callback_url    = "https://example-call.url"

  api_products = [
    google_apigee_api_product.api_product.name
  ]

  scopes = google_apigee_api_product.api_product.scopes
}

resource "google_apigee_api_product" "api_product" {
  org_id        = google_apigee_organization.apigee_org.id
  name          = "sample-api"
  display_name  = "A sample API Product"
  approval_type = "auto"

  scopes = [
    "read:weather",
    "write:reports"
  ]

  depends_on = [
    google_apigee_instance.apigee_instance
  ]
}

resource "google_apigee_developer" "developer" {
  email      = "john.doe@acme.com"
  first_name = "John"
  last_name  = "Doe"
  user_name  = "john.doe"
  org_id     = google_apigee_organization.apigee_org.id

  depends_on = [
    google_apigee_instance.apigee_instance
  ]
}

resource "google_apigee_instance" "apigee_instance" {
  name     = "instance"
  location = "us-central1"
  org_id   = google_apigee_organization.apigee_org.id
}

resource "google_apigee_organization" "apigee_org" {
  analytics_region    = "us-central1"
  project_id          = google_project.project.project_id
  disable_vpc_peering = true
}

data "google_project" "project" {}
```
## Example Usage - Apigee Developer App Basic Test


```hcl
resource "google_apigee_developer_app" "apigee_developer_app" {
  name            = "sample-app"
  app_family      = "default"
  developer_email = google_apigee_developer.developer.email
  org_id          = google_apigee_organization.apigee_org.id
  callback_url    = "https://example-call.url"
  key_expires_in  = "-1"
  status          = "approved"

  api_products = [
    google_apigee_api_product.api_product.name
  ]

  scopes = google_apigee_api_product.api_product.scopes

  attributes {
    name  = "sample_name"
    value = "sample_value"
  }
}

resource "google_apigee_api_product" "api_product" {
  name          = "sample-api"
  org_id        = google_apigee_organization.apigee_org.id
  display_name  = "A sample API Product"
  approval_type = "auto"

  # Not in alphabetical order to test set
  scopes = [
    "read:weather",
    "write:reports",
    "write:files"
  ]

  depends_on = [
    google_apigee_instance.apigee_instance
  ]
}

resource "google_apigee_developer" "developer" {
  email      = "john.doe@acme.com"
  first_name = "John"
  last_name  = "Doe"
  user_name  = "john.doe"
  org_id     = google_apigee_organization.apigee_org.id

  depends_on = [
    google_apigee_instance.apigee_instance
  ]
}

resource "google_apigee_instance" "apigee_instance" {
  name     = "instance"
  location = "us-central1"
  org_id   = google_apigee_organization.apigee_org.id
}

resource "google_apigee_organization" "apigee_org" {
  analytics_region    = "us-central1"
  project_id          = google_project.project.project_id
  disable_vpc_peering = true

  depends_on = [
    google_project_service.apigee
  ]
}

resource "google_project_service" "apigee" {
  project = google_project.project.project_id
  service = "apigee.googleapis.com"

  depends_on = [time_sleep.wait_60_seconds]
}

resource "time_sleep" "wait_60_seconds" {
  create_duration = "60s"

  depends_on = [google_project.project]
}

resource "google_project" "project" {
  project_id      = "prj"
  name            = "prj"
  org_id          = "123456789"
  billing_account = "000000-0000000-0000000-000000"
  deletion_policy = "DELETE"
}
```

## Argument Reference

The following arguments are supported:


* `name` -
  (Required)
  Name of the developer app.

* `callback_url` -
  (Required)
  Callback URL used by OAuth 2.0 authorization servers to communicate
  authorization codes back to developer apps.

* `org_id` -
  (Required)
  The Apigee Organization associated with the Apigee instance,
  in the format `organizations/{{org_name}}`.

* `developer_email` -
  (Required)
  Email address of the developer.
  This value is used to uniquely identify the developer in Apigee hybrid.
  Note that the email address has to be in lowercase only.


* `app_family` -
  (Optional)
  Developer app family.

* `key_expires_in` -
  (Optional)
  Expiration time, in milliseconds, for the consumer key that is generated
  for the developer app. If not set or left to the default value of -1,
  the API key never expires. The expiration time can't be updated after it is set.

* `api_products` -
  (Optional)
  List of API products associated with the developer app.

* `scopes` -
  (Optional)
  Scopes to apply to the developer app.
  The specified scopes must already exist for the API product that
  you associate with the developer app.

* `status` -
  (Optional)
  Status of the credential. Valid values include approved or revoked.

* `attributes` -
  (Optional)
  Developer attributes (name/value pairs). The custom attribute limit is 18.
  Structure is [documented below](#nested_attributes).



<a name="nested_attributes"></a>The `attributes` block supports:

* `name` -
  (Optional)
  Key of the attribute

* `value` -
  (Optional)
  Value of the attribute

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `{{org_id}}/developers/{{developer_email}}/apps/{{name}}`

* `developer_id` -
  ID of the developer.

* `app_id` -
  ID of the developer app. This ID is not user specified but is
  automatically generated on app creation. appId is a UUID.

* `created_at` -
  Time at which the developer was created in milliseconds since epoch.

* `last_modified_at` -
  Time at which the developer was last modified in milliseconds since epoch.

* `credentials` -
  Output only. Set of credentials for the developer app consisting of
  the consumer key/secret pairs associated with the API products.
  Structure is [documented below](#nested_credentials).


<a name="nested_credentials"></a>The `credentials` block contains:

* `consumer_key` -
  (Output)
  Consumer key.

* `consumer_secret` -
  (Output)
  Secret key.
  **Note**: This property is sensitive and will not be displayed in the plan.

* `expires_at` -
  (Output)
  Time the credential will expire in milliseconds since epoch.

* `issued_at` -
  (Output)
  Time the credential was issued in milliseconds since epoch.

* `status` -
  (Output)
  Status of the credential. Valid values include approved or revoked.

* `scopes` -
  (Output)
  List of scopes to apply to the app.
  Specified scopes must already exist on the API product that
  you associate with the app.

* `api_products` -
  (Output)
  List of API products this credential can be used for.
  Structure is [documented below](#nested_credentials_credentials_api_products).

* `attributes` -
  (Output)
  Developer attributes (name/value pairs). The custom attribute limit is 18.
  Structure is [documented below](#nested_credentials_credentials_attributes).


<a name="nested_credentials_credentials_api_products"></a>The `api_products` block contains:

* `apiproduct` -
  (Output)
  Name of the API product.

* `status` -
  (Output)
  Status of the API product. Valid values are approved or revoked.

<a name="nested_credentials_credentials_attributes"></a>The `attributes` block contains:

* `name` -
  (Output)
  Key of the attribute

* `value` -
  (Output)
  Value of the attribute

## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


DeveloperApp can be imported using any of these accepted formats:

* `{{org_id}}/developers/{{developer_email}}/apps/{{name}}`
* `{{org_id}}/{{developer_email}}/{{name}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import DeveloperApp using one of the formats above. For example:

```tf
import {
  id = "{{org_id}}/developers/{{developer_email}}/apps/{{name}}"
  to = google_apigee_developer_app.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), DeveloperApp can be imported using one of the formats above. For example:

```
$ terraform import google_apigee_developer_app.default {{org_id}}/developers/{{developer_email}}/apps/{{name}}
$ terraform import google_apigee_developer_app.default {{org_id}}/{{developer_email}}/{{name}}
```
