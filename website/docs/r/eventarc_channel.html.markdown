---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Configuration: https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/eventarc/Channel.yaml
#     Template:      https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/terraform/resource.html.markdown.tmpl
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "Eventarc"
description: |-
  The Eventarc Channel resource
---

# google_eventarc_channel

The Eventarc Channel resource


To get more information about Channel, see:

* [API documentation](https://cloud.google.com/eventarc/docs/reference/rest/v1/projects.locations.channels)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/eventarc/standard/docs/third-parties/create-channels)

## Example Usage - Eventarc Channel With Cmek


```hcl
resource "google_eventarc_channel" "primary" {
  location             = "us-central1"
  name                 = "some-channel"
  crypto_key_name      = "some-key"
  third_party_provider = "projects/my-project-name/locations/us-central1/providers/datadog"
}
```

## Argument Reference

The following arguments are supported:


* `name` -
  (Required)
  The resource name of the channel. Must be unique within the location on the project.

* `location` -
  (Required)
  The location for the resource


- - -


* `third_party_provider` -
  (Optional)
  The name of the event provider (e.g. Eventarc SaaS partner) associated with the channel. This provider will be granted permissions to publish events to the channel. Format: `projects/{project}/locations/{location}/providers/{provider_id}`.

* `crypto_key_name` -
  (Optional)
  Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt their event data. It must match the pattern `projects/*/locations/*/keyRings/*/cryptoKeys/*`.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/channels/{{name}}`

* `uid` -
  Server assigned unique identifier for the channel. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.

* `create_time` -
  The creation time.

* `update_time` -
  The last-modified time.

* `pubsub_topic` -
  The name of the Pub/Sub topic created and managed by Eventarc system as a transport for the event delivery. Format: `projects/{project}/topics/{topic_id}`.

* `state` -
  The state of a Channel.

* `activation_token` -
  The activation token for the channel. The token must be used by the provider to register the channel for publishing.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


Channel can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/channels/{{name}}`
* `{{project}}/{{location}}/{{name}}`
* `{{location}}/{{name}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Channel using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/channels/{{name}}"
  to = google_eventarc_channel.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), Channel can be imported using one of the formats above. For example:

```
$ terraform import google_eventarc_channel.default projects/{{project}}/locations/{{location}}/channels/{{name}}
$ terraform import google_eventarc_channel.default {{project}}/{{location}}/{{name}}
$ terraform import google_eventarc_channel.default {{location}}/{{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
