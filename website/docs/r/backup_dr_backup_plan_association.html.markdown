---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Backup and DR Service"
description: |-
  A Backup and DR BackupPlanAssociation.
---

# google_backup_dr_backup_plan_association

A Backup and DR BackupPlanAssociation.

~> **Warning:** This resource is in beta, and should be used with the terraform-provider-google-beta provider.
See [Provider Versions](https://terraform.io/docs/providers/google/guides/provider_versions.html) for more details on beta resources.

To get more information about BackupPlanAssociation, see:

* [API documentation](https://cloud.google.com/backup-disaster-recovery/docs/reference/rest)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/backup-disaster-recovery/docs)

## Example Usage - Backup Dr Bpa


```hcl
 resource "google_service_account" "mySA" {
  provider = google-beta
  account_id   = "my-custom"
  display_name = "Custom SA for VM Instance"
}

resource "google_compute_instance" "myinstance" {
  provider = google-beta
  name         = "test-instance"
  machine_type = "n2-standard-2"
  zone         = "us-central1-a"
  boot_disk {
    initialize_params {
      image = "debian-cloud/debian-11"
      labels = {
        my_label = "value"
      }
    }
  }
  // Local SSD disk
  scratch_disk {
    interface = "NVME"
  }
  network_interface {
    network = "default"
    access_config {
      // Ephemeral public IP
    }
  }
  service_account {
    email  = google_service_account.mySA.email
    scopes = ["cloud-platform"]
  }
}

resource "google_backup_dr_backup_vault" "bv1" {
  provider                                      = google-beta
  location                                      = "us-central1"
  backup_vault_id                               = "bv-bpa"
  backup_minimum_enforced_retention_duration    = "100000s"
   force_delete = "true"
}

resource "google_backup_dr_backup_plan" "bp1" {
  provider       = google-beta
  location       = "us-central1"
  backup_plan_id = "bp-bpa-test"
  resource_type  = "compute.googleapis.com/Instance"
  backup_vault   = google_backup_dr_backup_vault.bv1.id

  backup_rules {
    rule_id                = "rule-1"
    backup_retention_days  = 2

    standard_schedule {
      recurrence_type     = "HOURLY"
      hourly_frequency    = 6
      time_zone           = "UTC"

      backup_window {
        start_hour_of_day = 12
        end_hour_of_day   = 18
      }
    }
  }
}
resource "google_backup_dr_backup_plan_association" "my-backup-plan-association" {
  provider = google-beta
  location = "us-central1"
  resource_type= "compute.googleapis.com/Instance"
  backup_plan_association_id          = "my-bpa"
  resource      = google_compute_instance.myinstance.id
  backup_plan  = google_backup_dr_backup_plan.bp1.name
}
```

## Argument Reference

The following arguments are supported:


* `resource` -
  (Required)
  The resource for which BPA needs to be created

* `backup_plan` -
  (Required)
  The BP with which resource needs to be created

* `resource_type` -
  (Required)
  The resource type of workload on which backupplan is applied

* `location` -
  (Required)
  The location for the backupplan association

* `backup_plan_association_id` -
  (Required)
  The id of backupplan association


- - -


* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/backupPlanAssociations/{{backup_plan_association_id}}`

* `name` -
  The name of backup plan association resource created

* `create_time` -
  The time when the instance was created

* `update_time` -
  The time when the instance was updated.

* `data_source` -
  Resource name of data source which will be used as storage location for backups taken

* `rules_config_info` -
  Message for rules config info
  Structure is [documented below](#nested_rules_config_info).

* `last_successful_backup_consistency_time` -
  The point in time when the last successful backup was captured from the source


<a name="nested_rules_config_info"></a>The `rules_config_info` block contains:

* `rule_id` -
  (Output)
  Backup Rule id fetched from backup plan.

* `last_backup_state` -
  (Output)
  State of last backup taken.

* `last_backup_error` -
  (Output)
  google.rpc.Status object to store the last backup error
  Structure is [documented below](#nested_last_backup_error).


<a name="nested_last_backup_error"></a>The `last_backup_error` block contains:

* `code` -
  (Output)
  The status code, which should be an enum value of [google.rpc.Code]

* `message` -
  (Output)
  A developer-facing error message, which should be in English.

## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 60 minutes.
- `delete` - Default is 60 minutes.

## Import


BackupPlanAssociation can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/backupPlanAssociations/{{backup_plan_association_id}}`
* `{{project}}/{{location}}/{{backup_plan_association_id}}`
* `{{location}}/{{backup_plan_association_id}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import BackupPlanAssociation using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/backupPlanAssociations/{{backup_plan_association_id}}"
  to = google_backup_dr_backup_plan_association.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), BackupPlanAssociation can be imported using one of the formats above. For example:

```
$ terraform import google_backup_dr_backup_plan_association.default projects/{{project}}/locations/{{location}}/backupPlanAssociations/{{backup_plan_association_id}}
$ terraform import google_backup_dr_backup_plan_association.default {{project}}/{{location}}/{{backup_plan_association_id}}
$ terraform import google_backup_dr_backup_plan_association.default {{location}}/{{backup_plan_association_id}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
