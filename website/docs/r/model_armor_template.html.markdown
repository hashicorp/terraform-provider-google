---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Configuration: https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/modelarmor/Template.yaml
#     Template:      https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/terraform/resource.html.markdown.tmpl
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "Model Armor"
description: |-
  A `Template` is a resource of Model Armor that lets you configure how Model Armor screens prompts and responses.
---

# google_model_armor_template

A `Template` is a resource of Model Armor that lets you configure how Model Armor screens prompts and responses.
It functions as sets of customized filters and thresholds for different safety and security confidence levels, allowing control over what content is flagged.



<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=modelarmor_template_basic&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Modelarmor Template Basic


```hcl
resource "google_model_armor_template" "template-basic" {
  location    = "<no value>"
  template_id = "<no value>"

  filter_config {

  }

  template_metadata {

  }
}
```
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=modelarmor_template_filter_config&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Modelarmor Template Filter Config


```hcl
resource "google_model_armor_template" "template-filter-config" {
  location    = "<no value>"
  template_id = "<no value>"

  filter_config {
    rai_settings {
      rai_filters {
        filter_type      = "<no value>"
        confidence_level = "<no value>"
      }
    }
    sdp_settings {
      basic_config {
          filter_enforcement = "<no value>"
      }
    }
    pi_and_jailbreak_filter_settings {
      filter_enforcement = "<no value>"
      confidence_level   = "<no value>"
    }
    malicious_uri_filter_settings {
      filter_enforcement = "<no value>"
    }
  }
  template_metadata {
    multi_language_detection {
    enable_multi_language_detection        = <no value>
    }
  }
}
```
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=modelarmor_template_template_metadata&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Modelarmor Template Template Metadata


```hcl
resource "google_model_armor_template" "template-template-metadata" {
  location    = "<no value>"
  template_id = "<no value>"

  filter_config {
    rai_settings {
      rai_filters {
        filter_type      = "<no value>"
        confidence_level = "<no value>"
      }
    }
  }
  template_metadata {
    custom_llm_response_safety_error_message = "<no value>"
    log_sanitize_operations                  = <no value>
    log_template_operations                  = <no value>
    multi_language_detection {
      enable_multi_language_detection        = <no value>
    }
    ignore_partial_invocation_failures       = <no value>
    custom_prompt_safety_error_code          = <no value>
    custom_prompt_safety_error_message       = "<no value>"
    custom_llm_response_safety_error_code    = <no value>
    enforcement_type                         = "<no value>"
  }
}
```
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=modelarmor_template_label&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Modelarmor Template Label


```hcl
resource "google_model_armor_template" "template-label-advanced-config" {
  location    = "<no value>"
  template_id = "<no value>"

  labels = {
    "test-label" = "<no value>"
  }

  filter_config {
    rai_settings {
      rai_filters {
        filter_type      = "<no value>"
        confidence_level = "<no value>"
      }
    }
    sdp_settings {
      advanced_config {
        inspect_template     = "<no value>"
        deidentify_template  = "<no value>"
      }
    }
  }
  template_metadata {
    multi_language_detection {
      enable_multi_language_detection = <no value>
    }
  }
}
```

## Argument Reference

The following arguments are supported:


* `filter_config` -
  (Required)
  Filters configuration.
  Structure is [documented below](#nested_filter_config).

* `location` -
  (Required)
  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.

* `template_id` -
  (Required)
  Id of the requesting object
  If auto-generating Id server-side, remove this field and
  template_id from the method_signature of Create RPC


<a name="nested_filter_config"></a>The `filter_config` block supports:

* `malicious_uri_filter_settings` -
  (Optional)
  Malicious URI filter settings.
  Structure is [documented below](#nested_filter_config_malicious_uri_filter_settings).

* `rai_settings` -
  (Optional)
  Responsible AI Filter settings.
  Structure is [documented below](#nested_filter_config_rai_settings).

* `sdp_settings` -
  (Optional)
  Sensitive Data Protection settings.
  Structure is [documented below](#nested_filter_config_sdp_settings).

* `pi_and_jailbreak_filter_settings` -
  (Optional)
  Prompt injection and Jailbreak Filter settings.
  Structure is [documented below](#nested_filter_config_pi_and_jailbreak_filter_settings).


<a name="nested_filter_config_malicious_uri_filter_settings"></a>The `malicious_uri_filter_settings` block supports:

* `filter_enforcement` -
  (Optional)
  Tells whether the Malicious URI filter is enabled or disabled.
  Possible values:
  ENABLED
  DISABLED

<a name="nested_filter_config_rai_settings"></a>The `rai_settings` block supports:

* `rai_filters` -
  (Required)
  List of Responsible AI filters enabled for template.
  Structure is [documented below](#nested_filter_config_rai_settings_rai_filters).


<a name="nested_filter_config_rai_settings_rai_filters"></a>The `rai_filters` block supports:

* `filter_type` -
  (Required)
  Possible values:
  SEXUALLY_EXPLICIT
  HATE_SPEECH
  HARASSMENT
  DANGEROUS

* `confidence_level` -
  (Optional)
  Possible values:
  LOW_AND_ABOVE
  MEDIUM_AND_ABOVE
  HIGH

<a name="nested_filter_config_sdp_settings"></a>The `sdp_settings` block supports:

* `advanced_config` -
  (Optional)
  Sensitive Data Protection Advanced configuration.
  Structure is [documented below](#nested_filter_config_sdp_settings_advanced_config).

* `basic_config` -
  (Optional)
  Sensitive Data Protection basic configuration.
  Structure is [documented below](#nested_filter_config_sdp_settings_basic_config).


<a name="nested_filter_config_sdp_settings_advanced_config"></a>The `advanced_config` block supports:

* `inspect_template` -
  (Optional)
  Sensitive Data Protection inspect template resource name
  If only inspect template is provided (de-identify template not provided),
  then Sensitive Data Protection InspectContent action is performed during
  Sanitization. All Sensitive Data Protection findings identified during
  inspection will be returned as SdpFinding in SdpInsepctionResult.
  e.g:-
  `projects/{project}/locations/{location}/inspectTemplates/{inspect_template}`

* `deidentify_template` -
  (Optional)
  Optional Sensitive Data Protection Deidentify template resource name.
  If provided then DeidentifyContent action is performed during Sanitization
  using this template and inspect template. The De-identified data will
  be returned in SdpDeidentifyResult.
  Note that all info-types present in the deidentify template must be present
  in inspect template.
  e.g.
  `projects/{project}/locations/{location}/deidentifyTemplates/{deidentify_template}`

<a name="nested_filter_config_sdp_settings_basic_config"></a>The `basic_config` block supports:

* `filter_enforcement` -
  (Optional)
  Tells whether the Sensitive Data Protection basic config is enabled or
  disabled.
  Possible values:
  ENABLED
  DISABLED

<a name="nested_filter_config_pi_and_jailbreak_filter_settings"></a>The `pi_and_jailbreak_filter_settings` block supports:

* `filter_enforcement` -
  (Optional)
  Tells whether Prompt injection and Jailbreak filter is enabled or
  disabled.
  Possible values:
  ENABLED
  DISABLED

* `confidence_level` -
  (Optional)
  Possible values:
  LOW_AND_ABOVE
  MEDIUM_AND_ABOVE
  HIGH

- - -


* `labels` -
  (Optional)
  Labels as key value pairs
  **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
  Please refer to the field `effective_labels` for all of the labels present on the resource.

* `template_metadata` -
  (Optional)
  Message describing TemplateMetadata
  Structure is [documented below](#nested_template_metadata).

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


<a name="nested_template_metadata"></a>The `template_metadata` block supports:

* `log_template_operations` -
  (Optional)
  If true, log template crud operations.

* `log_sanitize_operations` -
  (Optional)
  If true, log sanitize operations.

* `multi_language_detection` -
  (Optional)
  Metadata to enable multi language detection via template.
  Structure is [documented below](#nested_template_metadata_multi_language_detection).

* `ignore_partial_invocation_failures` -
  (Optional)
  If true, partial detector failures should be ignored.

* `custom_prompt_safety_error_code` -
  (Optional)
  Indicates the custom error code set by the user to be returned to the end
  user by the service extension if the prompt trips Model Armor filters.

* `custom_prompt_safety_error_message` -
  (Optional)
  Indicates the custom error message set by the user to be returned to the
  end user if the prompt trips Model Armor filters.

* `custom_llm_response_safety_error_code` -
  (Optional)
  Indicates the custom error code set by the user to be returned to the end
  user if the LLM response trips Model Armor filters.

* `custom_llm_response_safety_error_message` -
  (Optional)
  Indicates the custom error message set by the user to be returned to the
  end user if the LLM response trips Model Armor filters.

* `enforcement_type` -
  (Optional)
  Possible values:
  INSPECT_ONLY
  INSPECT_AND_BLOCK


<a name="nested_template_metadata_multi_language_detection"></a>The `multi_language_detection` block supports:

* `enable_multi_language_detection` -
  (Required)
  If true, multi language detection will be enabled.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/templates/{{template_id}}`

* `name` -
  Identifier. name of resource

* `create_time` -
  Create time stamp

* `update_time` -
  Update time stamp

* `terraform_labels` -
  The combination of labels configured directly on the resource
   and default labels configured on the provider.

* `effective_labels` -
  All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


Template can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/templates/{{template_id}}`
* `{{project}}/{{location}}/{{template_id}}`
* `{{location}}/{{template_id}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Template using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/templates/{{template_id}}"
  to = google_model_armor_template.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), Template can be imported using one of the formats above. For example:

```
$ terraform import google_model_armor_template.default projects/{{project}}/locations/{{location}}/templates/{{template_id}}
$ terraform import google_model_armor_template.default {{project}}/{{location}}/{{template_id}}
$ terraform import google_model_armor_template.default {{location}}/{{template_id}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
