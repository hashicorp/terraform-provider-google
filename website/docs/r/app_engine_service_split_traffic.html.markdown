---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "App Engine"
layout: "google"
page_title: "Google: google_app_engine_service_split_traffic"
sidebar_current: "docs-google-app-engine-service-split-traffic"
description: |-
  A Service resource is a logical component of an application that can share state and communicate in a secure fashion with other services.
---

# google\_app\_engine\_service\_split\_traffic

A Service resource is a logical component of an application that can share state and communicate in a secure fashion with other services. 
For example, an application that handles customer requests might include separate services to handle tasks such as backend data analysis or API requests from mobile devices. 
Each service has a collection of versions that define a specific set of code used to implement the functionality of that service.


To get more information about ServiceSplitTraffic, see:

* [API documentation](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services)

## Example Usage - App Engine Service Split Traffic


```hcl
resource "google_storage_bucket" "bucket" {
	name = "appengine-static-content"
}

resource "google_storage_bucket_object" "object" {
	name   = "hello-world.zip"
	bucket = "${google_storage_bucket.bucket.name}"
	source = "./test-fixtures/appengine/hello-world.zip"
}

resource "google_app_engine_standard_app_version" "myapp_v1" {
  version_id = "v1"
  service = "myapp"
  runtime = "nodejs10"
  noop_on_destroy = true
  entrypoint {
    shell = "node ./app.js"
  }
  deployment {
    zip {
      source_url = "https://storage.googleapis.com/${google_storage_bucket.bucket.name}/hello-world.zip"
    }  
  }
  env_variables = {
    port = "8080"
  } 
  depends_on = ["google_storage_bucket_object.object"]

}
resource "google_app_engine_standard_app_version" "myapp_v2" {
  version_id = "v2"
  service = "myapp"
  runtime = "nodejs10"
  entrypoint {
    shell = "node ./app.js"
  }
  deployment {
    zip {
      source_url = "https://storage.googleapis.com/${google_storage_bucket.bucket.name}/hello-world.zip"
    }  
  }
  env_variables = {
    port = "8080"
  } 
  depends_on = ["google_app_engine_standard_app_version.myapp_v1"]
}

resource "google_app_engine_service_split_traffic" "myapp" {
  service_id = "${google_app_engine_standard_app_version.myapp_v2.service}"
  migrate_traffic = false
  split {
    shard_by = "IP"
    allocations = {
      v1 = 0.75
      v2 = 0.25
    }
  }
  depends_on = ["google_app_engine_standard_app_version.myapp_v2"]
}
resource "google_app_engine_service_split_traffic" "myapp2" {
  service_id = "${google_app_engine_standard_app_version.myapp_v2.service}"
  migrate_traffic = false
  split {
    allocations = {
      v1 = 1
    }
  }
  depends_on = ["google_app_engine_service_split_traffic.myapp"]
}
```

## Argument Reference

The following arguments are supported:


* `split` -
  (Required)
  Mapping that defines fractional HTTP traffic diversion to different versions within the service.  Structure is documented below.


The `split` block supports:

* `shard_by` -
  (Optional)
  Mechanism used to determine which version a request is sent to. The traffic selection algorithm will be stable for either type until allocations are changed.

* `allocations` -
  (Required)
  Mapping from version IDs within the service to fractional (0.000, 1] allocations of traffic for that version. Each version can be specified only once, but some versions in the service may not have any traffic allocation. Services that have traffic allocated cannot be deleted until either the service is deleted or their traffic allocation is removed. Allocations must sum to 1. Up to two decimal place precision is supported for IP-based splits and up to three decimal places is supported for cookie-based splits.

- - -


* `name` -
  (Optional)
  Full path to the Service resource in the API. Example apps/myapp/services/default.
  This field is used in responses only. Any value specified here in a request is ignored.

* `service_id` -
  (Optional)
  Relative name of the service within the application. Example default.

* `migrate_traffic` -
  (Optional)
  If set to true traffic will be migrated to this version.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.



## Timeouts

This resource provides the following
[Timeouts](/docs/configuration/resources.html#timeouts) configuration options:

- `create` - Default is 4 minutes.
- `update` - Default is 4 minutes.
- `delete` - Default is 4 minutes.

## Import

ServiceSplitTraffic can be imported using any of these accepted formats:

```
$ terraform import google_app_engine_service_split_traffic.default apps/{{project}}/services/{{service_id}}
$ terraform import google_app_engine_service_split_traffic.default {{project}}/{{service_id}}
$ terraform import google_app_engine_service_split_traffic.default {{service_id}}
```

-> If you're importing a resource with beta features, make sure to include `-provider=google-beta`
as an argument so that Terraform uses the correct provider to import your resource.

## User Project Overrides

This resource supports [User Project Overrides](https://www.terraform.io/docs/providers/google/guides/provider_reference.html#user_project_override).
