---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
layout: "google"
page_title: "Google: google_compute_health_check"
sidebar_current: "docs-google-compute-health-check"
description: |-
  Health Checks determine whether instances are responsive and able to do work.
---

# google\_compute\_health\_check

Health Checks determine whether instances are responsive and able to do work.
They are an important part of a comprehensive load balancing configuration,
as they enable monitoring instances behind load balancers.

Health Checks poll instances at a specified interval. Instances that
do not respond successfully to some number of probes in a row are marked
as unhealthy. No new connections are sent to unhealthy instances,
though existing connections will continue. The health check will
continue to poll unhealthy instances. If an instance later responds
successfully to some number of consecutive probes, it is marked
healthy again and can receive new connections.


To get more information about HealthCheck, see:

* [API documentation](https://cloud.google.com/compute/docs/reference/rest/latest/healthChecks)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/load-balancing/docs/health-checks)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=health_check_basic&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Health Check Basic


```hcl
resource "google_compute_health_check" "internal-health-check" {
 name = "internal-service-health-check"

 timeout_sec        = 1
 check_interval_sec = 1

 tcp_health_check {
   port = "80"
 }
}
```

## Argument Reference

The following arguments are supported:


* `name` -
  (Required)
  Name of the resource. Provided by the client when the resource is
  created. The name must be 1-63 characters long, and comply with
  RFC1035.  Specifically, the name must be 1-63 characters long and
  match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means
  the first character must be a lowercase letter, and all following
  characters must be a dash, lowercase letter, or digit, except the
  last character, which cannot be a dash.


- - -


* `check_interval_sec` -
  (Optional)
  How often (in seconds) to send a health check. The default value is 5
  seconds.

* `description` -
  (Optional)
  An optional description of this resource. Provide this property when
  you create the resource.

* `healthy_threshold` -
  (Optional)
  A so-far unhealthy instance will be marked healthy after this many
  consecutive successes. The default value is 2.

* `timeout_sec` -
  (Optional)
  How long (in seconds) to wait before claiming failure.
  The default value is 5 seconds.  It is invalid for timeoutSec to have
  greater value than checkIntervalSec.

* `unhealthy_threshold` -
  (Optional)
  A so-far healthy instance will be marked unhealthy after this many
  consecutive failures. The default value is 2.

* `http_health_check` -
  (Optional)
  A nested object resource  Structure is documented below.

* `https_health_check` -
  (Optional)
  A nested object resource  Structure is documented below.

* `tcp_health_check` -
  (Optional)
  A nested object resource  Structure is documented below.

* `ssl_health_check` -
  (Optional)
  A nested object resource  Structure is documented below.
* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


The `http_health_check` block supports:

* `host` -
  (Optional)
  The value of the host header in the HTTP health check request.
  If left empty (default value), the public IP on behalf of which this health
  check is performed will be used.

* `request_path` -
  (Optional)
  The request path of the HTTP health check request.
  The default value is /.

* `port` -
  (Optional)
  The TCP port number for the HTTP health check request.
  The default value is 80.

* `proxy_header` -
  (Optional)
  Specifies the type of proxy header to append before sending data to the
  backend, either NONE or PROXY_V1. The default is NONE.

The `https_health_check` block supports:

* `host` -
  (Optional)
  The value of the host header in the HTTPS health check request.
  If left empty (default value), the public IP on behalf of which this health
  check is performed will be used.

* `request_path` -
  (Optional)
  The request path of the HTTPS health check request.
  The default value is /.

* `port` -
  (Optional)
  The TCP port number for the HTTPS health check request.
  The default value is 443.

* `proxy_header` -
  (Optional)
  Specifies the type of proxy header to append before sending data to the
  backend, either NONE or PROXY_V1. The default is NONE.

The `tcp_health_check` block supports:

* `request` -
  (Optional)
  The application data to send once the TCP connection has been
  established (default value is empty). If both request and response are
  empty, the connection establishment alone will indicate health. The request
  data can only be ASCII.

* `response` -
  (Optional)
  The bytes to match against the beginning of the response data. If left empty
  (the default value), any response will indicate health. The response data
  can only be ASCII.

* `port` -
  (Optional)
  The TCP port number for the TCP health check request.
  The default value is 443.

* `proxy_header` -
  (Optional)
  Specifies the type of proxy header to append before sending data to the
  backend, either NONE or PROXY_V1. The default is NONE.

The `ssl_health_check` block supports:

* `request` -
  (Optional)
  The application data to send once the SSL connection has been
  established (default value is empty). If both request and response are
  empty, the connection establishment alone will indicate health. The request
  data can only be ASCII.

* `response` -
  (Optional)
  The bytes to match against the beginning of the response data. If left empty
  (the default value), any response will indicate health. The response data
  can only be ASCII.

* `port` -
  (Optional)
  The TCP port number for the SSL health check request.
  The default value is 443.

* `proxy_header` -
  (Optional)
  Specifies the type of proxy header to append before sending data to the
  backend, either NONE or PROXY_V1. The default is NONE.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:


* `creation_timestamp` -
  Creation timestamp in RFC3339 text format.

* `type` -
  The type of the health check. One of HTTP, HTTPS, TCP, or SSL.
* `self_link` - The URI of the created resource.


## Timeouts

This resource provides the following
[Timeouts](/docs/configuration/resources.html#timeouts) configuration options:

- `create` - Default is 4 minutes.
- `update` - Default is 4 minutes.
- `delete` - Default is 4 minutes.

## Import

HealthCheck can be imported using any of these accepted formats:

```
$ terraform import google_compute_health_check.default projects/{{project}}/global/healthChecks/{{name}}
$ terraform import google_compute_health_check.default {{project}}/{{name}}
$ terraform import google_compute_health_check.default {{name}}
```
