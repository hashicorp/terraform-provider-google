---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "GKEHub"
description: |-
  RBACRoleBinding represents a rbacrolebinding across the Fleet.
---

# google\_gke\_hub\_scope\_rbac\_role\_binding

RBACRoleBinding represents a rbacrolebinding across the Fleet.


To get more information about ScopeRBACRoleBinding, see:

* [API documentation](https://cloud.google.com/anthos/fleet-management/docs/reference/rest/v1/projects.locations.scopes.rbacrolebindings)
* How-to Guides
    * [Registering a Cluster](https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster#register_cluster)

## Example Usage - Gkehub Scope Rbac Role Binding Basic


```hcl
resource "google_gke_hub_scope" "scoperbacrolebinding" {
  scope_id = "tf-test-scope%{random_suffix}"
}

resource "google_gke_hub_scope_rbac_role_binding" "scoperbacrolebinding" {
  scope_rbac_role_binding_id = "tf-test-scope-rbac-role-binding%{random_suffix}"
  scope_id = "tf-test-scope%{random_suffix}"
  user = "test-email@gmail.com"
  role {
    predefined_role = "ADMIN"
  }
  labels = {
      key = "value" 
  }
  depends_on = [google_gke_hub_scope.scoperbacrolebinding]
}
```

## Argument Reference

The following arguments are supported:


* `scope_rbac_role_binding_id` -
  (Required)
  The client-provided identifier of the RBAC Role Binding.

* `role` -
  (Required)
  Role to bind to the principal.
  Structure is [documented below](#nested_role).

* `scope_id` -
  (Required)
  Id of the scope


<a name="nested_role"></a>The `role` block supports:

* `predefined_role` -
  (Optional)
  PredefinedRole is an ENUM representation of the default Kubernetes Roles
  Possible values are: `UNKNOWN`, `ADMIN`, `EDIT`, `VIEW`.

- - -


* `user` -
  (Optional)
  Principal that is be authorized in the cluster (at least of one the oneof
  is required). Updating one will unset the other automatically.
  user is the name of the user as seen by the kubernetes cluster, example
  "alice" or "alice@domain.tld"

* `group` -
  (Optional)
  Principal that is be authorized in the cluster (at least of one the oneof
  is required). Updating one will unset the other automatically.
  group is the group, as seen by the kubernetes cluster.

* `labels` -
  (Optional)
  Labels for this ScopeRBACRoleBinding.

  **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
  Please refer to the field `effective_labels` for all of the labels present on the resource.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/global/scopes/{{scope_id}}/rbacrolebindings/{{scope_rbac_role_binding_id}}`

* `name` -
  The resource name for the RBAC Role Binding

* `uid` -
  Google-generated UUID for this resource.

* `create_time` -
  Time the RBAC Role Binding was created in UTC.

* `update_time` -
  Time the RBAC Role Binding was updated in UTC.

* `delete_time` -
  Time the RBAC Role Binding was deleted in UTC.

* `state` -
  State of the RBAC Role Binding resource.
  Structure is [documented below](#nested_state).

* `terraform_labels` -
  The combination of labels configured directly on the resource
   and default labels configured on the provider.

* `effective_labels` -
  All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.


<a name="nested_state"></a>The `state` block contains:

* `code` -
  (Output)
  Code describes the state of a RBAC Role Binding resource.

## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


ScopeRBACRoleBinding can be imported using any of these accepted formats:

```
$ terraform import google_gke_hub_scope_rbac_role_binding.default projects/{{project}}/locations/global/scopes/{{scope_id}}/rbacrolebindings/{{scope_rbac_role_binding_id}}
$ terraform import google_gke_hub_scope_rbac_role_binding.default {{project}}/{{scope_id}}/{{scope_rbac_role_binding_id}}
$ terraform import google_gke_hub_scope_rbac_role_binding.default {{scope_id}}/{{scope_rbac_role_binding_id}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
