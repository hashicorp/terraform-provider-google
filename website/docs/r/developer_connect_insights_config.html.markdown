---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Configuration: https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/developerconnect/InsightsConfig.yaml
#     Template:      https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/terraform/resource.html.markdown.tmpl
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "Developer Connect"
description: |-
  Description
---

# google_developer_connect_insights_config

Description



## Example Usage - Developer Connect Insights Config Basic


```hcl
resource "google_project" "project" {
  project_id = "dci-tf-%{random_suffix}"
  name = "Service Project"
  org_id = "123456789"
  billing_account = "000000-0000000-0000000-000000"
  deletion_policy = "DELETE"
}

# Grant Permissions
resource "google_project_iam_member" "apphub_permissions" {
  project = google_project.project.project_id
  role = "roles/apphub.admin"
  member = "serviceAccount:hashicorp-test-runner@ci-test-project-188019.iam.gserviceaccount.com"
}

resource "google_project_iam_member" "insights_agent" {
  project = google_project.project.project_id
  role = "roles/developerconnect.insightsAgent"
  member = "serviceAccount:66214305248-compute@developer.gserviceaccount.com"
}

# Enable APIs
resource "google_project_service" "apphub_api_service" {
  project = google_project.project.project_id
  service = "apphub.googleapis.com"
  disable_dependent_services=true
  depends_on = [google_project.project]
}

resource "google_project_service" "containeranalysis_api" {
  project = google_project.project.project_id
  service = "containeranalysis.googleapis.com"
  disable_dependent_services=true
  depends_on = [google_project.project]
}

resource "google_project_service" "containerscanning_api" {
  project = google_project.project.project_id
  service = "containerscanning.googleapis.com"
  disable_dependent_services=true
  depends_on = [google_project.project]
}

resource "google_project_service" "container_api" {
  project = google_project.project.project_id
  service = "container.googleapis.com"
  disable_dependent_services=true
  depends_on = [google_project.project]
}

resource "google_project_service" "artifactregistry_api" {
  project = google_project.project.project_id
  service = "artifactregistry.googleapis.com"
  disable_dependent_services=true
  depends_on = [google_project.project]
}

resource "google_project_service" "cloudbuild_api" {
  project = google_project.project.project_id
  service = "cloudbuild.googleapis.com"
  disable_dependent_services=true
  depends_on = [google_project.project]
}

resource "google_project_service" "cloudasset_api" {
  project = google_project.project.project_id
  service = "cloudasset.googleapis.com"
  disable_dependent_services=true
  depends_on = [google_project.project]
}

resource "google_project_service" "compute_api" {
  project = google_project.project.project_id
  service = "compute.googleapis.com"
  disable_dependent_services=true
  depends_on = [google_project.project]
}

resource "google_project_service" "devconnect_api" {
  project = google_project.project.project_id
  service = "developerconnect.googleapis.com"
  depends_on = [google_project.project]
}

# Wait delay after enabling APIs and granting permissions
resource "time_sleep" "wait_for_propagation" {
  depends_on = [
    google_project_iam_member.apphub_permissions,
    google_project_iam_member.insights_agent,
    google_project_service.apphub_api_service,
    google_project_service.containeranalysis_api,
    google_project_service.containerscanning_api,
    google_project_service.container_api,
    google_project_service.artifactregistry_api,
    google_project_service.artifactregistry_api,
    google_project_service.cloudbuild_api,
    google_project_service.cloudasset_api,
    google_project_service.compute_api,
    google_project_service.devconnect_api,
  ]
  create_duration  = "120s"
}

resource "google_apphub_application" "my_apphub_application" {
  location = "us-central1"
  application_id = "tf-test-example-application%{random_suffix}"
  scope {
    type = "REGIONAL"
  }
  project = google_project.project.project_id
  depends_on = [time_sleep.wait_for_propagation]
}

resource "google_developer_connect_insights_config" "insights_config" {
  location = "us-central1"
  insights_config_id = "tf-test-ic%{random_suffix}"
  project = google_project.project.project_id
  annotations = {}
  labels = {}
  app_hub_application = format("//apphub.googleapis.com/projects/%s/locations/%s/applications/%s",
        google_project.project.number,
        google_apphub_application.my_apphub_application.location,
        google_apphub_application.my_apphub_application.application_id)
  artifact_configs {
    google_artifact_analysis {
        project_id = google_project.project.project_id
    }
    google_artifact_registry {
        artifact_registry_package = "my-package"
        project_id                = google_project.project.project_id
    }
    uri = "us-docker.pkg.dev/my-project/my-repo/my-image"
  }
  depends_on = [time_sleep.wait_for_propagation]
}
```

## Argument Reference

The following arguments are supported:


* `app_hub_application` -
  (Required)
  The name of the App Hub Application.
  Format:
  projects/{project}/locations/{location}/applications/{application}

* `location` -
  (Required)
  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.

* `insights_config_id` -
  (Required)
  ID of the requesting InsightsConfig.


* `artifact_configs` -
  (Optional)
  The artifact configurations of the artifacts that are deployed.
  Structure is [documented below](#nested_artifact_configs).

* `annotations` -
  (Optional)
  User specified annotations. See https://google.aip.dev/148#annotations
  for more details such as format and size limitations.
  **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
  Please refer to the field `effective_annotations` for all of the annotations present on the resource.

* `labels` -
  (Optional)
  Set of labels associated with an InsightsConfig.
  **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
  Please refer to the field `effective_labels` for all of the labels present on the resource.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.



<a name="nested_artifact_configs"></a>The `artifact_configs` block supports:

* `google_artifact_registry` -
  (Optional)
  Google Artifact Registry configurations.
  Structure is [documented below](#nested_artifact_configs_artifact_configs_google_artifact_registry).

* `google_artifact_analysis` -
  (Optional)
  Google Artifact Analysis configurations.
  Structure is [documented below](#nested_artifact_configs_artifact_configs_google_artifact_analysis).

* `uri` -
  (Optional)
  The URI of the artifact that is deployed.
  e.g. `us-docker.pkg.dev/my-project/my-repo/image`.
  The URI does not include the tag / digest because it captures a lineage of
  artifacts.


<a name="nested_artifact_configs_artifact_configs_google_artifact_registry"></a>The `google_artifact_registry` block supports:

* `project_id` -
  (Required)
  The host project of Artifact Registry.

* `artifact_registry_package` -
  (Required)
  The name of the artifact registry package.

<a name="nested_artifact_configs_artifact_configs_google_artifact_analysis"></a>The `google_artifact_analysis` block supports:

* `project_id` -
  (Required)
  The project id of the project where the provenance is stored.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/insightsConfigs/{{insights_config_id}}`

* `name` -
  Identifier. The name of the InsightsConfig.
  Format:
  projects/{project}/locations/{location}/insightsConfigs/{insightsConfig}

* `update_time` -
  [Output only] Update timestamp

* `reconciling` -
  Reconciling (https://google.aip.dev/128#reconciliation).
  Set to true if the current state of InsightsConfig does not match the
  user's intended state, and the service is actively updating the resource to
  reconcile them. This can happen due to user-triggered updates or
  system actions like failover or maintenance.

* `errors` -
  Any errors that occurred while setting up the InsightsConfig.
  Each error will be in the format: `field_name: error_message`, e.g.
  GetAppHubApplication: Permission denied while getting App Hub
  application. Please grant permissions to the P4SA.
  Structure is [documented below](#nested_errors).

* `create_time` -
  [Output only] Create timestamp

* `runtime_configs` -
  The runtime configurations where the application is deployed.
  Structure is [documented below](#nested_runtime_configs).

* `state` -
  The state of the InsightsConfig.
  Possible values:
  STATE_UNSPECIFIED
  PENDING
  COMPLETE
  ERROR

* `effective_annotations` -
  All of annotations (key/value pairs) present on the resource in GCP, including the annotations configured through Terraform, other clients and services.

* `terraform_labels` -
  The combination of labels configured directly on the resource
   and default labels configured on the provider.

* `effective_labels` -
  All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.


<a name="nested_errors"></a>The `errors` block contains:

* `code` -
  (Output)
  The status code, which should be an enum value of google.rpc.Code.

* `message` -
  (Output)
  A developer-facing error message, which should be in English. Any
  user-facing error message should be localized and sent in the
  google.rpc.Status.details field, or localized by the client.

* `details` -
  (Output)
  A list of messages that carry the error details.  There is a common set of
  message types for APIs to use.
  Structure is [documented below](#nested_errors_errors_details).


<a name="nested_errors_errors_details"></a>The `details` block contains:

* `detail_message` -
  (Output)
  A message with details about the error.

<a name="nested_runtime_configs"></a>The `runtime_configs` block contains:

* `uri` -
  (Required)
  The URI of the runtime configuration.
  For GKE, this is the cluster name.
  For Cloud Run, this is the service name.

* `state` -
  (Output)
  The state of the Runtime.
  Possible values:
  STATE_UNSPECIFIED
  LINKED
  UNLINKED

* `gke_workload` -
  (Optional)
  GKEWorkload represents the Google Kubernetes Engine runtime.
  Structure is [documented below](#nested_runtime_configs_runtime_configs_gke_workload).

* `app_hub_workload` -
  (Optional)
  AppHubWorkload represents the App Hub Workload.
  Structure is [documented below](#nested_runtime_configs_runtime_configs_app_hub_workload).


<a name="nested_runtime_configs_runtime_configs_gke_workload"></a>The `gke_workload` block supports:

* `cluster` -
  (Required)
  The name of the GKE cluster.
  Format:
  `projects/{project}/locations/{location}/clusters/{cluster}`.

* `deployment` -
  (Output)
  The name of the GKE deployment.
  Format:
  `projects/{project}/locations/{location}/clusters/{cluster}/namespaces/{namespace}/deployments/{deployment}`.

<a name="nested_runtime_configs_runtime_configs_app_hub_workload"></a>The `app_hub_workload` block supports:

* `criticality` -
  (Output)
  The criticality of the App Hub Workload.

* `environment` -
  (Output)
  The environment of the App Hub Workload.

* `workload` -
  (Output)
  Output only. The name of the App Hub Workload.
  Format:
  `projects/{project}/locations/{location}/applications/{application}/workloads/{workload}`.

## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


InsightsConfig can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/insightsConfigs/{{insights_config_id}}`
* `{{project}}/{{location}}/{{insights_config_id}}`
* `{{location}}/{{insights_config_id}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import InsightsConfig using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/insightsConfigs/{{insights_config_id}}"
  to = google_developer_connect_insights_config.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), InsightsConfig can be imported using one of the formats above. For example:

```
$ terraform import google_developer_connect_insights_config.default projects/{{project}}/locations/{{location}}/insightsConfigs/{{insights_config_id}}
$ terraform import google_developer_connect_insights_config.default {{project}}/{{location}}/{{insights_config_id}}
$ terraform import google_developer_connect_insights_config.default {{location}}/{{insights_config_id}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
