---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Configuration: https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/saasservicemgmt/UnitKind.yaml
#     Template:      https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/terraform/resource.html.markdown.tmpl
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "SaaS Runtime"
description: |-
  A UnitKind serves as a template or type definition for a group of Units.
---

# google_saas_runtime_unit_kind

A UnitKind serves as a template or type definition for a group of Units. Units that belong to the same UnitKind are managed together, follow the same release model, and are typically updated together through rollouts.

~> **Warning:** This resource is in beta, and should be used with the terraform-provider-google-beta provider.
See [Provider Versions](https://terraform.io/docs/providers/google/guides/provider_versions.html) for more details on beta resources.


## Example Usage - Saas Runtime Unit Kind Basic


```hcl
resource "google_saas_runtime_saas" "example_saas" {
  provider = google-beta
  saas_id  = "example-saas"
  location = "global"

  locations {
    name = "us-central1"
  }
}

resource "google_saas_runtime_unit_kind" "cluster_unit_kind" {
  provider = google-beta
  location = "global"
  unit_kind_id = "cluster-unitkind"
  saas = google_saas_runtime_saas.example_saas.id
}

resource "google_saas_runtime_unit_kind" "example" {
  provider = google-beta
  location = "global"
  unit_kind_id = "app-unitkind"
  saas = google_saas_runtime_saas.example_saas.id

  dependencies {
    unit_kind = google_saas_runtime_unit_kind.cluster_unit_kind.id
    alias     = "cluster"
  }
}
```

## Argument Reference

The following arguments are supported:


* `saas` -
  (Required)
  A reference to the Saas that defines the product (managed service) that
  the producer wants to manage with SaaS Runtime. Part of the SaaS Runtime
  common data model. Immutable once set.

* `location` -
  (Required)
  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.

* `unit_kind_id` -
  (Required)
  The ID value for the new unit kind.


* `annotations` -
  (Optional)
  Annotations is an unstructured key-value map stored with a resource that
  may be set by external tools to store and retrieve arbitrary metadata.
  They are not queryable and should be preserved when modifying objects.
  More info: https://kubernetes.io/docs/user-guide/annotations
  **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
  Please refer to the field `effective_annotations` for all of the annotations present on the resource.

* `dependencies` -
  (Optional)
  List of other unit kinds that this release will depend on. Dependencies
  will be automatically provisioned if not found. Maximum 10.
  Structure is [documented below](#nested_dependencies).

* `input_variable_mappings` -
  (Optional)
  List of inputVariables for this release that will either be retrieved from
  a dependency’s outputVariables, or will be passed on to a dependency’s
  inputVariables. Maximum 100.
  Structure is [documented below](#nested_input_variable_mappings).

* `labels` -
  (Optional)
  The labels on the resource, which can be used for categorization.
  similar to Kubernetes resource labels.
  **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
  Please refer to the field `effective_labels` for all of the labels present on the resource.

* `output_variable_mappings` -
  (Optional)
  List of outputVariables for this unit kind will be passed to this unit's
  outputVariables. Maximum 100.
  Structure is [documented below](#nested_output_variable_mappings).

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.



<a name="nested_dependencies"></a>The `dependencies` block supports:

* `alias` -
  (Required)
  An alias for the dependency. Used for input variable mapping.

* `unit_kind` -
  (Required)
  The unit kind of the dependency.

<a name="nested_input_variable_mappings"></a>The `input_variable_mappings` block supports:

* `from` -
  (Optional)
  Output variables whose values will be passed on to dependencies
  Structure is [documented below](#nested_input_variable_mappings_input_variable_mappings_from).

* `to` -
  (Optional)
  Input variables whose values will be passed on to dependencies
  Structure is [documented below](#nested_input_variable_mappings_input_variable_mappings_to).

* `variable` -
  (Required)
  name of the variable


<a name="nested_input_variable_mappings_input_variable_mappings_from"></a>The `from` block supports:

* `dependency` -
  (Required)
  Alias of the dependency that the outputVariable will pass its value to

* `output_variable` -
  (Required)
  Name of the outputVariable on the dependency

<a name="nested_input_variable_mappings_input_variable_mappings_to"></a>The `to` block supports:

* `dependency` -
  (Required)
  Alias of the dependency that the inputVariable will pass its value to

* `ignore_for_lookup` -
  (Optional)
  Tells SaaS Runtime if this mapping should be used during lookup or not

* `input_variable` -
  (Required)
  Name of the inputVariable on the dependency

<a name="nested_output_variable_mappings"></a>The `output_variable_mappings` block supports:

* `from` -
  (Optional)
  Output variables whose values will be passed on to dependencies
  Structure is [documented below](#nested_output_variable_mappings_output_variable_mappings_from).

* `to` -
  (Optional)
  Input variables whose values will be passed on to dependencies
  Structure is [documented below](#nested_output_variable_mappings_output_variable_mappings_to).

* `variable` -
  (Required)
  name of the variable


<a name="nested_output_variable_mappings_output_variable_mappings_from"></a>The `from` block supports:

* `dependency` -
  (Required)
  Alias of the dependency that the outputVariable will pass its value to

* `output_variable` -
  (Required)
  Name of the outputVariable on the dependency

<a name="nested_output_variable_mappings_output_variable_mappings_to"></a>The `to` block supports:

* `dependency` -
  (Required)
  Alias of the dependency that the inputVariable will pass its value to

* `ignore_for_lookup` -
  (Optional)
  Tells SaaS Runtime if this mapping should be used during lookup or not

* `input_variable` -
  (Required)
  Name of the inputVariable on the dependency

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/unitKinds/{{unit_kind_id}}`

* `create_time` -
  The timestamp when the resource was created.

* `etag` -
  An opaque value that uniquely identifies a version or
  generation of a resource. It can be used to confirm that the client
  and server agree on the ordering of a resource being written.

* `name` -
  Identifier. The resource name (full URI of the resource) following the standard naming
  scheme:
  "projects/{project}/locations/{location}/unitKinds/{unitKind}"

* `uid` -
  The unique identifier of the resource. UID is unique in the time
  and space for this resource within the scope of the service. It is
  typically generated by the server on successful creation of a resource
  and must not be changed. UID is used to uniquely identify resources
  with resource name reuses. This should be a UUID4.

* `update_time` -
  The timestamp when the resource was last updated. Any
  change to the resource made by users must refresh this value.
  Changes to a resource made by the service should refresh this value.

* `effective_annotations` -
  All of annotations (key/value pairs) present on the resource in GCP, including the annotations configured through Terraform, other clients and services.

* `terraform_labels` -
  The combination of labels configured directly on the resource
   and default labels configured on the provider.

* `effective_labels` -
  All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


UnitKind can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/unitKinds/{{unit_kind_id}}`
* `{{project}}/{{location}}/{{unit_kind_id}}`
* `{{location}}/{{unit_kind_id}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import UnitKind using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/unitKinds/{{unit_kind_id}}"
  to = google_saas_runtime_unit_kind.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), UnitKind can be imported using one of the formats above. For example:

```
$ terraform import google_saas_runtime_unit_kind.default projects/{{project}}/locations/{{location}}/unitKinds/{{unit_kind_id}}
$ terraform import google_saas_runtime_unit_kind.default {{project}}/{{location}}/{{unit_kind_id}}
$ terraform import google_saas_runtime_unit_kind.default {{location}}/{{unit_kind_id}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
