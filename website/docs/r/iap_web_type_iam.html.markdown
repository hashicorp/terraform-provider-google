---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
layout: "google"
page_title: "Google: google_iap_web_type_iam"
sidebar_current: "docs-google-iap-web-type-iam"
description: |-
  Collection of resources to manage IAM policy for IapWebType
---

# IAM policy for IapWebType
Three different resources help you manage your IAM policy for Iap WebType. Each of these resources serves a different use case:

* `google_iap_web_type_iam_policy`: Authoritative. Sets the IAM policy for the webtype and replaces any existing policy already attached.
* `google_iap_web_type_iam_binding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the webtype are preserved.
* `google_iap_web_type_iam_member`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the webtype are preserved.

~> **Note:** `google_iap_web_type_iam_policy` **cannot** be used in conjunction with `google_iap_web_type_iam_binding` and `google_iap_web_type_iam_member` or they will fight over what your policy should be.

~> **Note:** `google_iap_web_type_iam_binding` resources **can be** used in conjunction with `google_iap_web_type_iam_member` resources **only if** they do not grant privilege to the same role.



## google\_iap\_web\_type\_iam\_policy

```hcl
data "google_iam_policy" "admin" {
  binding {
    role    = "roles/editor"
    members = [
      "user:jane@example.com",
    ]
  }
}

resource "google_iap_web_type_iam_policy" "editor" {
  web_type       = "projects/{{project}}/iap_web/{{web_type}}"
  policy_data = "${data.google_iam_policy.admin.policy_data}"
}
```

## google\_iap\_web\_type\_iam\_binding

```hcl
resource "google_iap_web_type_iam_binding" "editor" {
  web_type   = "projects/{{project}}/iap_web/{{web_type}}"
  role    = "roles/editor"
  members = [
    "user:jane@example.com",
  ]
}
```

## google\_iap\_web\_type\_iam\_member

```hcl
resource "google_iap_web_type_iam_member" "editor" {
  web_type  = "projects/{{project}}/iap_web/{{web_type}}"
  role   = "roles/editor"
  member = "user:jane@example.com"
}
```

## Argument Reference

The following arguments are supported:

* `webtype` - (Required) The webtype name or id to bind to attach IAM policy to.

* `project` - (Optional) The project in which the resource belongs. If it
    is not provided, the provider project is used.

* `member/members` - (Required) Identities that will be granted the privilege in `role`.
  Each entry can have one of the following values:
  * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
  * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
  * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
  * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
  * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
  * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.

* `role` - (Required) The role that should be applied. Only one
    `google_iap_web_type_iam_binding` can be used per role. Note that custom roles must be of the format
    `[projects|organizations]/{parent-name}/roles/{role-name}`.

* `policy_data` - (Required only by `google_iap_web_type_iam_policy`) The policy data generated by
  a `google_iam_policy` data source.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are
exported:

* `etag` - (Computed) The etag of the webtype's IAM policy.

## Import

Iap webtype IAM resources can be imported using the project, webtype name, role and member.

```
$ terraform import google_iap_web_type_iam_policy.editor projects/{{project}}/iap_web/{{web_type}}
$ terraform import google_iap_web_type_iam_binding.editor "projects/{{project}}/iap_web/{{web_type}} roles/editor"

$ terraform import google_iap_web_type_iam_member.editor "projects/{{project}}/iap_web/{{web_type}} roles/editor jane@example.com"
```

-> If you're importing a resource with beta features, make sure to include `-provider=google-beta`
as an argument so that Terraform uses the correct provider to import your resource.
