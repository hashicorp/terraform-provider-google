---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "DatabaseMigrationService"
description: |-
  A migration job definition.
---

# google_database_migration_service_migration_job

A migration job definition.


To get more information about MigrationJob, see:

* [API documentation](https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/create)
* How-to Guides
    * [Database Migration](https://cloud.google.com/database-migration/docs/)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=database_migration_service_migration_job_mysql_to_mysql&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Database Migration Service Migration Job Mysql To Mysql


```hcl
data "google_project" "project" {
}

resource "google_sql_database_instance" "source_csql" {
  name             = "source-csql"
  database_version = "MYSQL_5_7"
  settings {
    tier = "db-n1-standard-1"
    deletion_protection_enabled = false
  }
  deletion_protection = false
}

resource "google_sql_ssl_cert" "source_sql_client_cert" {
  common_name = "cert"
  instance    = google_sql_database_instance.source_csql.name

  depends_on = [google_sql_database_instance.source_csql]
}

resource "google_sql_user" "source_sqldb_user" {
  name     = "username"
  instance = google_sql_database_instance.source_csql.name
  password = "password"

  depends_on = [google_sql_ssl_cert.source_sql_client_cert]
}

resource "google_database_migration_service_connection_profile" "source_cp" {
  location              = "us-central1"
  connection_profile_id = "source-cp"
  display_name          = "source-cp_display"
  labels = {
    foo = "bar"
  }
  mysql {
    host     = google_sql_database_instance.source_csql.ip_address.0.ip_address
    port     = 3306
    username = google_sql_user.source_sqldb_user.name
    password = google_sql_user.source_sqldb_user.password
    ssl {
      client_key         = google_sql_ssl_cert.source_sql_client_cert.private_key
      client_certificate = google_sql_ssl_cert.source_sql_client_cert.cert
      ca_certificate     = google_sql_ssl_cert.source_sql_client_cert.server_ca_cert
    }
    cloud_sql_id = "source-csql"
  }

  depends_on = [google_sql_user.source_sqldb_user]
}

resource "google_sql_database_instance" "destination_csql" {
  name             = "destination-csql"
  database_version = "MYSQL_5_7"
  settings {
    tier = "db-n1-standard-1"
    deletion_protection_enabled = false
  }
  deletion_protection = false
}

resource "google_database_migration_service_connection_profile" "destination_cp" {
  location              = "us-central1"
  connection_profile_id = "destination-cp"
  display_name          = "destination-cp_display"
  labels = {
    foo = "bar"
  }
  mysql {
    cloud_sql_id = "destination-csql"
  }
  depends_on = [google_sql_database_instance.destination_csql]
}

resource "google_compute_network" "default" {
  name = "destination-csql"
}

resource "google_database_migration_service_migration_job" "mysqltomysql" {
  location              = "us-central1"
  migration_job_id = "my-migrationid"
  display_name = "my-migrationid_display"
  labels = {
    foo = "bar"
  }
  performance_config {
    dump_parallel_level = "MAX"
  }
  vpc_peering_connectivity {
    vpc = google_compute_network.default.id
  }
  dump_type = "LOGICAL"
  dump_flags {
    dump_flags {
      name = "max-allowed-packet"
      value = "1073741824"
    }
  }
  source          = google_database_migration_service_connection_profile.source_cp.name
  destination     = google_database_migration_service_connection_profile.destination_cp.name
  type            = "CONTINUOUS"
}
```
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=database_migration_service_migration_job_postgres_to_postgres&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Database Migration Service Migration Job Postgres To Postgres


```hcl
data "google_project" "project" {
}

resource "google_sql_database_instance" "source_csql" {
  name             = "source-csql"
  database_version = "POSTGRES_15"
  settings {
    tier = "db-custom-2-13312"
    deletion_protection_enabled = false
  }
  deletion_protection = false
}

resource "google_sql_ssl_cert" "source_sql_client_cert" {
  common_name = "cert"
  instance    = google_sql_database_instance.source_csql.name

  depends_on = [google_sql_database_instance.source_csql]
}

resource "google_sql_user" "source_sqldb_user" {
  name     = "username"
  instance = google_sql_database_instance.source_csql.name
  password = "password"

  depends_on = [google_sql_ssl_cert.source_sql_client_cert]
}

resource "google_database_migration_service_connection_profile" "source_cp" {
  location              = "us-central1"
  connection_profile_id = "source-cp"
  display_name          = "source-cp_display"
  labels = {
    foo = "bar"
  }
  postgresql {
    host     = google_sql_database_instance.source_csql.ip_address.0.ip_address
    port     = 3306
    username = google_sql_user.source_sqldb_user.name
    password = google_sql_user.source_sqldb_user.password
    ssl {
      client_key         = google_sql_ssl_cert.source_sql_client_cert.private_key
      client_certificate = google_sql_ssl_cert.source_sql_client_cert.cert
      ca_certificate     = google_sql_ssl_cert.source_sql_client_cert.server_ca_cert
    }
    cloud_sql_id = "source-csql"
  }

  depends_on = [google_sql_user.source_sqldb_user]
}

resource "google_sql_database_instance" "destination_csql" {
  name             = "destination-csql"
  database_version = "POSTGRES_15"
  settings {
    tier = "db-custom-2-13312"
    deletion_protection_enabled = false
  }
  deletion_protection = false
}

resource "google_database_migration_service_connection_profile" "destination_cp" {
  location              = "us-central1"
  connection_profile_id = "destination-cp"
  display_name          = "destination-cp_display"
  labels = {
    foo = "bar"
  }
  postgresql {
    cloud_sql_id = "destination-csql"
  }
  depends_on = [google_sql_database_instance.destination_csql]
}

resource "google_database_migration_service_migration_job" "psqltopsql" {
  location              = "us-central1"
  migration_job_id = "my-migrationid"
  display_name = "my-migrationid_display"
  labels = {
    foo = "bar"
  }
  static_ip_connectivity {
  }
  source          = google_database_migration_service_connection_profile.source_cp.name
  destination     = google_database_migration_service_connection_profile.destination_cp.name
  type            = "CONTINUOUS"
}
```
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=database_migration_service_migration_job_postgres_to_alloydb&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Database Migration Service Migration Job Postgres To Alloydb


```hcl
data "google_project" "project" {
}

resource "google_sql_database_instance" "source_csql" {
  name             = "source-csql"
  database_version = "POSTGRES_15"
  settings {
    tier = "db-custom-2-13312"
    deletion_protection_enabled = false
  }
  deletion_protection = false
}

resource "google_sql_ssl_cert" "source_sql_client_cert" {
  common_name = "cert"
  instance    = google_sql_database_instance.source_csql.name

  depends_on = [google_sql_database_instance.source_csql]
}

resource "google_sql_user" "source_sqldb_user" {
  name     = "username"
  instance = google_sql_database_instance.source_csql.name
  password = "password"

  depends_on = [google_sql_ssl_cert.source_sql_client_cert]
}

resource "google_database_migration_service_connection_profile" "source_cp" {
  location              = "us-central1"
  connection_profile_id = "source-cp"
  display_name          = "source-cp_display"
  labels = {
    foo = "bar"
  }
  postgresql {
    host     = google_sql_database_instance.source_csql.ip_address.0.ip_address
    port     = 3306
    username = google_sql_user.source_sqldb_user.name
    password = google_sql_user.source_sqldb_user.password
    ssl {
      client_key         = google_sql_ssl_cert.source_sql_client_cert.private_key
      client_certificate = google_sql_ssl_cert.source_sql_client_cert.cert
      ca_certificate     = google_sql_ssl_cert.source_sql_client_cert.server_ca_cert
    }
    cloud_sql_id = "source-csql"
  }

  depends_on = [google_sql_user.source_sqldb_user]
}

resource "google_alloydb_cluster" "destination_alloydb" {
  cluster_id = "destination-alloydb"
  location   = "us-central1"
  network_config {
    network = google_compute_network.default.id
  }
  database_version = "POSTGRES_15"

  initial_user {
    user     = "destination-alloydb"
    password = "destination-alloydb"
  }
}

resource "google_alloydb_instance" "destination_alloydb_primary" {
  cluster       = google_alloydb_cluster.destination_alloydb.name
  instance_id   = "destination-alloydb-primary"
  instance_type = "PRIMARY"

  depends_on = [google_service_networking_connection.vpc_connection]
}

resource "google_compute_global_address" "private_ip_alloc" {
  name          =  "destination-alloydb"
  address_type  = "INTERNAL"
  purpose       = "VPC_PEERING"
  prefix_length = 16
  network       = google_compute_network.default.id
}

resource "google_service_networking_connection" "vpc_connection" {
  network                 = google_compute_network.default.id
  service                 = "servicenetworking.googleapis.com"
  reserved_peering_ranges = [google_compute_global_address.private_ip_alloc.name]
}

resource "google_compute_network" "default" {
  name = "destination-alloydb"
}

resource "google_database_migration_service_connection_profile" "destination_cp" {
  location              = "us-central1"
  connection_profile_id = "destination-cp"
  display_name          = "destination-cp_display"
  labels = {
    foo = "bar"
  }
  postgresql {
    alloydb_cluster_id = "destination-alloydb"
  }
  depends_on = [google_alloydb_cluster.destination_alloydb, google_alloydb_instance.destination_alloydb_primary]
}

resource "google_database_migration_service_migration_job" "psqltoalloydb" {
  location              = "us-central1"
  migration_job_id = "my-migrationid"
  display_name = "my-migrationid_display"
  labels = {
    foo = "bar"
  }
  static_ip_connectivity {
  }
  source          = google_database_migration_service_connection_profile.source_cp.name
  destination     = google_database_migration_service_connection_profile.destination_cp.name
  type            = "CONTINUOUS"
}
```

## Argument Reference

The following arguments are supported:


* `type` -
  (Required)
  The type of the migration job.
  Possible values are: `ONE_TIME`, `CONTINUOUS`.

* `source` -
  (Required)
  The name of the source connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{sourceConnectionProfile}.

* `destination` -
  (Required)
  The name of the destination connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{destinationConnectionProfile}.

* `migration_job_id` -
  (Required)
  The ID of the migration job.


- - -


* `display_name` -
  (Optional)
  The migration job display name.

* `labels` -
  (Optional)
  The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs.

  **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
  Please refer to the field `effective_labels` for all of the labels present on the resource.

* `dump_flags` -
  (Optional)
  The initial dump flags.
  Structure is [documented below](#nested_dump_flags).

* `performance_config` -
  (Optional)
  Data dump parallelism settings used by the migration.
  Structure is [documented below](#nested_performance_config).

* `dump_path` -
  (Optional)
  The path to the dump file in Google Cloud Storage,
  in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME]).
  This field and the "dump_flags" field are mutually exclusive.

* `dump_type` -
  (Optional)
  The type of the data dump. Supported for MySQL to CloudSQL for MySQL
  migrations only.
  Possible values are: `LOGICAL`, `PHYSICAL`.

* `static_ip_connectivity` -
  (Optional)
  If set to an empty object (`{}`), the source database will allow incoming
  connections from the public IP of the destination database.
  You can retrieve the public IP of the Cloud SQL instance from the
  Cloud SQL console or using Cloud SQL APIs.

* `reverse_ssh_connectivity` -
  (Optional)
  The details of the VPC network that the source database is located in.
  Structure is [documented below](#nested_reverse_ssh_connectivity).

* `vpc_peering_connectivity` -
  (Optional)
  The details of the VPC network that the source database is located in.
  Structure is [documented below](#nested_vpc_peering_connectivity).

* `location` -
  (Optional)
  The location where the migration job should reside.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


<a name="nested_dump_flags"></a>The `dump_flags` block supports:

* `dump_flags` -
  (Optional)
  A list of dump flags
  Structure is [documented below](#nested_dump_flags).


<a name="nested_dump_flags"></a>The `dump_flags` block supports:

* `name` -
  (Optional)
  The name of the flag

* `value` -
  (Optional)
  The vale of the flag

<a name="nested_performance_config"></a>The `performance_config` block supports:

* `dump_parallel_level` -
  (Optional)
  Initial dump parallelism level.
  Possible values are: `MIN`, `OPTIMAL`, `MAX`.

<a name="nested_reverse_ssh_connectivity"></a>The `reverse_ssh_connectivity` block supports:

* `vm_ip` -
  (Optional)
  The IP of the virtual machine (Compute Engine) used as the bastion server
  for the SSH tunnel.

* `vm_port` -
  (Optional)
  The forwarding port of the virtual machine (Compute Engine) used as the
  bastion server for the SSH tunnel.

* `vm` -
  (Optional)
  The name of the virtual machine (Compute Engine) used as the bastion server
  for the SSH tunnel.

* `vpc` -
  (Optional)
  The name of the VPC to peer with the Cloud SQL private network.

<a name="nested_vpc_peering_connectivity"></a>The `vpc_peering_connectivity` block supports:

* `vpc` -
  (Optional)
  The name of the VPC network to peer with the Cloud SQL private network.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/migrationJobs/{{migration_job_id}}`

* `name` -
  The name of this migration job resource in the form of projects/{project}/locations/{location}/migrationJobs/{migrationJob}.

* `create_time` -
  Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC 'Zulu' format, accurate to nanoseconds. Example: '2014-10-02T15:01:23.045123456Z'.

* `state` -
  The current migration job state.

* `phase` -
  The current migration job phase.

* `error` -
  Output only. The error details in case of state FAILED.
  Structure is [documented below](#nested_error).

* `terraform_labels` -
  The combination of labels configured directly on the resource
   and default labels configured on the provider.

* `effective_labels` -
  All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.


<a name="nested_error"></a>The `error` block contains:

* `code` -
  (Output)
  The status code, which should be an enum value of google.rpc.Code.

* `message` -
  (Output)
  Human readable message indicating details about the current status.

* `details` -
  (Output)
  A list of messages that carry the error details.

## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 60 minutes.
- `update` - Default is 60 minutes.
- `delete` - Default is 60 minutes.

## Import


MigrationJob can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/migrationJobs/{{migration_job_id}}`
* `{{project}}/{{location}}/{{migration_job_id}}`
* `{{location}}/{{migration_job_id}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import MigrationJob using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/migrationJobs/{{migration_job_id}}"
  to = google_database_migration_service_migration_job.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), MigrationJob can be imported using one of the formats above. For example:

```
$ terraform import google_database_migration_service_migration_job.default projects/{{project}}/locations/{{location}}/migrationJobs/{{migration_job_id}}
$ terraform import google_database_migration_service_migration_job.default {{project}}/{{location}}/{{migration_job_id}}
$ terraform import google_database_migration_service_migration_job.default {{location}}/{{migration_job_id}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
