---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Apigee"
description: |-
  An `AppGroup` in Apigee.
---

# google_apigee_app_group

An `AppGroup` in Apigee.


To get more information about AppGroup, see:

* [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.appgroups)
* How-to Guides
    * [Organizing client app ownership](https://cloud.google.com/apigee/docs/api-platform/publish/organizing-client-app-ownership)

## Example Usage - Apigee App Group Basic


```hcl
data "google_client_config" "current" {}

resource "google_compute_network" "apigee_network" {
  name = "apigee-network"
}

resource "google_compute_global_address" "apigee_range" {
  name          = "apigee-range"
  purpose       = "VPC_PEERING"
  address_type  = "INTERNAL"
  prefix_length = 16
  network       = google_compute_network.apigee_network.id
}

resource "google_service_networking_connection" "apigee_vpc_connection" {
  network                 = google_compute_network.apigee_network.id
  service                 = "servicenetworking.googleapis.com"
  reserved_peering_ranges = [google_compute_global_address.apigee_range.name]
}

resource "google_apigee_organization" "apigee_org" {
  analytics_region   = "us-central1"
  project_id         = data.google_client_config.current.project
  authorized_network = google_compute_network.apigee_network.id
  depends_on         = [google_service_networking_connection.apigee_vpc_connection]
}

resource "google_apigee_instance" "apigee_instance" {
  name               = "instance"
  location           = "us-central1"
  org_id             = google_apigee_organization.apigee_org.id
  peering_cidr_range = "SLASH_22"
}

resource "google_apigee_app_group" "apigee_app_group" {
  name         = "my-app-group"
  display_name = "Test app group"
  channel_id   = "storefront"
  channel_uri  = "https://my-dev-portal.org/groups/my-group"
  status       = "active"
  org_id       = google_apigee_organization.apigee_org.id
  depends_on   = [
    google_apigee_instance.apigee_instance
  ]
}
```
## Example Usage - Apigee App Group With Attributes


```hcl
data "google_client_config" "current" {}

resource "google_compute_network" "apigee_network" {
  name = "apigee-network"
}

resource "google_compute_global_address" "apigee_range" {
  name          = "apigee-range"
  purpose       = "VPC_PEERING"
  address_type  = "INTERNAL"
  prefix_length = 16
  network       = google_compute_network.apigee_network.id
}

resource "google_service_networking_connection" "apigee_vpc_connection" {
  network                 = google_compute_network.apigee_network.id
  service                 = "servicenetworking.googleapis.com"
  reserved_peering_ranges = [google_compute_global_address.apigee_range.name]
}

resource "google_apigee_organization" "apigee_org" {
  analytics_region   = "us-central1"
  project_id         = data.google_client_config.current.project
  authorized_network = google_compute_network.apigee_network.id
  depends_on         = [google_service_networking_connection.apigee_vpc_connection]
}

resource "google_apigee_instance" "apigee_instance" {
  name               = "instance"
  location           = "us-central1"
  org_id             = google_apigee_organization.apigee_org.id
  peering_cidr_range = "SLASH_22"
}

resource "google_apigee_app_group" "apigee_app_group" {
  name         = "my-app-group"
  display_name = "Test app group"    
  channel_id   = "storefront"
  channel_uri  = "https://my-dev-portal.org/groups/my-group"
  status       = "active"
  org_id       = google_apigee_organization.apigee_org.id
  attributes {
    name = "business_unit"
    value = "HR"
  }
  attributes {
    name = "department"
    value = "payroll"
  }    
  depends_on = [
    google_apigee_instance.apigee_instance
  ]
}
```

## Argument Reference

The following arguments are supported:


* `name` -
  (Required)
  Name of the AppGroup. Characters you can use in the name are restricted to: A-Z0-9._-$ %.

* `org_id` -
  (Required)
  The Apigee Organization associated with the Apigee app group,
  in the format `organizations/{{org_name}}`.


- - -


* `channel_uri` -
  (Optional)
  A reference to the associated storefront/marketplace.

* `channel_id` -
  (Optional)
  Channel identifier identifies the owner maintaing this grouping.

* `display_name` -
  (Optional)
  App group name displayed in the UI

* `status` -
  (Optional)
  Valid values are active or inactive. Note that the status of the AppGroup should be updated via UpdateAppGroupRequest by setting the action as active or inactive.
  Possible values are: `active`, `inactive`.

* `attributes` -
  (Optional)
  A list of attributes
  Structure is [documented below](#nested_attributes).


<a name="nested_attributes"></a>The `attributes` block supports:

* `name` -
  (Optional)
  Key of the attribute

* `value` -
  (Optional)
  Value of the attribute

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `{{org_id}}/appgroups/{{name}}`

* `app_group_id` -
  Internal identifier that cannot be edited

* `organization` -
  App group name displayed in the UI

* `created_at` -
  Created time as milliseconds since epoch.

* `last_modified_at` -
  Modified time as milliseconds since epoch.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


AppGroup can be imported using any of these accepted formats:

* `{{org_id}}/appgroups/{{name}}`
* `{{org_id}}/{{name}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import AppGroup using one of the formats above. For example:

```tf
import {
  id = "{{org_id}}/appgroups/{{name}}"
  to = google_apigee_app_group.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), AppGroup can be imported using one of the formats above. For example:

```
$ terraform import google_apigee_app_group.default {{org_id}}/appgroups/{{name}}
$ terraform import google_apigee_app_group.default {{org_id}}/{{name}}
```
