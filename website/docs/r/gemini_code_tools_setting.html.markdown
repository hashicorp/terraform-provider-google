---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Configuration: https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/gemini/CodeToolsSetting.yaml
#     Template:      https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/terraform/resource.html.markdown.tmpl
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "Gemini for Google Cloud"
description: |-
  The resource for managing CodeTools settings for Admin Control.
---

# google_gemini_code_tools_setting

The resource for managing CodeTools settings for Admin Control.

~> **Warning:** This resource is in beta, and should be used with the terraform-provider-google-beta provider.
See [Provider Versions](https://terraform.io/docs/providers/google/guides/provider_versions.html) for more details on beta resources.


## Example Usage - Gemini Code Tools Setting Basic


```hcl
resource "google_gemini_code_tools_setting" "example" {
    provider = google-beta
    code_tools_setting_id = "ls1-tf"
    location = "global"
    labels = {"my_key": "my_value"}
    enabled_tool {
        handle = "my_handle"
        tool = "my_tool"
        account_connector = "my_con"
        config {
            key = "my_key"
            value = "my_value"
        }
        uri_override = "my_uri_override"
    }
}
```

## Argument Reference

The following arguments are supported:


* `enabled_tool` -
  (Required)
  Represents the full set of enabled tools.
  Structure is [documented below](#nested_enabled_tool).

* `code_tools_setting_id` -
  (Required)
  Id of the Code Tools Setting.


<a name="nested_enabled_tool"></a>The `enabled_tool` block supports:

* `account_connector` -
  (Optional)
  Link to the Dev Connect Account Connector that holds the user credentials.
  projects/{project}/locations/{location}/accountConnectors/{account_connector_id}

* `handle` -
  (Required)
  Handle used to invoke the tool.

* `tool` -
  (Required)
  Link to the Tool

* `config` -
  (Optional)
  Configuration parameters for the tool.
  Structure is [documented below](#nested_enabled_tool_enabled_tool_config).

* `uri_override` -
  (Optional)
  Overridden URI, if allowed by Tool.


<a name="nested_enabled_tool_enabled_tool_config"></a>The `config` block supports:

* `key` -
  (Required)
  Key of the configuration item.

* `value` -
  (Required)
  Value of the configuration item.

- - -


* `labels` -
  (Optional)
  Labels as key value pairs.
  **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
  Please refer to the field `effective_labels` for all of the labels present on the resource.

* `location` -
  (Optional)
  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/codeToolsSettings/{{code_tools_setting_id}}`

* `name` -
  Identifier. Name of the resource.
  Format:projects/{project}/locations/{location}/codeToolsSettings/{codeToolsSetting}

* `create_time` -
  Create time stamp.

* `update_time` -
  Update time stamp.

* `terraform_labels` -
  The combination of labels configured directly on the resource
   and default labels configured on the provider.

* `effective_labels` -
  All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


CodeToolsSetting can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/codeToolsSettings/{{code_tools_setting_id}}`
* `{{project}}/{{location}}/{{code_tools_setting_id}}`
* `{{location}}/{{code_tools_setting_id}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CodeToolsSetting using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/codeToolsSettings/{{code_tools_setting_id}}"
  to = google_gemini_code_tools_setting.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), CodeToolsSetting can be imported using one of the formats above. For example:

```
$ terraform import google_gemini_code_tools_setting.default projects/{{project}}/locations/{{location}}/codeToolsSettings/{{code_tools_setting_id}}
$ terraform import google_gemini_code_tools_setting.default {{project}}/{{location}}/{{code_tools_setting_id}}
$ terraform import google_gemini_code_tools_setting.default {{location}}/{{code_tools_setting_id}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
