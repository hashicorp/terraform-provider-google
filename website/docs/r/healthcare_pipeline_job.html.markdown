---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Cloud Healthcare"
description: |-
  PipelineJobs are Long Running Operations on Healthcare API to Map or Reconcile
  incoming data into FHIR format
---

# google_healthcare_pipeline_job

PipelineJobs are Long Running Operations on Healthcare API to Map or Reconcile
incoming data into FHIR format


To get more information about PipelineJob, see:

* [API documentation](https://cloud.google.com/healthcare-api/healthcare-data-engine/docs/reference/rest/v1/projects.locations.datasets.pipelineJobs)
* How-to Guides
    * [Creating a PipelineJob](https://cloud.google.com/healthcare-api/private/healthcare-data-engine/docs/reference/rest/v1/projects.locations.datasets.pipelineJobs#PipelineJob)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=healthcare_pipeline_job_reconciliation&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Healthcare Pipeline Job Reconciliation


```hcl
data "google_project" "project" {
}

resource "google_healthcare_pipeline_job" "example-pipeline" {
  name  = "example_pipeline_job"
  location = "us-central1"
  dataset = google_healthcare_dataset.dataset.id
  disable_lineage = true
  reconciliation_pipeline_job {
    merge_config {
      description = "sample description for reconciliation rules"
      whistle_config_source {
        uri = "gs://${google_storage_bucket.bucket.name}/${google_storage_bucket_object.merge_file.name}"
        import_uri_prefix = "gs://${google_storage_bucket.bucket.name}"
      }
    }
    matching_uri_prefix = "gs://${google_storage_bucket.bucket.name}"
    fhir_store_destination = "${google_healthcare_dataset.dataset.id}/fhirStores/${google_healthcare_fhir_store.fhirstore.name}"
  }
}

resource "google_healthcare_dataset" "dataset" {
  name     = "example_dataset"
  location = "us-central1"
}

resource "google_healthcare_fhir_store" "fhirstore" {
  name    = "fhir_store"
  dataset = google_healthcare_dataset.dataset.id
  version = "R4"
  enable_update_create          = true
  disable_referential_integrity = true
}

resource "google_storage_bucket" "bucket" {
    name          = "example_bucket_name"
    location      = "us-central1"
    uniform_bucket_level_access = true
}

resource "google_storage_bucket_object" "merge_file" {
  name    = "merge.wstl"
  content = " "
  bucket  = google_storage_bucket.bucket.name
}

resource "google_storage_bucket_iam_member" "hsa" {
    bucket = google_storage_bucket.bucket.name
    role   = "roles/storage.objectUser"
    member = "serviceAccount:service-${data.google_project.project.number}@gcp-sa-healthcare.iam.gserviceaccount.com"
}
```
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=healthcare_pipeline_job_backfill&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Healthcare Pipeline Job Backfill


```hcl
resource "google_healthcare_pipeline_job" "example-pipeline" {
  name  = "example_backfill_pipeline"
  location = "us-central1"
  dataset = google_healthcare_dataset.dataset.id
  backfill_pipeline_job {
    mapping_pipeline_job = "${google_healthcare_dataset.dataset.id}/pipelinejobs/example_mapping_pipeline"
  }      
}

resource "google_healthcare_dataset" "dataset" {
  name     = "example_dataset"
  location = "us-central1"
}
```
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=healthcare_pipeline_job_whistle_mapping&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Healthcare Pipeline Job Whistle Mapping


```hcl
data "google_project" "project" {
}

resource "google_healthcare_pipeline_job" "example-mapping-pipeline" {
  name  = "example_mapping_pipeline_job"
  location = "us-central1"
  dataset = google_healthcare_dataset.dataset.id
  disable_lineage = true
  labels = {
    example_label_key = "example_label_value"
  }  
  mapping_pipeline_job {
    mapping_config {
      whistle_config_source {
        uri = "gs://${google_storage_bucket.bucket.name}/${google_storage_bucket_object.mapping_file.name}"
        import_uri_prefix = "gs://${google_storage_bucket.bucket.name}"
      }
      description = "example description for mapping configuration"
    }
    fhir_streaming_source {
      fhir_store = "${google_healthcare_dataset.dataset.id}/fhirStores/${google_healthcare_fhir_store.source_fhirstore.name}"
      description = "example description for streaming fhirstore"
    }
    fhir_store_destination = "${google_healthcare_dataset.dataset.id}/fhirStores/${google_healthcare_fhir_store.dest_fhirstore.name}"
  }
}

resource "google_healthcare_dataset" "dataset" {
  name     = "example_dataset"
  location = "us-central1"
}

resource "google_healthcare_fhir_store" "source_fhirstore" {
  name    = "source_fhir_store"
  dataset = google_healthcare_dataset.dataset.id
  version = "R4"
  enable_update_create          = true
  disable_referential_integrity = true
}

resource "google_healthcare_fhir_store" "dest_fhirstore" {
  name    = "dest_fhir_store"
  dataset = google_healthcare_dataset.dataset.id
  version = "R4"
  enable_update_create          = true
  disable_referential_integrity = true
}

resource "google_storage_bucket" "bucket" {
    name          = "example_bucket_name"
    location      = "us-central1"
    uniform_bucket_level_access = true
}

resource "google_storage_bucket_object" "mapping_file" {
  name    = "mapping.wstl"
  content = " "
  bucket  = google_storage_bucket.bucket.name
}

resource "google_storage_bucket_iam_member" "hsa" {
    bucket = google_storage_bucket.bucket.name
    role   = "roles/storage.objectUser"
    member = "serviceAccount:service-${data.google_project.project.number}@gcp-sa-healthcare.iam.gserviceaccount.com"
}
```
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=healthcare_pipeline_job_mapping_recon_dest&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Healthcare Pipeline Job Mapping Recon Dest


```hcl
data "google_project" "project" {
}

resource "google_healthcare_pipeline_job" "recon" {
  name  = "example_recon_pipeline_job"
  location = "us-central1"
  dataset = google_healthcare_dataset.dataset.id
  disable_lineage = true
  reconciliation_pipeline_job {
    merge_config {
      description = "sample description for reconciliation rules"
      whistle_config_source {
        uri = "gs://${google_storage_bucket.bucket.name}/${google_storage_bucket_object.merge_file.name}"
        import_uri_prefix = "gs://${google_storage_bucket.bucket.name}"
      }
    }
    matching_uri_prefix = "gs://${google_storage_bucket.bucket.name}"
    fhir_store_destination = "${google_healthcare_dataset.dataset.id}/fhirStores/${google_healthcare_fhir_store.dest_fhirstore.name}"
  }
}

resource "google_healthcare_pipeline_job" "example-mapping-pipeline" {
  depends_on = [google_healthcare_pipeline_job.recon]
  name  = "example_mapping_pipeline_job"
  location = "us-central1"
  dataset = google_healthcare_dataset.dataset.id
  disable_lineage = true
  labels = {
    example_label_key = "example_label_value"
  }
  mapping_pipeline_job {
    mapping_config {
      whistle_config_source {
        uri = "gs://${google_storage_bucket.bucket.name}/${google_storage_bucket_object.mapping_file.name}"
        import_uri_prefix = "gs://${google_storage_bucket.bucket.name}"
      }
      description = "example description for mapping configuration"
    }
    fhir_streaming_source {
      fhir_store = "${google_healthcare_dataset.dataset.id}/fhirStores/${google_healthcare_fhir_store.source_fhirstore.name}"
      description = "example description for streaming fhirstore"
    }
    reconciliation_destination = true
  }
}

resource "google_healthcare_dataset" "dataset" {
  name     = "example_dataset"
  location = "us-central1"
}

resource "google_healthcare_fhir_store" "source_fhirstore" {
  name    = "source_fhir_store"
  dataset = google_healthcare_dataset.dataset.id
  version = "R4"
  enable_update_create          = true
  disable_referential_integrity = true
}

resource "google_healthcare_fhir_store" "dest_fhirstore" {
  name    = "dest_fhir_store"
  dataset = google_healthcare_dataset.dataset.id
  version = "R4"
  enable_update_create          = true
  disable_referential_integrity = true
}

resource "google_storage_bucket" "bucket" {
    name          = "example_bucket_name"
    location      = "us-central1"
    uniform_bucket_level_access = true
}

resource "google_storage_bucket_object" "mapping_file" {
  name    = "mapping.wstl"
  content = " "
  bucket  = google_storage_bucket.bucket.name
}

resource "google_storage_bucket_object" "merge_file" {
  name    = "merge.wstl"
  content = " "
  bucket  = google_storage_bucket.bucket.name
}

resource "google_storage_bucket_iam_member" "hsa" {
    bucket = google_storage_bucket.bucket.name
    role   = "roles/storage.objectUser"
    member = "serviceAccount:service-${data.google_project.project.number}@gcp-sa-healthcare.iam.gserviceaccount.com"
}
```

## Argument Reference

The following arguments are supported:


* `name` -
  (Required)
  Specifies the name of the pipeline job. This field is user-assigned.

* `location` -
  (Required)
  Location where the Pipeline Job is to run

* `dataset` -
  (Required)
  Healthcare Dataset under which the Pipeline Job is to run


- - -


* `disable_lineage` -
  (Optional)
  If true, disables writing lineage for the pipeline.

* `labels` -
  (Optional)
  User-supplied key-value pairs used to organize Pipeline Jobs.
  Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of
  maximum 128 bytes, and must conform to the following PCRE regular expression:
  [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}
  Label values are optional, must be between 1 and 63 characters long, have a
  UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE
  regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}
  No more than 64 labels can be associated with a given pipeline.
  An object containing a list of "key": value pairs.
  Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.

  **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
  Please refer to the field `effective_labels` for all of the labels present on the resource.

* `mapping_pipeline_job` -
  (Optional)
  Specifies mapping configuration.
  Structure is [documented below](#nested_mapping_pipeline_job).

* `reconciliation_pipeline_job` -
  (Optional)
  Specifies reconciliation configuration.
  Structure is [documented below](#nested_reconciliation_pipeline_job).

* `backfill_pipeline_job` -
  (Optional)
  Specifies the backfill configuration.
  Structure is [documented below](#nested_backfill_pipeline_job).


<a name="nested_mapping_pipeline_job"></a>The `mapping_pipeline_job` block supports:

* `mapping_config` -
  (Required)
  The location of the mapping configuration.
  Structure is [documented below](#nested_mapping_config).

* `fhir_streaming_source` -
  (Optional)
  A streaming FHIR data source.
  Structure is [documented below](#nested_fhir_streaming_source).

* `fhir_store_destination` -
  (Optional)
  If set, the mapping pipeline will write snapshots to this
  FHIR store without assigning stable IDs. You must
  grant your pipeline project's Cloud Healthcare Service
  Agent serviceaccount healthcare.fhirResources.executeBundle
  and healthcare.fhirResources.create permissions on the
  destination store. The destination store must set
  [disableReferentialIntegrity][FhirStore.disable_referential_integrity]
  to true. The destination store must use FHIR version R4.
  Format: project/{projectID}/locations/{locationID}/datasets/{datasetName}/fhirStores/{fhirStoreID}.

* `reconciliation_destination` -
  (Optional)
  If set to true, a mapping pipeline will send output snapshots
  to the reconciliation pipeline in its dataset. A reconciliation
  pipeline must exist in this dataset before a mapping pipeline
  with a reconciliation destination can be created.


<a name="nested_mapping_config"></a>The `mapping_config` block supports:

* `description` -
  (Optional)
  Describes the mapping configuration.

* `whistle_config_source` -
  (Optional)
  Specifies the path to the mapping configuration for harmonization pipeline.
  Structure is [documented below](#nested_whistle_config_source).


<a name="nested_whistle_config_source"></a>The `whistle_config_source` block supports:

* `uri` -
  (Required)
  Main configuration file which has the entrypoint or the root function.
  Example: gs://{bucket-id}/{path/to/import-root/dir}/entrypoint-file-name.wstl.

* `import_uri_prefix` -
  (Required)
  Directory path where all the Whistle files are located.
  Example: gs://{bucket-id}/{path/to/import-root/dir}

<a name="nested_fhir_streaming_source"></a>The `fhir_streaming_source` block supports:

* `fhir_store` -
  (Required)
  The path to the FHIR store in the format projects/{projectId}/locations/{locationId}/datasets/{datasetId}/fhirStores/{fhirStoreId}.

* `description` -
  (Optional)
  Describes the streaming FHIR data source.

<a name="nested_reconciliation_pipeline_job"></a>The `reconciliation_pipeline_job` block supports:

* `merge_config` -
  (Required)
  Specifies the location of the reconciliation configuration.
  Structure is [documented below](#nested_merge_config).

* `matching_uri_prefix` -
  (Required)
  Specifies the top level directory of the matching configs used
  in all mapping pipelines, which extract properties for resources
  to be matched on.
  Example: gs://{bucket-id}/{path/to/matching/configs}

* `fhir_store_destination` -
  (Optional)
  The harmonized FHIR store to write harmonized FHIR resources to,
  in the format of: project/{projectID}/locations/{locationID}/datasets/{datasetName}/fhirStores/{id}


<a name="nested_merge_config"></a>The `merge_config` block supports:

* `description` -
  (Optional)
  Describes the mapping configuration.

* `whistle_config_source` -
  (Required)
  Specifies the path to the mapping configuration for harmonization pipeline.
  Structure is [documented below](#nested_whistle_config_source).


<a name="nested_whistle_config_source"></a>The `whistle_config_source` block supports:

* `uri` -
  (Required)
  Main configuration file which has the entrypoint or the root function.
  Example: gs://{bucket-id}/{path/to/import-root/dir}/entrypoint-file-name.wstl.

* `import_uri_prefix` -
  (Required)
  Directory path where all the Whistle files are located.
  Example: gs://{bucket-id}/{path/to/import-root/dir}

<a name="nested_backfill_pipeline_job"></a>The `backfill_pipeline_job` block supports:

* `mapping_pipeline_job` -
  (Optional)
  Specifies the mapping pipeline job to backfill, the name format
  should follow: projects/{projectId}/locations/{locationId}/datasets/{datasetId}/pipelineJobs/{pipelineJobId}.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `{{dataset}}/pipelineJobs/{{name}}`

* `self_link` -
  The fully qualified name of this dataset

* `terraform_labels` -
  The combination of labels configured directly on the resource
   and default labels configured on the provider.

* `effective_labels` -
  All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


PipelineJob can be imported using any of these accepted formats:

* `{{dataset}}/pipelineJobs/{{name}}`
* `{{dataset}}/pipelineJobs?pipelineJobId={{name}}`
* `{{name}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import PipelineJob using one of the formats above. For example:

```tf
import {
  id = "{{dataset}}/pipelineJobs/{{name}}"
  to = google_healthcare_pipeline_job.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), PipelineJob can be imported using one of the formats above. For example:

```
$ terraform import google_healthcare_pipeline_job.default {{dataset}}/pipelineJobs/{{name}}
$ terraform import google_healthcare_pipeline_job.default {{dataset}}/pipelineJobs?pipelineJobId={{name}}
$ terraform import google_healthcare_pipeline_job.default {{name}}
```
