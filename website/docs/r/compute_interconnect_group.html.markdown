---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Configuration: https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/compute/InterconnectGroup.yaml
#     Template:      https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/terraform/resource.html.markdown.tmpl
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "Compute Engine"
description: |-
  An interconnect group resource allows customers to create, analyze, and
  expand their redundant connections.
---

# google_compute_interconnect_group

An interconnect group resource allows customers to create, analyze, and
expand their redundant connections.


To get more information about InterconnectGroup, see:

* [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/interconnects)
* How-to Guides
    * [Create a Dedicated Interconnect](https://cloud.google.com/network-connectivity/docs/interconnect/concepts/dedicated-overview)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=interconnect_group_basic&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Interconnect Group Basic


```hcl
resource "google_compute_interconnect_group" "example-interconnect-group" {
  name   = "example-interconnect-group"
  intent {
    topology_capability = "NO_SLA"
  }
}
```

## Argument Reference

The following arguments are supported:


* `name` -
  (Required)
  Name of the resource. Provided by the client when the resource is created. The name must be
  1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
  long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
  character must be a lowercase letter, and all following characters must be a dash,
  lowercase letter, or digit, except the last character, which cannot be a dash.

* `intent` -
  (Required)
  The user's intent for this group. This is the only required field besides
  the name that must be specified on group creation.
  Structure is [documented below](#nested_intent).


<a name="nested_intent"></a>The `intent` block supports:

* `topology_capability` -
  (Optional)
  The reliability the user intends this group to be capable of, in terms
  of the Interconnect product SLAs.
  Possible values are: `PRODUCTION_NON_CRITICAL`, `PRODUCTION_CRITICAL`, `NO_SLA`, `AVAILABILITY_SLA_UNSPECIFIED`.

- - -


* `description` -
  (Optional)
  An optional description of this resource. Provide this property when you create the resource.

* `interconnects` -
  (Optional)
  Interconnects in the InterconnectGroup. Keys are arbitrary user-specified
  strings. Users are encouraged, but not required, to use their preferred
  format for resource links as keys.
  Note that there are add-members and remove-members methods in gcloud.
  The size of this map is limited by an "Interconnects per group" quota.
  Structure is [documented below](#nested_interconnects).

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


<a name="nested_interconnects"></a>The `interconnects` block supports:

* `name` - (Required) The identifier for this object. Format specified above.

* `interconnect` -
  (Optional)
  The URL of an Interconnect in this group. All Interconnects in the group are unique.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/global/interconnectGroups/{{name}}`

* `creation_timestamp` -
  Creation timestamp in RFC3339 text format.

* `physical_structure` -
  An analysis of the physical layout of Interconnects in this
  group. Every Interconnect in the group is shown once in this structure.
  Structure is [documented below](#nested_physical_structure).

* `configured` -
  The status of the group as configured. This has the same
  structure as the operational field reported by the OperationalStatus
  method, but does not take into account the operational status of each
  resource.
  Structure is [documented below](#nested_configured).


<a name="nested_physical_structure"></a>The `physical_structure` block contains:

* `metros` -
  (Output)
  The metros Interconnects in this group are in.
  Structure is [documented below](#nested_physical_structure_metros).


<a name="nested_physical_structure_metros"></a>The `metros` block contains:

* `metro` -
  (Output)
  The name of the metro, as a three-letter lowercase string
  like "iad". This is the first component of the location of
  Interconnects underneath this.

* `facilities` -
  (Output)
  The facilities Interconnects in this metro are present
  in.
  Structure is [documented below](#nested_physical_structure_metros_metros_facilities).


<a name="nested_physical_structure_metros_metros_facilities"></a>The `facilities` block contains:

* `facility` -
  (Output)
  The ID of this facility, as a numeric string like
  "5467". This is the third component of the location of Interconnects
  in this facility.

* `zones` -
  (Output)
  The zones that Interconnects in this facility are
  present in.
  Structure is [documented below](#nested_physical_structure_metros_metros_facilities_facilities_zones).


<a name="nested_physical_structure_metros_metros_facilities_facilities_zones"></a>The `zones` block contains:

* `zone` -
  (Output)
  The name of the zone, either "zone1" or "zone2".
  This is the second component of the location of Interconnects in
  this facility.

* `interconnects` -
  (Output)
  URLs of Interconnects in this redundancy group in the
  given metro, facility, and zone.

<a name="nested_configured"></a>The `configured` block contains:

* `topology_capability` -
  (Output)
  How reliable this topology is configured to be, and why
  this group does or does not meet the requirements for the intended
  capability.
  Structure is [documented below](#nested_configured_topology_capability).


<a name="nested_configured_topology_capability"></a>The `topology_capability` block contains:

* `supported_sla` -
  (Output)
  Which level of reliability this group is configured to
  support.

* `intended_capability_blockers` -
  (Output)
  Reasons why configuration.topologyCapability.sla differs
  from intent.topologyCapability. This list is empty if and only if those
  are the same.
  Structure is [documented below](#nested_configured_topology_capability_intended_capability_blockers).


<a name="nested_configured_topology_capability_intended_capability_blockers"></a>The `intended_capability_blockers` block contains:

* `blocker_type` -
  (Output)
  The category of an unmet SLA requirement. The Intended
  SLA Blockers section below explains this field and how it relates to
  other fields in intendedCapabilityBlockers.

* `explanation` -
  (Output)
  A human-readable explanation of this requirement and
  why it's not met. This is set for every type of requirement.

* `documentation_link` -
  (Output)
  The url of Google Cloud public documentation explaining
  this requirement. This is set for every type of requirement.

* `metros` -
  (Output)
  Metros used to explain this blocker in more detail.
  These are three-letter lowercase strings like "iad". A blocker like
  INCOMPATIBLE_METROS will specify the problematic metros in this
  field.

* `facilities` -
  (Output)
  Facilities used to explain this blocker in more detail.
  Like physicalStructure.metros.facilities.facility, this is a numeric
  string like "5467".

* `zones` -
  (Output)
  Zones used to explain this blocker in more detail.
  Zone names are "zone1" and/or "zone2".

* `interconnects` -
  (Output)
  Interconnects used to explain this blocker in more
  detail.

## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


InterconnectGroup can be imported using any of these accepted formats:

* `projects/{{project}}/global/interconnectGroups/{{name}}`
* `{{project}}/{{name}}`
* `{{name}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import InterconnectGroup using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/global/interconnectGroups/{{name}}"
  to = google_compute_interconnect_group.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), InterconnectGroup can be imported using one of the formats above. For example:

```
$ terraform import google_compute_interconnect_group.default projects/{{project}}/global/interconnectGroups/{{name}}
$ terraform import google_compute_interconnect_group.default {{project}}/{{name}}
$ terraform import google_compute_interconnect_group.default {{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
