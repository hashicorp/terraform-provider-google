---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Configuration: https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/firebaseapphosting/Traffic.yaml
#     Template:      https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/terraform/resource.html.markdown.tmpl
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "Firebase App Hosting"
description: |-
  Controls traffic configuration for a backend.
---

# google_firebase_app_hosting_traffic

Controls traffic configuration for a backend.



## Example Usage - Firebase App Hosting Traffic Target


```hcl
resource "google_firebase_app_hosting_traffic" "example" {
  project          = google_firebase_app_hosting_backend.example.project
  location         = google_firebase_app_hosting_backend.example.location
  backend          = google_firebase_app_hosting_backend.example.backend_id

  target {
    splits {
      build = google_firebase_app_hosting_build.example.name
      percent = 100
    }
  }
}

resource "google_firebase_app_hosting_build" "example" {
  project          = google_firebase_app_hosting_backend.example.project
  location         = google_firebase_app_hosting_backend.example.location
  backend          = google_firebase_app_hosting_backend.example.backend_id
  build_id         = "target-build"

  source {
    container {
      image = "us-docker.pkg.dev/cloudrun/container/hello"
    }
  }
}

resource "google_firebase_app_hosting_backend" "example" {
  project          = "my-project-name"
  # Choose the region closest to your users

  location         = "asia-east1"
  backend_id       = "traffic-tg"
  app_id           = "1:0000000000:web:674cde32020e16fbce9dbd"
  serving_locality = "GLOBAL_ACCESS"
  service_account  = google_service_account.service_account.email

  depends_on = [google_project_service.fah]
}

### Include these blocks only once per project if you are starting from scratch ###
resource "google_service_account" "service_account" {
  project = "my-project-name"

  # Must be firebase-app-hosting-compute
  account_id                   = "firebase-app-hosting-compute"
  display_name                 = "Firebase App Hosting compute service account"

  # Do not throw if already exists
  create_ignore_already_exists = true
}

resource "google_project_iam_member" "app_hosting_sa_runner" {
  project = "my-project-name"

  # For App Hosting
  role   = "roles/firebaseapphosting.computeRunner"
  member = google_service_account.service_account.member
}

resource "google_project_service" "fah" {
  project = "my-project-name"
  service = "firebaseapphosting.googleapis.com"

  disable_on_destroy = false
}
###
```
## Example Usage - Firebase App Hosting Traffic Rollout Policy


```hcl
resource "google_firebase_app_hosting_traffic" "example" {
  project          = google_firebase_app_hosting_backend.example.project
  location         = google_firebase_app_hosting_backend.example.location
  backend          = google_firebase_app_hosting_backend.example.backend_id

  rollout_policy {
    codebase_branch = "main"
  }
}

resource "google_firebase_app_hosting_backend" "example" {
  project          = "my-project-name"
  # Choose the region closest to your users

  location         = "asia-east1"
  backend_id       = "traffic-rp"
  app_id           = "1:0000000000:web:674cde32020e16fbce9dbd"
  serving_locality = "GLOBAL_ACCESS"
  service_account  = google_service_account.service_account.email

  depends_on = [google_project_service.fah]
}

### Include these blocks only once per project if you are starting from scratch ###
resource "google_service_account" "service_account" {
  project = "my-project-name"

  # Must be firebase-app-hosting-compute
  account_id                   = "firebase-app-hosting-compute"
  display_name                 = "Firebase App Hosting compute service account"

  # Do not throw if already exists
  create_ignore_already_exists = true
}

resource "google_project_iam_member" "app_hosting_sa_runner" {
  project = "my-project-name"

  # For App Hosting
  role   = "roles/firebaseapphosting.computeRunner"
  member = google_service_account.service_account.member
}

resource "google_project_service" "fah" {
  project = "my-project-name"
  service = "firebaseapphosting.googleapis.com"

  disable_on_destroy = false
}
###
```
## Example Usage - Firebase App Hosting Traffic Rollout Policy Disabled


```hcl
resource "google_firebase_app_hosting_traffic" "example" {
  project          = google_firebase_app_hosting_backend.example.project
  location         = google_firebase_app_hosting_backend.example.location
  backend          = google_firebase_app_hosting_backend.example.backend_id

  rollout_policy {
    disabled = true
    codebase_branch = "main"
  }
}

resource "google_firebase_app_hosting_backend" "example" {
  project          = "my-project-name"
  # Choose the region closest to your users

  location         = "asia-east1"
  backend_id       = "traffic-rpd"
  app_id           = "1:0000000000:web:674cde32020e16fbce9dbd"
  serving_locality = "GLOBAL_ACCESS"
  service_account  = google_service_account.service_account.email

  depends_on = [google_project_service.fah]
}

### Include these blocks only once per project if you are starting from scratch ###
resource "google_service_account" "service_account" {
  project = "my-project-name"

  # Must be firebase-app-hosting-compute
  account_id                   = "firebase-app-hosting-compute"
  display_name                 = "Firebase App Hosting compute service account"

  # Do not throw if already exists
  create_ignore_already_exists = true
}

resource "google_project_iam_member" "app_hosting_sa_runner" {
  project = "my-project-name"

  # For App Hosting
  role   = "roles/firebaseapphosting.computeRunner"
  member = google_service_account.service_account.member
}

resource "google_project_service" "fah" {
  project = "my-project-name"
  service = "firebaseapphosting.googleapis.com"

  disable_on_destroy = false
}
###
```

## Argument Reference

The following arguments are supported:


* `location` -
  (Required)
  The location the Backend that this Traffic config applies to

* `backend` -
  (Required)
  Id of the backend that this Traffic config applies to


- - -


* `target` -
  (Optional)
  Set to manually control the desired traffic for the backend. This will
  cause current to eventually match this value. The percentages must add
  up to 100.
  Structure is [documented below](#nested_target).

* `rollout_policy` -
  (Optional)
  The policy for how builds and rollouts are triggered and rolled out.
  Structure is [documented below](#nested_rollout_policy).

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


<a name="nested_target"></a>The `target` block supports:

* `splits` -
  (Required)
  A list of traffic splits that together represent where traffic is being routed.
  Structure is [documented below](#nested_target_splits).


<a name="nested_target_splits"></a>The `splits` block supports:

* `build` -
  (Required)
  The build that traffic is being routed to.

* `percent` -
  (Required)
  The percentage of traffic to send to the build. Currently must be 100 or 0.

<a name="nested_rollout_policy"></a>The `rollout_policy` block supports:

* `disabled` -
  (Optional)
  A flag that, if true, prevents rollouts from being created via this RolloutPolicy.

* `disabled_time` -
  (Output)
  If disabled is set, the time at which the rollouts were disabled.

* `codebase_branch` -
  (Optional)
  Specifies a branch that triggers a new build to be started with this
  policy. If not set, no automatic rollouts will happen.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/backends/{{backend}}/traffic`

* `etag` -
  Server-computed checksum based on other values; may be sent
  on update or delete to ensure operation is done on expected resource.

* `uid` -
  System-assigned, unique identifier.

* `create_time` -
  Time at which the backend was created.

* `update_time` -
  Time at which the backend was last updated.

* `delete_time` -
  Time at which the backend was deleted.

* `name` -
  Identifier. The resource name of the backend traffic config
  Format:
  `projects/{project}/locations/{locationId}/backends/{backendId}/traffic`.

* `current` -
  Current state of traffic allocation for the backend.
  When setting `target`, this field may differ for some time until the desired state is reached.
  Structure is [documented below](#nested_current).


<a name="nested_current"></a>The `current` block contains:

* `splits` -
  (Output)
  A list of traffic splits that together represent where traffic is being routed.
  Structure is [documented below](#nested_current_splits).


<a name="nested_current_splits"></a>The `splits` block contains:

* `build` -
  (Output)
  The build that traffic is being routed to.

* `percent` -
  (Output)
  The percentage of traffic to send to the build. Currently must be 100 or 0.

## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


Traffic can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/backends/{{backend}}/traffic`
* `{{project}}/{{location}}/{{backend}}`
* `{{location}}/{{backend}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Traffic using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/backends/{{backend}}/traffic"
  to = google_firebase_app_hosting_traffic.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), Traffic can be imported using one of the formats above. For example:

```
$ terraform import google_firebase_app_hosting_traffic.default projects/{{project}}/locations/{{location}}/backends/{{backend}}/traffic
$ terraform import google_firebase_app_hosting_traffic.default {{project}}/{{location}}/{{backend}}
$ terraform import google_firebase_app_hosting_traffic.default {{location}}/{{backend}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
