---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Vertex AI"
description: |-
  Feature Metadata information that describes an attribute of an entity type.
---

# google\_vertex\_ai\_featurestore\_entitytype\_feature

Feature Metadata information that describes an attribute of an entity type. For example, apple is an entity type, and color is a feature that describes apple.


To get more information about FeaturestoreEntitytypeFeature, see:

* [API documentation](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.featurestores.entityTypes.features)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/vertex-ai/docs)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=vertex_ai_featurestore_entitytype_feature&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Vertex Ai Featurestore Entitytype Feature


```hcl
resource "google_vertex_ai_featurestore" "featurestore" {
  name     = "terraform"
  labels = {
    foo = "bar"
  }
  region   = "us-central1"
  online_serving_config {
    fixed_node_count = 2
  }
}

resource "google_vertex_ai_featurestore_entitytype" "entity" {
  name     = "terraform"
  labels = {
    foo = "bar"
  }
  featurestore = google_vertex_ai_featurestore.featurestore.id
}

resource "google_vertex_ai_featurestore_entitytype_feature" "feature" {
  name     = "terraform"
  labels = {
    foo = "bar"
  }
  entitytype = google_vertex_ai_featurestore_entitytype.entity.id

  value_type = "INT64_ARRAY"
}
```
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=vertex_ai_featurestore_entitytype_feature_with_beta_fields&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Vertex Ai Featurestore Entitytype Feature With Beta Fields


```hcl
resource "google_vertex_ai_featurestore" "featurestore" {
  provider = google-beta
  name     = "terraform2"
  labels = {
    foo = "bar"
  }
  region   = "us-central1"
  online_serving_config {
    fixed_node_count = 2
  }
}

resource "google_vertex_ai_featurestore_entitytype" "entity" {
  provider = google-beta
  name     = "terraform2"
  labels = {
    foo = "bar"
  }
  featurestore = google_vertex_ai_featurestore.featurestore.id
  monitoring_config {
    snapshot_analysis {
      disabled = false
      monitoring_interval = "86400s"
    }

    categorical_threshold_config {
      value = 0.3
    }

    numerical_threshold_config {
      value = 0.3
    }
  }
}

resource "google_vertex_ai_featurestore_entitytype_feature" "feature" {
  provider = google-beta
  name     = "terraform2"
  labels = {
    foo = "bar"
  }
  entitytype = google_vertex_ai_featurestore_entitytype.entity.id

  value_type = "INT64_ARRAY"
}
```

## Argument Reference

The following arguments are supported:


* `value_type` -
  (Required)
  Type of Feature value. Immutable. https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.featurestores.entityTypes.features#ValueType

* `entitytype` -
  (Required)
  The name of the Featurestore to use, in the format projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entitytype}.


- - -


* `name` -
  (Optional)
  The name of the feature. The feature can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given an entity type.

* `labels` -
  (Optional)
  A set of key/value label pairs to assign to the feature.

  **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
  Please refer to the field `effective_labels` for all of the labels present on the resource.

* `description` -
  (Optional)
  Description of the feature.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `{{entitytype}}/features/{{name}}`

* `etag` -
  Used to perform consistent read-modify-write updates.

* `create_time` -
  The timestamp of when the entity type was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.

* `update_time` -
  The timestamp when the entity type was most recently updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.

* `terraform_labels` -
  The combination of labels configured directly on the resource
   and default labels configured on the provider.

* `effective_labels` -
  All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


FeaturestoreEntitytypeFeature can be imported using any of these accepted formats:

* `{{entitytype}}/features/{{name}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import FeaturestoreEntitytypeFeature using one of the formats above. For example:

```tf
import {
  id = "{{entitytype}}/features/{{name}}"
  to = google_vertex_ai_featurestore_entitytype_feature.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), FeaturestoreEntitytypeFeature can be imported using one of the formats above. For example:

```
$ terraform import google_vertex_ai_featurestore_entitytype_feature.default {{entitytype}}/features/{{name}}
```
