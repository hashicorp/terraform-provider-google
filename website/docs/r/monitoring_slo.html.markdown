---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Stackdriver Monitoring"
layout: "google"
page_title: "Google: google_monitoring_slo"
sidebar_current: "docs-google-monitoring-slo"
description: |-
  A Service-Level Objective (SLO) describes the level of desired good
  service.
---

# google\_monitoring\_slo

A Service-Level Objective (SLO) describes the level of desired good
service. It consists of a service-level indicator (SLI), a performance
goal, and a period over which the objective is to be evaluated against
that goal. The SLO can use SLIs defined in a number of different manners.
Typical SLOs might include "99% of requests in each rolling week have
latency below 200 milliseconds" or "99.5% of requests in each calendar
month return successfully."


To get more information about Slo, see:

* [API documentation](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/services.serviceLevelObjectives)
* How-to Guides
    * [Service Monitoring](https://cloud.google.com/monitoring/service-monitoring)
    * [Monitoring API Documentation](https://cloud.google.com/monitoring/api/v3/)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=monitoring_slo_appengine&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Monitoring Slo Appengine


```hcl
data "google_monitoring_app_engine_service" "default" {
  module_id = "default"
}

resource "google_monitoring_slo" "appeng_slo" {
  service = data.google_monitoring_app_engine_service.default.service_id

  slo_id = "ae-slo"
  display_name = "Terraform Test SLO for App Engine"

  goal = 0.9
  calendar_period = "DAY"

  basic_sli {
    latency {
      threshold = "1s"
    }
  }
}
```

## Argument Reference

The following arguments are supported:


* `goal` -
  (Required)
  The fraction of service that must be good in order for this objective
  to be met. 0 < goal <= 0.999

* `basic_sli` -
  (Required)
  Basic Service-Level Indicator (SLI) on a well-known service type.
  Performance will be computed on the basis of pre-defined metrics.
  SLIs are used to measure and calculate the quality of the Service's
  performance with respect to a single aspect of service quality.  Structure is documented below.

* `service` -
  (Required)
  ID of the service to which this SLO belongs.


- - -


* `display_name` -
  (Optional)
  Name used for UI elements listing this SLO.

* `rolling_period_days` -
  (Optional)
  A rolling time period, semantically "in the past X days".
  Must be between 1 to 30 days, inclusive.

* `calendar_period` -
  (Optional)
  A calendar period, semantically "since the start of the current
  <calendarPeriod>".

* `slo_id` -
  (Optional)
  The id to use for this ServiceLevelObjective. If omitted, an id will be generated instead.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.



The `basic_sli` block supports:

* `method` -
  (Optional)
  An optional set of RPCs to which this SLI is relevant.
  Telemetry from other methods will not be used to calculate
  performance for this SLI. If omitted, this SLI applies to all
  the Service's methods. For service types that don't support
  breaking down by method, setting this field will result in an
  error.

* `location` -
  (Optional)
  An optional set of locations to which this SLI is relevant.
  Telemetry from other locations will not be used to calculate
  performance for this SLI. If omitted, this SLI applies to all
  locations in which the Service has activity. For service types
  that don't support breaking down by location, setting this
  field will result in an error.

* `version` -
  (Optional)
  The set of API versions to which this SLI is relevant.
  Telemetry from other API versions will not be used to
  calculate performance for this SLI. If omitted,
  this SLI applies to all API versions. For service types
  that don't support breaking down by version, setting this
  field will result in an error.

* `latency` -
  (Required)
  Parameters for a latency threshold SLI.  Structure is documented below.


The `latency` block supports:

* `threshold` -
  (Required)
  A duration string, e.g. 10s.
  Good service is defined to be the count of requests made to
  this service that return in no more than threshold.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `{{name}}`

* `name` -
  The full resource name for this service. The syntax is:
  projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME]


## Timeouts

This resource provides the following
[Timeouts](/docs/configuration/resources.html#timeouts) configuration options:

- `create` - Default is 4 minutes.
- `update` - Default is 4 minutes.
- `delete` - Default is 4 minutes.

## Import

Slo can be imported using any of these accepted formats:

```
$ terraform import google_monitoring_slo.default {{name}}
```

-> If you're importing a resource with beta features, make sure to include `-provider=google-beta`
as an argument so that Terraform uses the correct provider to import your resource.

## User Project Overrides

This resource supports [User Project Overrides](https://www.terraform.io/docs/providers/google/guides/provider_reference.html#user_project_override).
