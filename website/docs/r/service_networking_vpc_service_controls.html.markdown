---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Service Networking"
description: |-
  Manages the VPC Service Controls configuration for a service
  networking connection

  When enabled, Google Cloud makes the following
  route configuration changes in the service producer VPC network:
  - Removes the IPv4 default route (destination 0.
---

# google_service_networking_vpc_service_controls

Manages the VPC Service Controls configuration for a service
networking connection

When enabled, Google Cloud makes the following
route configuration changes in the service producer VPC network:
- Removes the IPv4 default route (destination 0.0.0.0/0,
  next hop default internet gateway), Google Cloud then creates an
  IPv4 route for destination 199.36.153.4/30 using the default
  internet gateway next hop.
- Creates Cloud DNS managed private zones and authorizes those zones
  for the service producer VPC network. The zones include
  googleapis.com, gcr.io, pkg.dev, notebooks.cloud.google.com,
  kernels.googleusercontent.com, backupdr.cloud.google.com, and
  backupdr.googleusercontent.com as necessary domains or host names
  for Google APIs and services that are compatible with VPC Service
  Controls. Record data in the zones resolves all host names to
  199.36.153.4, 199.36.153.5, 199.36.153.6, and 199.36.153.7.

When disabled, Google Cloud makes the following route configuration
changes in the service producer VPC network:
- Restores a default route (destination 0.0.0.0/0, next hop default
  internet gateway)
- Deletes the Cloud DNS managed private zones that provided the host
  name overrides.


To get more information about VPCServiceControls, see:

* [API documentation](https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services)
* How-to Guides
    * [Private Google Access with VPC Service Controls](https://cloud.google.com/vpc-service-controls/docs/private-connectivity)
    * [Set up private connectivity to Google APIs and services](https://cloud.google.com/vpc-service-controls/docs/set-up-private-connectivity)
    * [Enable VPC Service Controls for service networking](https://cloud.google.com/sdk/gcloud/reference/services/vpc-peerings/enable-vpc-service-controls)

~> **Note:** Destroying a `google_service_networking_vpc_service_controls`
resource will remove it from state, but will not change the
underlying VPC Service Controls configuration for the service
producer network.

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=service_networking_vpc_service_controls_basic&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Service Networking Vpc Service Controls Basic


```hcl
# Create a VPC
resource "google_compute_network" "default" {
  name = "example-network"
}

# Create an IP address
resource "google_compute_global_address" "default" {
  name          = "psa-range"
  purpose       = "VPC_PEERING"
  address_type  = "INTERNAL"
  prefix_length = 16
  network       = google_compute_network.default.id
}

# Create a private connection
resource "google_service_networking_connection" "default" {
  network                 = google_compute_network.default.id
  service                 = "servicenetworking.googleapis.com"
  reserved_peering_ranges = [google_compute_global_address.default.name]
}

# Enable VPC-SC on the producer network
resource "google_service_networking_vpc_service_controls" "default" {
  network    = google_compute_network.default.name
  service    = "servicenetworking.googleapis.com"
  enabled    = true
  depends_on = [google_service_networking_connection.default]
}
```

## Argument Reference

The following arguments are supported:


* `enabled` -
  (Required)
  Desired VPC Service Controls state service producer VPC network, as
  described at the top of this page.

* `network` -
  (Required)
  The network that the consumer is using to connect with services.

* `service` -
  (Required)
  The service that is managing peering connectivity for a service
  producer's organization. For Google services that support this
  functionality, this value is `servicenetworking.googleapis.com`.


- - -


* `project` -
  (Optional)
  The id of the Google Cloud project containing the consumer network.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `services/{{service}}/projects/{{project}}/networks/{{network}}`


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


VPCServiceControls can be imported using any of these accepted formats:

* `services/{{service}}/projects/{{project}}/networks/{{network}}`
* `{{service}}/{{project}}/{{network}}`
* `{{service}}/{{network}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import VPCServiceControls using one of the formats above. For example:

```tf
import {
  id = "services/{{service}}/projects/{{project}}/networks/{{network}}"
  to = google_service_networking_vpc_service_controls.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), VPCServiceControls can be imported using one of the formats above. For example:

```
$ terraform import google_service_networking_vpc_service_controls.default services/{{service}}/projects/{{project}}/networks/{{network}}
$ terraform import google_service_networking_vpc_service_controls.default {{service}}/{{project}}/{{network}}
$ terraform import google_service_networking_vpc_service_controls.default {{service}}/{{network}}
```
