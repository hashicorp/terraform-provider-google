---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Configuration: https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/networkservices/WasmPlugin.yaml
#     Template:      https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/terraform/resource.html.markdown.tmpl
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "Network Services"
description: |-
  WasmPlugin is a resource representing a service executing a customer-provided Wasm module.
---

# google_network_services_wasm_plugin

WasmPlugin is a resource representing a service executing a customer-provided Wasm module.


To get more information about WasmPlugin, see:

* [API documentation](https://cloud.google.com/service-extensions/docs/reference/rest/v1/projects.locations.wasmPlugins)
* How-to Guides
    * [Configure a route extension](https://cloud.google.com/service-extensions/docs/create-plugin)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=wasm_plugin_basic_docker_repository&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Wasm Plugin Basic Docker Repository


```hcl
data "google_project" "project" {}

resource "google_network_services_wasm_plugin" "wasm_plugin" {
  name        = "my-wasm-plugin"
  description = "my wasm plugin from a docker repository"

  main_version_id = "v1"

  labels = {
    test_label =  "test_value"
  }
  log_config {
    enable =  true
    sample_rate = 1
    min_log_level =  "WARN"
  }

  versions {
    version_name = "v1"
    description = "v1 version of my wasm plugin"
    image_uri = "us-central1-docker.pkg.dev/${data.google_project.project.name}/my-artifact-registry-docker-repository/my-wasm-plugin-data:prod"

    labels = {
      test_label =  "test_value"
    }
  }
}
```
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=wasm_plugin_basic_generic_repository&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Wasm Plugin Basic Generic Repository


```hcl
data "google_project" "project" {}

resource "google_network_services_wasm_plugin" "wasm_plugin" {
  name        = "my-wasm-plugin"
  description = "my wasm plugin from a generic repository"

  main_version_id = "v1"

  labels = {
    test_label =  "test_value"
  }
  log_config {
    enable =  true
    sample_rate = 1
    min_log_level =  "WARN"
  }

  versions {
    version_name = "v1"
    description = "v1 version of my wasm plugin"
    image_uri = "projects/${data.google_project.project.name}/locations/us-central1/repositories/my-artifact-registry-generic-repository/genericArtifacts/my-wasm-plugin-data:v1"

    labels = {
      test_label =  "test_value"
    }
  }
}
```

## Argument Reference

The following arguments are supported:


* `main_version_id` -
  (Required)
  The ID of the WasmPluginVersion resource that is the currently serving one. The version referred to must be a child of this WasmPlugin resource and should be listed in the "versions" field.

* `versions` -
  (Required)
  All versions of this WasmPlugin resource in the key-value format. The key is the resource ID, and the value is the VersionDetails object.
  Structure is [documented below](#nested_versions).

* `name` -
  (Required)
  Identifier. Name of the WasmPlugin resource.


* `description` -
  (Optional)
  Optional. A human-readable description of the resource.

* `labels` -
  (Optional)
  Optional. Set of labels associated with the WasmPlugin resource.
  **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
  Please refer to the field `effective_labels` for all of the labels present on the resource.

* `log_config` -
  (Optional)
  Optional. Specifies the logging options for the activity performed by this plugin. If logging is enabled, plugin logs are exported to Cloud Logging.
  Note that the settings relate to the logs generated by using logging statements in your Wasm code.
  Structure is [documented below](#nested_log_config).

* `location` -
  (Optional)
  The location of the traffic extension

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.



<a name="nested_versions"></a>The `versions` block supports:

* `version_name` - (Required) The identifier for this object. Format specified above.

* `create_time` -
  (Output)
  Output only. The timestamp when the resource was created.

* `update_time` -
  (Output)
  Output only. The timestamp when the resource was updated.

* `description` -
  (Optional)
  Optional. A human-readable description of the resource.

* `labels` -
  (Optional)
  Optional. Set of labels associated with the WasmPlugin resource.

* `image_uri` -
  (Optional)
  Optional. URI of the container image containing the plugin, stored in the Artifact Registry. When a new WasmPluginVersion resource is created, the digest of the container image is saved in the imageDigest field.
  When downloading an image, the digest value is used instead of an image tag.

* `image_digest` -
  (Output)
  Output only. The resolved digest for the image specified in the image field. The digest is resolved during the creation of WasmPluginVersion resource.
  This field holds the digest value, regardless of whether a tag or digest was originally specified in the image field.

* `plugin_config_digest` -
  (Output)
  Output only. This field holds the digest (usually checksum) value for the plugin configuration.
  The value is calculated based on the contents of pluginConfigData or the container image defined by the pluginConfigUri field.

* `plugin_config_data` -
  (Optional)
  A base64-encoded string containing the configuration for the plugin. The configuration is provided to the plugin at runtime through the ON_CONFIGURE callback.
  When a new WasmPluginVersion resource is created, the digest of the contents is saved in the pluginConfigDigest field.
  Conflics with pluginConfigUri.

* `plugin_config_uri` -
  (Optional)
  URI of the plugin configuration stored in the Artifact Registry. The configuration is provided to the plugin at runtime through the ON_CONFIGURE callback.
  The container image must contain only a single file with the name plugin.config.
  When a new WasmPluginVersion resource is created, the digest of the container image is saved in the pluginConfigDigest field.
  Conflics with pluginConfigData.

<a name="nested_log_config"></a>The `log_config` block supports:

* `enable` -
  (Optional)
  Optional. Specifies whether to enable logging for activity by this plugin.

* `sample_rate` -
  (Optional)
  Non-empty default. Configures the sampling rate of activity logs, where 1.0 means all logged activity is reported and 0.0 means no activity is reported.
  A floating point value between 0.0 and 1.0 indicates that a percentage of log messages is stored.
  The default value when logging is enabled is 1.0. The value of the field must be between 0 and 1 (inclusive).
  This field can be specified only if logging is enabled for this plugin.

* `min_log_level` -
  (Optional)
  Non-empty default. Specificies the lowest level of the plugin logs that are exported to Cloud Logging. This setting relates to the logs generated by using logging statements in your Wasm code.
  This field is can be set only if logging is enabled for the plugin.
  If the field is not provided when logging is enabled, it is set to INFO by default.
  Possible values are: `LOG_LEVEL_UNSPECIFIED`, `TRACE`, `DEBUG`, `INFO`, `WARN`, `ERROR`, `CRITICAL`.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/wasmPlugins/{{name}}`

* `create_time` -
  Output only. The timestamp when the resource was created.

* `update_time` -
  Output only. The timestamp when the resource was updated.

* `used_by` -
  Output only. List of all extensions that use this WasmPlugin resource.
  Structure is [documented below](#nested_used_by).

* `terraform_labels` -
  The combination of labels configured directly on the resource
   and default labels configured on the provider.

* `effective_labels` -
  All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.


<a name="nested_used_by"></a>The `used_by` block contains:

* `name` -
  (Optional)
  Output only. Full name of the resource

## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


WasmPlugin can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/wasmPlugins/{{name}}`
* `{{project}}/{{location}}/{{name}}`
* `{{location}}/{{name}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import WasmPlugin using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/wasmPlugins/{{name}}"
  to = google_network_services_wasm_plugin.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), WasmPlugin can be imported using one of the formats above. For example:

```
$ terraform import google_network_services_wasm_plugin.default projects/{{project}}/locations/{{location}}/wasmPlugins/{{name}}
$ terraform import google_network_services_wasm_plugin.default {{project}}/{{location}}/{{name}}
$ terraform import google_network_services_wasm_plugin.default {{location}}/{{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
