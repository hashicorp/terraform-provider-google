---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Secure Source Manager"
description: |-
  BranchRule is the protection rule to enforce pre-defined rules on designated branches within a repository.
---

# google_secure_source_manager_branch_rule

BranchRule is the protection rule to enforce pre-defined rules on designated branches within a repository.


To get more information about BranchRule, see:
* How-to Guides
    * [Official Documentation](https://cloud.google.com/secure-source-manager/docs/overview)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=secure_source_manager_branch_rule_basic&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Secure Source Manager Branch Rule Basic


```hcl
resource "google_secure_source_manager_instance" "instance" {
    location = "us-central1"
    instance_id = "my-basic-instance"
    # Prevent accidental deletions.
    lifecycle {
        prevent_destroy = "true"
    }
}

resource "google_secure_source_manager_repository" "repository" {
    repository_id = "my-basic-repository"
    location = google_secure_source_manager_instance.instance.location
    instance = google_secure_source_manager_instance.instance.name
    # Prevent accidental deletions.
    lifecycle {
        prevent_destroy = "true"
    }
}

resource "google_secure_source_manager_branch_rule" "basic" {
    branch_rule_id = "my-basic-branchrule"
    repository_id = google_secure_source_manager_repository.repository.repository_id
    location = google_secure_source_manager_repository.repository.location
    # This field is required for BranchRule creation
    include_pattern = "main"
}
```
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=secure_source_manager_branch_rule_with_fields&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Secure Source Manager Branch Rule With Fields


```hcl
resource "google_secure_source_manager_instance" "instance" {
    location = "us-central1"
    instance_id = "my-initial-instance"
    # Prevent accidental deletions.
    lifecycle {
        prevent_destroy = "true"
    }
}

resource "google_secure_source_manager_repository" "repository" {
    repository_id = "my-initial-repository"
    instance = google_secure_source_manager_instance.instance.name
    location = google_secure_source_manager_instance.instance.location
    # Prevent accidental deletions.
    lifecycle {
        prevent_destroy = "true"
    }
}

resource "google_secure_source_manager_branch_rule" "default" {
    branch_rule_id = "my-initial-branchrule"
    location = google_secure_source_manager_repository.repository.location
    repository_id = google_secure_source_manager_repository.repository.repository_id
    include_pattern = "test"
    minimum_approvals_count   = 2
    minimum_reviews_count     = 2
    require_comments_resolved = true
    require_linear_history    = true
    require_pull_request      = true
    disabled = false
    allow_stale_reviews = false
}
```

## Argument Reference

The following arguments are supported:


* `include_pattern` -
  (Required)
  The BranchRule matches branches based on the specified regular expression. Use .* to match all branches.

* `branch_rule_id` -
  (Required)
  The ID for the BranchRule.

* `location` -
  (Required)
  The location for the Repository.

* `repository_id` -
  (Required)
  The ID for the Repository.


- - -


* `disabled` -
  (Optional)
  Determines if the branch rule is disabled or not.

* `require_pull_request` -
  (Optional)
  Determines if the branch rule requires a pull request or not.

* `minimum_reviews_count` -
  (Optional)
  The minimum number of reviews required for the branch rule to be matched.

* `minimum_approvals_count` -
  (Optional)
  The minimum number of approvals required for the branch rule to be matched.

* `require_comments_resolved` -
  (Optional)
  Determines if require comments resolved before merging to the branch.

* `allow_stale_reviews` -
  (Optional)
  Determines if allow stale reviews or approvals before merging to the branch.

* `require_linear_history` -
  (Optional)
  Determines if require linear history before merging to the branch.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/repositories/{{repository_id}}/branchRules/{{branch_rule_id}}`

* `name` -
  The resource name for the BranchRule.

* `uid` -
  Unique identifier of the BranchRule.

* `create_time` -
  Time the BranchRule was created in UTC.

* `update_time` -
  Time the BranchRule was updated in UTC.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


BranchRule can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/repositories/{{repository_id}}/branchRules/{{branch_rule_id}}`
* `{{project}}/{{location}}/{{repository_id}}/{{branch_rule_id}}`
* `{{location}}/{{repository_id}}/{{branch_rule_id}}`
* `{{branch_rule_id}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import BranchRule using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/repositories/{{repository_id}}/branchRules/{{branch_rule_id}}"
  to = google_secure_source_manager_branch_rule.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), BranchRule can be imported using one of the formats above. For example:

```
$ terraform import google_secure_source_manager_branch_rule.default projects/{{project}}/locations/{{location}}/repositories/{{repository_id}}/branchRules/{{branch_rule_id}}
$ terraform import google_secure_source_manager_branch_rule.default {{project}}/{{location}}/{{repository_id}}/{{branch_rule_id}}
$ terraform import google_secure_source_manager_branch_rule.default {{location}}/{{repository_id}}/{{branch_rule_id}}
$ terraform import google_secure_source_manager_branch_rule.default {{branch_rule_id}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
