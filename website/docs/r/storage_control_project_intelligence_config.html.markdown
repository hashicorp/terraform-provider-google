---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Configuration: https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/storagecontrol/ProjectIntelligenceConfig.yaml
#     Template:      https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/terraform/resource.html.markdown.tmpl
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "Cloud Storage Control"
description: |-
  The Project Storage Intelligence Config resource represents GCS Storage Intelligence operating on individual GCP project.
---

# google_storage_control_project_intelligence_config

The Project Storage Intelligence Config resource represents GCS Storage Intelligence operating on individual GCP project. Storage Intelligence Config is a singleton resource and individual instance exists on each GCP project.

Storage Intelligence is for Storage Admins to manage GCP storage assets at scale for performance, cost, security & compliance.



~> **Warning:** Storage Intelligence Config is a singleton resource which cannot be created or deleted. A single instance of Storage Intelligence Config exist for each GCP Project. Terraform does not create or destroy this resource.
Terraform resource creation for this resource is simply an update operation on existing resource with specified properties, absence of any optional field in the create operation will result in clearance of that field. Terraform deletion won't have any effect on this resource rather it will only remove it from the state file.

## Example Usage - Storage Control Project Intelligence Config Basic


```hcl
resource "google_storage_control_project_intelligence_config" "example" {
  name = "test-project"
  edition_config = "TRIAL"
  filter {
    included_cloud_storage_buckets{
      bucket_id_regexes = ["test-id-1*", "test-id-2*"]
    }
  }
}
```

## Argument Reference

The following arguments are supported:


* `name` -
  (Required)
  Identifier of the GCP project. For GCP project, this field can be project name or project number.


- - -


* `edition_config` -
  (Optional)
  Edition configuration of the Storage Intelligence resource. Valid values are INHERIT, TRIAL, DISABLED and STANDARD.

* `filter` -
  (Optional)
  Filter over location and bucket using include or exclude semantics. Resources that match the include or exclude filter are exclusively included or excluded from the Storage Intelligence plan.
  Structure is [documented below](#nested_filter).


<a name="nested_filter"></a>The `filter` block supports:

* `excluded_cloud_storage_buckets` -
  (Optional)
  Buckets to exclude from the Storage Intelligence plan.
  Structure is [documented below](#nested_filter_excluded_cloud_storage_buckets).

* `included_cloud_storage_buckets` -
  (Optional)
  Buckets to include in the Storage Intelligence plan.
  Structure is [documented below](#nested_filter_included_cloud_storage_buckets).

* `excluded_cloud_storage_locations` -
  (Optional)
  Locations to exclude from the Storage Intelligence plan.
  Structure is [documented below](#nested_filter_excluded_cloud_storage_locations).

* `included_cloud_storage_locations` -
  (Optional)
  Locations to include in the Storage Intelligence plan.
  Structure is [documented below](#nested_filter_included_cloud_storage_locations).


<a name="nested_filter_excluded_cloud_storage_buckets"></a>The `excluded_cloud_storage_buckets` block supports:

* `bucket_id_regexes` -
  (Required)
  List of bucket id regexes to exclude in the storage intelligence plan.

<a name="nested_filter_included_cloud_storage_buckets"></a>The `included_cloud_storage_buckets` block supports:

* `bucket_id_regexes` -
  (Required)
  List of bucket id regexes to exclude in the storage intelligence plan.

<a name="nested_filter_excluded_cloud_storage_locations"></a>The `excluded_cloud_storage_locations` block supports:

* `locations` -
  (Required)
  List of locations.

<a name="nested_filter_included_cloud_storage_locations"></a>The `included_cloud_storage_locations` block supports:

* `locations` -
  (Required)
  List of locations.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{name}}/locations/global/intelligenceConfig`

* `update_time` -
  The time at which the Storage Intelligence Config resource is last updated.

* `effective_intelligence_config` -
  The Intelligence config that is effective for the resource.
  Structure is [documented below](#nested_effective_intelligence_config).

* `trial_config` -
  The trial configuration of the Storage Intelligence resource.
  Structure is [documented below](#nested_trial_config).


<a name="nested_effective_intelligence_config"></a>The `effective_intelligence_config` block contains:

* `intelligence_config` -
  (Output)
  The Intelligence config resource that is applied for the target resource.

* `effective_edition` -
  (Output)
  The `StorageIntelligence` edition that is applicable for the resource.

<a name="nested_trial_config"></a>The `trial_config` block contains:

* `expire_time` -
  (Output)
  The time at which the trial expires.

## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


ProjectIntelligenceConfig can be imported using any of these accepted formats:

* `projects/{{name}}/locations/global/intelligenceConfig`
* `{{name}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import ProjectIntelligenceConfig using one of the formats above. For example:

```tf
import {
  id = "projects/{{name}}/locations/global/intelligenceConfig"
  to = google_storage_control_project_intelligence_config.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), ProjectIntelligenceConfig can be imported using one of the formats above. For example:

```
$ terraform import google_storage_control_project_intelligence_config.default projects/{{name}}/locations/global/intelligenceConfig
$ terraform import google_storage_control_project_intelligence_config.default {{name}}
```
