---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Vertex AI"
page_title: "Google: google_vertex_ai_featurestore"
description: |-
  A collection of DataItems and Annotations on them.
---

# google\_vertex\_ai\_featurestore

A collection of DataItems and Annotations on them.


To get more information about Featurestore, see:

* [API documentation](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.featurestores)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/vertex-ai/docs)

## Example Usage - Vertex Ai Featurestore


```hcl
resource "google_vertex_ai_featurestore" "featurestore" {
  name     = "terraform"
  labels = {
    foo = "bar"
  }
  region   = "us-central1"
  online_serving_config {
    fixed_node_count = 2
  }
  encryption_spec {
    kms_key_name = "kms-name"
  }
  force_destroy = true
}
```

## Argument Reference

The following arguments are supported:



- - -


* `name` -
  (Optional)
  The name of the Featurestore. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.

* `labels` -
  (Optional)
  A set of key/value label pairs to assign to this Featurestore.

* `online_serving_config` -
  (Optional)
  Config for online serving resources.
  Structure is [documented below](#nested_online_serving_config).

* `encryption_spec` -
  (Optional)
  If set, both of the online and offline data storage will be secured by this key.
  Structure is [documented below](#nested_encryption_spec).

* `region` -
  (Optional)
  The region of the dataset. eg us-central1

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.

* `force_destroy` - (Optional) If set to true, any EntityTypes and Features for this Featurestore will also be deleted

<a name="nested_online_serving_config"></a>The `online_serving_config` block supports:

* `fixed_node_count` -
  (Required)
  The number of nodes for each cluster. The number of nodes will not scale automatically but can be scaled manually by providing different values when updating.

<a name="nested_encryption_spec"></a>The `encryption_spec` block supports:

* `kms_key_name` -
  (Required)
  The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key. The key needs to be in the same region as where the compute resource is created.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{region}}/featurestores/{{name}}`

* `etag` -
  Used to perform consistent read-modify-write updates.

* `create_time` -
  The timestamp of when the featurestore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.

* `update_time` -
  The timestamp of when the featurestore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.


## Timeouts

This resource provides the following
[Timeouts](/docs/configuration/resources.html#timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


Featurestore can be imported using any of these accepted formats:

```
$ terraform import google_vertex_ai_featurestore.default projects/{{project}}/locations/{{region}}/featurestores/{{name}}
$ terraform import google_vertex_ai_featurestore.default {{project}}/{{region}}/{{name}}
$ terraform import google_vertex_ai_featurestore.default {{region}}/{{name}}
$ terraform import google_vertex_ai_featurestore.default {{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
