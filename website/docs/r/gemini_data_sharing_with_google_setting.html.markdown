---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Gemini for Google Cloud"
description: |-
  The resource for managing DataSharingWithGoogle settings for Admin Control.
---

# google_gemini_data_sharing_with_google_setting

The resource for managing DataSharingWithGoogle settings for Admin Control.

~> **Warning:** This resource is in beta, and should be used with the terraform-provider-google-beta provider.
See [Provider Versions](https://terraform.io/docs/providers/google/guides/provider_versions.html) for more details on beta resources.


## Example Usage - Gemini Data Sharing With Google Setting Basic


```hcl
resource "google_gemini_data_sharing_with_google_setting" "example" {
    provider = google-beta
    data_sharing_with_google_setting_id = "ls1-tf"
    location = "global"
    enable_preview_data_sharing = true
}
```

## Argument Reference

The following arguments are supported:


* `data_sharing_with_google_setting_id` -
  (Required)
  Required. Id of the requesting object.
  If auto-generating Id server-side, remove this field and
  data_sharing_with_google_setting_id from the method_signature of Create RPC


- - -


* `labels` -
  (Optional)
  Optional. Labels as key value pairs.
  **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
  Please refer to the field `effective_labels` for all of the labels present on the resource.

* `enable_preview_data_sharing` -
  (Optional)
  Optional. Whether preview data sharing should be enabled.

* `location` -
  (Optional)
  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/dataSharingWithGoogleSettings/{{data_sharing_with_google_setting_id}}`

* `name` -
  Identifier. Name of the resource.
  Format:projects/{project}/locations/{location}/dataSharingWithGoogleSettings/{dataSharingWithGoogleSetting}

* `create_time` -
  Output only. [Output only] Create time stamp.

* `update_time` -
  Output only. [Output only] Update time stamp.

* `terraform_labels` -
  The combination of labels configured directly on the resource
   and default labels configured on the provider.

* `effective_labels` -
  All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


DataSharingWithGoogleSetting can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/dataSharingWithGoogleSettings/{{data_sharing_with_google_setting_id}}`
* `{{project}}/{{location}}/{{data_sharing_with_google_setting_id}}`
* `{{location}}/{{data_sharing_with_google_setting_id}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import DataSharingWithGoogleSetting using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/dataSharingWithGoogleSettings/{{data_sharing_with_google_setting_id}}"
  to = google_gemini_data_sharing_with_google_setting.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), DataSharingWithGoogleSetting can be imported using one of the formats above. For example:

```
$ terraform import google_gemini_data_sharing_with_google_setting.default projects/{{project}}/locations/{{location}}/dataSharingWithGoogleSettings/{{data_sharing_with_google_setting_id}}
$ terraform import google_gemini_data_sharing_with_google_setting.default {{project}}/{{location}}/{{data_sharing_with_google_setting_id}}
$ terraform import google_gemini_data_sharing_with_google_setting.default {{location}}/{{data_sharing_with_google_setting_id}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
