---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Dataproc on GDC"
description: |-
  An ApplicationEnvironment contains shared configuration that may be referenced by multiple SparkApplications.
---

# google_dataproc_gdc_application_environment

An ApplicationEnvironment contains shared configuration that may be referenced by multiple SparkApplications.


To get more information about ApplicationEnvironment, see:

* [API documentation](https://cloud.google.com/dataproc-gdc/docs/reference/rest/v1/projects.locations.applicationEnvironments)
* How-to Guides
    * [Dataproc Intro](https://cloud.google.com/dataproc/)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=dataprocgdc_applicationenvironment_basic&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Dataprocgdc Applicationenvironment Basic


```hcl
resource "google_dataproc_gdc_application_environment" "application-environment" {
  application_environment_id = "dp-tf-e2e-application-environment-basic"
  serviceinstance = "do-not-delete-dataproc-gdc-instance"
  project         = "my-project"
  location        = "us-west2"
  namespace = "default"
}
```
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=dataprocgdc_applicationenvironment&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Dataprocgdc Applicationenvironment


```hcl
resource "google_dataproc_gdc_application_environment" "application-environment" {
  application_environment_id = "dp-tf-e2e-application-environment"
  serviceinstance = "do-not-delete-dataproc-gdc-instance"
  project         = "my-project"
  location        = "us-west2"
  namespace = "default"
  display_name = "An application environment"
  labels = {
    "test-label": "label-value"
  }
  annotations = {
    "an_annotation": "annotation_value"
  }
  spark_application_environment_config {
    default_properties = {
      "spark.executor.memory": "4g"
    }
    default_version = "1.2"
  }
}
```

## Argument Reference

The following arguments are supported:


* `location` -
  (Required)
  The location of the application environment

* `serviceinstance` -
  (Required)
  The id of the service instance to which this application environment belongs.


- - -


* `display_name` -
  (Optional)
  User-provided human-readable name to be used in user interfaces.

* `labels` -
  (Optional)
  The labels to associate with this application environment. Labels may be used for filtering and billing tracking. 
  **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
  Please refer to the field `effective_labels` for all of the labels present on the resource.

* `annotations` -
  (Optional)
  The annotations to associate with this application environment. Annotations may be used to store client information, but are not used by the server.
  **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
  Please refer to the field `effective_annotations` for all of the annotations present on the resource.

* `spark_application_environment_config` -
  (Optional)
  Represents the SparkApplicationEnvironmentConfig.
  Structure is [documented below](#nested_spark_application_environment_config).

* `namespace` -
  (Optional)
  The name of the namespace in which to create this ApplicationEnvironment. This namespace must already exist in the cluster

* `application_environment_id` -
  (Optional)
  The id of the application environment

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


<a name="nested_spark_application_environment_config"></a>The `spark_application_environment_config` block supports:

* `default_properties` -
  (Optional)
  A map of default Spark properties to apply to workloads in this application environment. These defaults may be overridden by per-application properties.

* `default_version` -
  (Optional)
  The default Dataproc version to use for applications submitted to this application environment

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/serviceInstances/{{serviceinstance}}/applicationEnvironments/{{application_environment_id}}`

* `name` -
  Identifier. The name of the application environment. Format: projects/{project}/locations/{location}/serviceInstances/{service_instance}/applicationEnvironments/{application_environment_id}

* `uid` -
  System generated unique identifier for this application environment, formatted as UUID4.

* `create_time` -
  The timestamp when the resource was created.

* `update_time` -
  The timestamp when the resource was most recently updated.

* `terraform_labels` -
  The combination of labels configured directly on the resource
   and default labels configured on the provider.

* `effective_labels` -
  All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.

* `effective_annotations` -
  All of annotations (key/value pairs) present on the resource in GCP, including the annotations configured through Terraform, other clients and services.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


ApplicationEnvironment can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/serviceInstances/{{serviceinstance}}/applicationEnvironments/{{application_environment_id}}`
* `{{project}}/{{location}}/{{serviceinstance}}/{{application_environment_id}}`
* `{{location}}/{{serviceinstance}}/{{application_environment_id}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import ApplicationEnvironment using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/serviceInstances/{{serviceinstance}}/applicationEnvironments/{{application_environment_id}}"
  to = google_dataproc_gdc_application_environment.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), ApplicationEnvironment can be imported using one of the formats above. For example:

```
$ terraform import google_dataproc_gdc_application_environment.default projects/{{project}}/locations/{{location}}/serviceInstances/{{serviceinstance}}/applicationEnvironments/{{application_environment_id}}
$ terraform import google_dataproc_gdc_application_environment.default {{project}}/{{location}}/{{serviceinstance}}/{{application_environment_id}}
$ terraform import google_dataproc_gdc_application_environment.default {{location}}/{{serviceinstance}}/{{application_environment_id}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
