---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
layout: "google"
page_title: "Google: google_app_engine_application_url_dispatch_rules"
sidebar_current: "docs-google-app-engine-application-url-dispatch-rules"
description: |-
  Rules to match an HTTP request and dispatch that request to a service.
---

# google\_app\_engine\_application\_url\_dispatch\_rules

Rules to match an HTTP request and dispatch that request to a service.


To get more information about ApplicationUrlDispatchRules, see:

* [API documentation](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps#UrlDispatchRule)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=app_engine_application_url_dispatch_rules_basic_example&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - App Engine Application Url Dispatch Rules Basic Example


```hcl
resource "google_storage_bucket" "bucket" {
	name = ""
}

resource "google_storage_bucket_object" "object" {
	name   = "hello-world.zip"
	bucket = "${google_storage_bucket.bucket.name}"
	source = "./test-fixtures/appengine/hello-world.zip"
}

resource "google_app_engine_standard_app_version" "myapp_v1" {
  version_id = "v1"
  service = "myapp"
  runtime = "nodejs10"
  noop_on_destroy = true
  entrypoint {
    shell = "node ./app.js"
  }
  deployment {
    zip {
      source_url = "https://storage.googleapis.com/${google_storage_bucket.bucket.name}/hello-world.zip"
    }  
  }
  env_variables = {
    port = "8080"
  } 
  depends_on = ["google_storage_bucket_object.object"]

}

resource "google_app_engine_application_url_dispatch_rules" "service_rules" {
  # project = "my-project"
  dispatch_rules {
    domain = "*"
    path = "/default/*"
    service = "default"
  }
  dispatch_rules {
    domain = "*"
    path = "/myapp/*"
    service = "myapp"
  }
}
```

## Argument Reference

The following arguments are supported:



- - -


* `dispatch_rules` -
  (Optional)
  Rules to match an HTTP request and dispatch that request to a service.  Structure is documented below.


The `dispatch_rules` block supports:

* `domain` -
  (Optional)
  Domain name to match against. The wildcard "*" is supported if specified before a period: "*.".
  Defaults to matching all domains: "*".

* `path` -
  (Optional)
  Pathname within the host. Must start with a "/". A single "*" can be included at the end of the path.
  The sum of the lengths of the domain and path may not exceed 100 characters.

* `service` -
  (Optional)
  Pathname within the host. Must start with a "/". A single "*" can be included at the end of the path.
  The sum of the lengths of the domain and path may not exceed 100 characters.


## Timeouts

This resource provides the following
[Timeouts](/docs/configuration/resources.html#timeouts) configuration options:

- `create` - Default is 4 minutes.
- `update` - Default is 4 minutes.
- `delete` - Default is 4 minutes.

## Import

ApplicationUrlDispatchRules can be imported using any of these accepted formats:

```
$ terraform import google_app_engine_application_url_dispatch_rules.default {{project}}
```

-> If you're importing a resource with beta features, make sure to include `-provider=google-beta`
as an argument so that Terraform uses the correct provider to import your resource.
