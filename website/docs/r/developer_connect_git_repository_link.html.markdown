---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Developer Connect"
description: |-
  A git repository link to a parent connection.
---

# google_developer_connect_git_repository_link

A git repository link to a parent connection.

~> **Warning:** This resource is in beta, and should be used with the terraform-provider-google-beta provider.
See [Provider Versions](https://terraform.io/docs/providers/google/guides/provider_versions.html) for more details on beta resources.


## Example Usage - Developer Connect Git Repository Link Github Doc


```hcl
resource "google_secret_manager_secret" "github-token-secret" {
  provider = google-beta
  secret_id = "github-token-secret"

  replication {
    auto {}
  }
}

resource "google_secret_manager_secret_version" "github-token-secret-version" {
  secret = google_secret_manager_secret.github-token-secret.id
  secret_data = file("my-github-token.txt")
}

data "google_iam_policy" "p4sa-secretAccessor" {
  binding {
    role = "roles/secretmanager.secretAccessor"
    // Here, 123456789 is the Google Cloud project number for the project that contains the connection.
    members = ["serviceAccount:service-123456789@gcp-sa-devconnect.iam.gserviceaccount.com"]
  }
}

resource "google_secret_manager_secret_iam_policy" "policy" {
  secret_id = google_secret_manager_secret.github-token-secret.secret_id
  policy_data = data.google_iam_policy.p4sa-secretAccessor.policy_data
}

resource "google_developer_connect_connection" "my-connection" {
  location = "us-central1"
  connection_id = "my-connection"

  github_config {
    github_app = "DEVELOPER_CONNECT"
    app_installation_id = 123123
    authorizer_credential {
      oauth_token_secret_version = google_secret_manager_secret_version.github-token-secret-version.id
    }
  }
}

resource "google_developer_connect_git_repository_link" "my-repository" {
  location = "us-central1"
  git_repository_link_id = "my-repo"
  parent_connection = google_developer_connect_connection.my-connection.connection_id
  remote_uri = "https://github.com/myuser/myrepo.git"
}
```

## Argument Reference

The following arguments are supported:


* `clone_uri` -
  (Required)
  Required. Git Clone URI.

* `location` -
  (Required)
  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `developerconnect.googleapis.com/GitRepositoryLink`.

* `parent_connection` -
  (Required)
  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `developerconnect.googleapis.com/GitRepositoryLink`.

* `git_repository_link_id` -
  (Required)
  Required. The ID to use for the repository, which will become the final component of
  the repository's resource name. This ID should be unique in the connection.
  Allows alphanumeric characters and any of -._~%!$&'()*+,;=@.


- - -


* `labels` -
  (Optional)
  Optional. Labels as key value pairs 
  **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
  Please refer to the field `effective_labels` for all of the labels present on the resource.

* `etag` -
  (Optional)
  Optional. This checksum is computed by the server based on the value of other
  fields, and may be sent on update and delete requests to ensure the
  client has an up-to-date value before proceeding.

* `annotations` -
  (Optional)
  Optional. Allows clients to store small amounts of arbitrary data. 
  **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
  Please refer to the field `effective_annotations` for all of the annotations present on the resource.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/connections/{{parent_connection}}/gitRepositoryLinks/{{git_repository_link_id}}`

* `name` -
  Identifier. Resource name of the repository, in the format
  `projects/*/locations/*/connections/*/gitRepositoryLinks/*`.

* `create_time` -
  Output only. [Output only] Create timestamp

* `update_time` -
  Output only. [Output only] Update timestamp

* `delete_time` -
  Output only. [Output only] Delete timestamp

* `reconciling` -
  Output only. Set to true when the connection is being set up or updated in the
  background.

* `uid` -
  Output only. A system-assigned unique identifier for a the GitRepositoryLink.

* `terraform_labels` -
  The combination of labels configured directly on the resource
   and default labels configured on the provider.

* `effective_labels` -
  All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.

* `effective_annotations` -
  All of annotations (key/value pairs) present on the resource in GCP, including the annotations configured through Terraform, other clients and services.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


GitRepositoryLink can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/connections/{{parent_connection}}/gitRepositoryLinks/{{git_repository_link_id}}`
* `{{project}}/{{location}}/{{parent_connection}}/{{git_repository_link_id}}`
* `{{location}}/{{parent_connection}}/{{git_repository_link_id}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import GitRepositoryLink using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/connections/{{parent_connection}}/gitRepositoryLinks/{{git_repository_link_id}}"
  to = google_developer_connect_git_repository_link.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), GitRepositoryLink can be imported using one of the formats above. For example:

```
$ terraform import google_developer_connect_git_repository_link.default projects/{{project}}/locations/{{location}}/connections/{{parent_connection}}/gitRepositoryLinks/{{git_repository_link_id}}
$ terraform import google_developer_connect_git_repository_link.default {{project}}/{{location}}/{{parent_connection}}/{{git_repository_link_id}}
$ terraform import google_developer_connect_git_repository_link.default {{location}}/{{parent_connection}}/{{git_repository_link_id}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
