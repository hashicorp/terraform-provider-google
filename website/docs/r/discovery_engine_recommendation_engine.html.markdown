---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Configuration: https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/discoveryengine/RecommendationEngine.yaml
#     Template:      https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/terraform/resource.html.markdown.tmpl
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "Discovery Engine"
description: |-
  Vertex AI Search recommendation apps.
---

# google_discovery_engine_recommendation_engine

Vertex AI Search recommendation apps.


To get more information about RecommendationEngine, see:

* [API documentation](https://cloud.google.com/generative-ai-app-builder/docs/reference/rest/v1/projects.locations.collections.engines)
* How-to Guides
    * [Create a Recommendation Engine](https://cloud.google.com/generative-ai-app-builder/docs/create-generic-recommendations-app)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=discoveryengine_recommendationengine_generic&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Discoveryengine Recommendationengine Generic


```hcl
resource "google_discovery_engine_data_store" "generic" {
  location                     = "global"
  data_store_id                = "recommendation-datastore-id"
  display_name                 = "tf-test-structured-datastore"
  industry_vertical            = "GENERIC"
  content_config               = "NO_CONTENT"
  solution_types               = ["SOLUTION_TYPE_RECOMMENDATION"]
  create_advanced_site_search  = false
  skip_default_schema_creation = false
}
resource "google_discovery_engine_recommendation_engine" "generic" {
  engine_id                    = "recommendation-engine-id"
  location                     = google_discovery_engine_data_store.generic.location
  display_name                 = "Example Recommendation Engine"
  data_store_ids               = [google_discovery_engine_data_store.generic.data_store_id]
  industry_vertical            = "GENERIC"
  common_config {
    company_name               = "test-company"
  }
}
```
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=discoveryengine_recommendationengine_media&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Discoveryengine Recommendationengine Media


```hcl
resource "google_discovery_engine_data_store" "media" {
  location                     = "global"
  data_store_id                = "recommendation-datastore-id"
  display_name                 = "tf-test-structured-datastore"
  industry_vertical            = "MEDIA"
  content_config               = "NO_CONTENT"
  solution_types               = ["SOLUTION_TYPE_RECOMMENDATION"]
  create_advanced_site_search  = false
  skip_default_schema_creation = false
}
resource "google_discovery_engine_recommendation_engine" "media" {
  engine_id                    = "recommendation-engine-id"
  location                     = google_discovery_engine_data_store.media.location
  display_name                 = "Example Media Recommendation Engine"
  data_store_ids               = [google_discovery_engine_data_store.media.data_store_id]
  industry_vertical            = "MEDIA"
  media_recommendation_engine_config {
    type                       = "recommended-for-you"
    optimization_objective     = "ctr"
    training_state             = "PAUSED"
    engine_features_config {
        recommended_for_you_config {
            context_event_type = "generic"
        }
    }
  }
  common_config {
    company_name               = "test-company"
  }
}
```

## Argument Reference

The following arguments are supported:


* `display_name` -
  (Required)
  Required. The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024 characters.

* `data_store_ids` -
  (Required)
  The data stores associated with this engine. For SOLUTION_TYPE_RECOMMENDATION type of engines, they can only associate with at most one data store.

* `engine_id` -
  (Required)
  Unique ID to use for Recommendation Engine.

* `location` -
  (Required)
  The geographic location where the data store should reside. The value can
  only be one of "global", "us" and "eu".


* `industry_vertical` -
  (Optional)
  The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: If unspecified, default to GENERIC. Vertical on Engine has to match vertical of the DataStore liniked to the engine.
  Default value is `GENERIC`.
  Possible values are: `GENERIC`, `MEDIA`.

* `media_recommendation_engine_config` -
  (Optional)
  Configurations for a Media Recommendation Engine. Only applicable on the data stores
  with SOLUTION_TYPE_RECOMMENDATION solution type and MEDIA industry vertical.
  Structure is [documented below](#nested_media_recommendation_engine_config).

* `common_config` -
  (Optional)
  Common config spec that specifies the metadata of the engine.
  Structure is [documented below](#nested_common_config).

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.



<a name="nested_media_recommendation_engine_config"></a>The `media_recommendation_engine_config` block supports:

* `type` -
  (Optional)
  The type of engine. e.g., `recommended-for-you`.
  This field together with MediaRecommendationEngineConfig.optimizationObjective describes
  engine metadata to use to control engine training and serving.
  Currently supported values: `recommended-for-you`, `others-you-may-like`,
  `more-like-this`, `most-popular-items`.

* `optimization_objective` -
  (Optional)
  The optimization objective. e.g., `cvr`.
  This field together with MediaRecommendationEngineConfig.type describes
  engine metadata to use to control engine training and serving.
  Currently supported values: `ctr`, `cvr`.
  If not specified, we choose default based on engine type. Default depends on type of recommendation:
  `recommended-for-you` => `ctr`
  `others-you-may-like` => `ctr`

* `optimization_objective_config` -
  (Optional)
  Name and value of the custom threshold for cvr optimization_objective.
  For target_field `watch-time`, target_field_value must be an integer
  value indicating the media progress time in seconds between (0, 86400]
  (excludes 0, includes 86400) (e.g., 90).
  For target_field `watch-percentage`, the target_field_value must be a
  valid float value between (0, 1.0] (excludes 0, includes 1.0) (e.g., 0.5).
  Structure is [documented below](#nested_media_recommendation_engine_config_optimization_objective_config).

* `training_state` -
  (Optional)
  The training state that the engine is in (e.g. `TRAINING` or `PAUSED`).
  Since part of the cost of running the service
  is frequency of training - this can be used to determine when to train
  engine in order to control cost. If not specified: the default value for
  `CreateEngine` method is `TRAINING`. The default value for
  `UpdateEngine` method is to keep the state the same as before.
  Possible values are: `PAUSED`, `TRAINING`.

* `engine_features_config` -
  (Optional)
  More feature configs of the selected engine type.
  Structure is [documented below](#nested_media_recommendation_engine_config_engine_features_config).


<a name="nested_media_recommendation_engine_config_optimization_objective_config"></a>The `optimization_objective_config` block supports:

* `target_field` -
  (Optional)
  The name of the field to target. Currently supported values: `watch-percentage`, `watch-time`.

* `target_field_value_float` -
  (Optional)
  The threshold to be applied to the target (e.g., 0.5).

<a name="nested_media_recommendation_engine_config_engine_features_config"></a>The `engine_features_config` block supports:

* `recommended_for_you_config` -
  (Optional)
  Additional feature configurations for creating a `recommended-for-you` engine.
  Structure is [documented below](#nested_media_recommendation_engine_config_engine_features_config_recommended_for_you_config).

* `most_popular_config` -
  (Optional)
  Feature configurations that are required for creating a Most Popular engine.
  Structure is [documented below](#nested_media_recommendation_engine_config_engine_features_config_most_popular_config).


<a name="nested_media_recommendation_engine_config_engine_features_config_recommended_for_you_config"></a>The `recommended_for_you_config` block supports:

* `context_event_type` -
  (Optional)
  The type of event with which the engine is queried at prediction time.
  If set to `generic`, only `view-item`, `media-play`,and
  `media-complete` will be used as `context-event` in engine training. If
  set to `view-home-page`, `view-home-page` will also be used as
  `context-events` in addition to `view-item`, `media-play`, and
  `media-complete`. Currently supported for the `recommended-for-you`
  engine. Currently supported values: `view-home-page`, `generic`.

<a name="nested_media_recommendation_engine_config_engine_features_config_most_popular_config"></a>The `most_popular_config` block supports:

* `time_window_days` -
  (Optional)
  The time window of which the engine is queried at training and
  prediction time. Positive integers only. The value translates to the
  last X days of events. Currently required for the `most-popular-items`
  engine.

<a name="nested_common_config"></a>The `common_config` block supports:

* `company_name` -
  (Optional)
  The name of the company, business or entity that is associated with the engine. Setting this may help improve LLM related features.cd

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/collections/default_collection/engines/{{engine_id}}`

* `name` -
  The unique full resource name of the recommendation engine. Values are of the format
  `projects/{project}/locations/{location}/collections/{collection}/engines/{engine_id}`.
  This field must be a UTF-8 encoded string with a length limit of 1024 characters.

* `create_time` -
  Timestamp the Engine was created at.

* `update_time` -
  Timestamp the Engine was last updated.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


RecommendationEngine can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/collections/default_collection/engines/{{engine_id}}`
* `{{project}}/{{location}}/{{engine_id}}`
* `{{location}}/{{engine_id}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import RecommendationEngine using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/collections/default_collection/engines/{{engine_id}}"
  to = google_discovery_engine_recommendation_engine.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), RecommendationEngine can be imported using one of the formats above. For example:

```
$ terraform import google_discovery_engine_recommendation_engine.default projects/{{project}}/locations/{{location}}/collections/default_collection/engines/{{engine_id}}
$ terraform import google_discovery_engine_recommendation_engine.default {{project}}/{{location}}/{{engine_id}}
$ terraform import google_discovery_engine_recommendation_engine.default {{location}}/{{engine_id}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
