---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Configuration: https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/discoveryengine/Assistant.yaml
#     Template:      https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/terraform/resource.html.markdown.tmpl
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "Discovery Engine"
description: |-
  Assistant
---

# google_discovery_engine_assistant

Assistant


To get more information about Assistant, see:

* [API documentation](https://cloud.google.com/generative-ai-app-builder/docs/reference/rpc/google.cloud.discoveryengine.v1#assistantservice)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=discoveryengine_assistant_basic&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Discoveryengine Assistant Basic


```hcl
resource "google_discovery_engine_data_store" "basic" {
  location                      = "global"
  data_store_id                 = "example-data-store-id"
  display_name                  = "tf-test-structured-datastore"
  industry_vertical             = "GENERIC"
  content_config                = "NO_CONTENT"
  solution_types                = ["SOLUTION_TYPE_SEARCH"]
  create_advanced_site_search   = false
}
resource "google_discovery_engine_search_engine" "basic" {
  location                      = "global"
  collection_id                 = "default_collection"
  engine_id                     = "example-engine-id"
  display_name                  = "Example Display Name"
  data_store_ids                = [google_discovery_engine_data_store.basic.data_store_id]
  search_engine_config {
  }
}
resource "google_discovery_engine_assistant" "basic" {
  location                      = "global"
  collection_id                 = "default_collection"
  engine_id                     = google_discovery_engine_search_engine.basic.engine_id
  assistant_id                  = "example-assistant-id"
  display_name                  = "updated-tf-test-Assistant"
  description                   = "Assistant Description"
  generation_config {
    system_instruction {
      additional_system_instruction = "foobar"
    }
    default_language            = "en"
  }
  customer_policy {
    banned_phrases {
      phrase                    = "foo"
      match_type                = "SIMPLE_STRING_MATCH"
      ignore_diacritics         = false
    }
  }
  web_grounding_type            = "WEB_GROUNDING_TYPE_GOOGLE_SEARCH"
}
```

## Argument Reference

The following arguments are supported:


* `display_name` -
  (Required)
  The assistant display name.
  It must be a UTF-8 encoded string with a length limit of 128 characters.

* `location` -
  (Required)
  The geographic location where the data store should reside. The value can
  only be one of "global", "us" and "eu".

* `collection_id` -
  (Required)
  The unique id of the collection.

* `engine_id` -
  (Required)
  The unique id of the engine.

* `assistant_id` -
  (Required)
  The unique id of the assistant.


* `description` -
  (Optional)
  Description for additional information. Expected to be shown on the
  configuration UI, not to the users of the assistant.

* `generation_config` -
  (Optional)
  Configuration for the generation of the assistant response.
  Structure is [documented below](#nested_generation_config).

* `customer_policy` -
  (Optional)
  Customer policy for the assistant.
  Structure is [documented below](#nested_customer_policy).

* `web_grounding_type` -
  (Optional)
  The type of web grounding to use.
  The supported values: 'WEB_GROUNDING_TYPE_DISABLED', 'WEB_GROUNDING_TYPE_GOOGLE_SEARCH', 'WEB_GROUNDING_TYPE_ENTERPRISE_WEB_SEARCH'.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.



<a name="nested_generation_config"></a>The `generation_config` block supports:

* `system_instruction` -
  (Optional)
  System instruction, also known as the prompt preamble for LLM calls.
  See also https://cloud.google.com/vertex-ai/generative-ai/docs/learn/prompts/system-instructions
  Structure is [documented below](#nested_generation_config_system_instruction).

* `default_language` -
  (Optional)
  The default language to use for the generation of the assistant response.
  Use an ISO 639-1 language code such as `en`.
  If not specified, the language will be automatically detected.


<a name="nested_generation_config_system_instruction"></a>The `system_instruction` block supports:

* `additional_system_instruction` -
  (Optional)
  Additional system instruction that will be added to the default system instruction.

<a name="nested_customer_policy"></a>The `customer_policy` block supports:

* `banned_phrases` -
  (Optional)
  List of banned phrases.
  Structure is [documented below](#nested_customer_policy_banned_phrases).

* `model_armor_config` -
  (Optional)
  Model Armor configuration to be used for sanitizing user prompts and assistant responses.
  Structure is [documented below](#nested_customer_policy_model_armor_config).


<a name="nested_customer_policy_banned_phrases"></a>The `banned_phrases` block supports:

* `phrase` -
  (Required)
  The raw string content to be banned.

* `match_type` -
  (Optional)
  Match type for the banned phrase.
  The supported values: 'SIMPLE_STRING_MATCH', 'WORD_BOUNDARY_STRING_MATCH'.

* `ignore_diacritics` -
  (Optional)
  If true, diacritical marks (e.g., accents, umlauts) are ignored when
  matching banned phrases. For example, "cafe" would match "caf√©".

<a name="nested_customer_policy_model_armor_config"></a>The `model_armor_config` block supports:

* `user_prompt_template` -
  (Required)
  The resource name of the Model Armor template for sanitizing user
  prompts. Format:
  `projects/{project}/locations/{location}/templates/{template_id}`
  If not specified, no sanitization will be applied to the user prompt.

* `response_template` -
  (Required)
  The resource name of the Model Armor template for sanitizing assistant
  responses. Format:
  `projects/{project}/locations/{location}/templates/{template_id}`
  If not specified, no sanitization will be applied to the assistant
  response.

* `failure_mode` -
  (Optional)
  Defines the failure mode for Model Armor sanitization.
  The supported values: 'FAIL_OPEN', 'FAIL_CLOSED'.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/collections/{{collection_id}}/engines/{{engine_id}}/assistants/{{assistant_id}}`

* `name` -
  Resource name of the assistant.
  Format:
  `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}/assistants/{assistant}`
  It must be a UTF-8 encoded string with a length limit of 1024 characters.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


Assistant can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/collections/{{collection_id}}/engines/{{engine_id}}/assistants/{{assistant_id}}`
* `{{project}}/{{location}}/{{collection_id}}/{{engine_id}}/{{assistant_id}}`
* `{{location}}/{{collection_id}}/{{engine_id}}/{{assistant_id}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Assistant using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/collections/{{collection_id}}/engines/{{engine_id}}/assistants/{{assistant_id}}"
  to = google_discovery_engine_assistant.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), Assistant can be imported using one of the formats above. For example:

```
$ terraform import google_discovery_engine_assistant.default projects/{{project}}/locations/{{location}}/collections/{{collection_id}}/engines/{{engine_id}}/assistants/{{assistant_id}}
$ terraform import google_discovery_engine_assistant.default {{project}}/{{location}}/{{collection_id}}/{{engine_id}}/{{assistant_id}}
$ terraform import google_discovery_engine_assistant.default {{location}}/{{collection_id}}/{{engine_id}}/{{assistant_id}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
