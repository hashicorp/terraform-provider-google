---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Configuration: https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/apigee/ControlPlaneAccess.yaml
#     Template:      https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/terraform/resource.html.markdown.tmpl
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "Apigee"
description: |-
  Authorize the Runtime components to access directly with Apigee Control Plane.
---

# google_apigee_control_plane_access

Authorize the Runtime components to access directly with Apigee Control Plane.


To get more information about ControlPlaneAccess, see:

* [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations/updateControlPlaneAccess)
* How-to Guides
    * [Enable ControlPlane access](https://cloud.google.com/apigee/docs/hybrid/v1.14/install-enable-control-plane-access)

## Example Usage - Apigee Control Plane Access Basic Test


```hcl
resource "google_project" "project" {
  project_id      = "my-project"
  name            = "my-project"
  org_id          = "123456789"
  billing_account = "000000-0000000-0000000-000000"
  deletion_policy = "DELETE"
}

resource "google_project_service" "apigee" {
  project = google_project.project.project_id
  service = "apigee.googleapis.com"
}

resource "google_apigee_organization" "apigee_org" {
  analytics_region   = "us-central1"
  project_id         = google_project.project.project_id

  runtime_type       = "HYBRID"
  depends_on         = [google_project_service.apigee]
}

resource "google_service_account" "service_account" {
  account_id   = "my-account"
  display_name = "Service Account"
}

resource "google_project_iam_member" "synchronizer-iam" {
  project = google_project.project.project_id
  role    = "roles/apigee.synchronizerManager"
  member = "serviceAccount:${google_service_account.service_account.email}"
}

resource "google_apigee_control_plane_access" "apigee_control_plane_access" {
  name       = google_apigee_organization.apigee_org.name
  synchronizer_identities = [
    "serviceAccount:${google_service_account.service_account.email}",
  ]
  analytics_publisher_identities = [
    "serviceAccount:${google_service_account.service_account.email}",
  ]
}
```

## Argument Reference

The following arguments are supported:


* `name` -
  (Required)
  Name of the Apigee organization.


- - -


* `synchronizer_identities` -
  (Optional)
  Array of service accounts to grant access to control plane resources (for the Synchronizer component), each specified using the following format: `serviceAccount:service-account-name`.
  The `service-account-name` is formatted like an email address. For example: serviceAccount@my_project_id.iam.gserviceaccount.com
  You might specify multiple service accounts, for example, if you have multiple environments and wish to assign a unique service account to each one.
  The service accounts must have **Apigee Synchronizer Manager** role. See also [Create service accounts](https://cloud.google.com/apigee/docs/hybrid/v1.8/sa-about#create-the-service-accounts).

* `analytics_publisher_identities` -
  (Optional)
  Array of service accounts authorized to publish analytics data to the control plane, each specified using the following format: `serviceAccount:service-account-name`.
  The `service-account-name` is formatted like an email address. For example: serviceAccount@my_project_id.iam.gserviceaccount.com
  You might specify multiple service accounts, for example, if you have multiple environments and wish to assign a unique service account to each one.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `organizations/{{name}}/controlPlaneAccess`


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


ControlPlaneAccess can be imported using any of these accepted formats:

* `organizations/{{name}}/controlPlaneAccess`
* `{{name}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import ControlPlaneAccess using one of the formats above. For example:

```tf
import {
  id = "organizations/{{name}}/controlPlaneAccess"
  to = google_apigee_control_plane_access.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), ControlPlaneAccess can be imported using one of the formats above. For example:

```
$ terraform import google_apigee_control_plane_access.default organizations/{{name}}/controlPlaneAccess
$ terraform import google_apigee_control_plane_access.default {{name}}
```
