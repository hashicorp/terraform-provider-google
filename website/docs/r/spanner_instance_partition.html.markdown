---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Configuration: https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/spanner/InstancePartition.yaml
#     Template:      https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/terraform/resource.html.markdown.tmpl
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "Cloud Spanner"
description: |-
  A Cloud Spanner instance partition is a unit of Cloud Spanner database capacity
  that can be used to partition data and processing capacity within an instance.
---

# google_spanner_instance_partition

A Cloud Spanner instance partition is a unit of Cloud Spanner database capacity
that can be used to partition data and processing capacity within an instance.


To get more information about InstancePartition, see:

* [API documentation](https://cloud.google.com/spanner/docs/reference/rest/v1/projects.instances.instancePartitions)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/spanner/docs/geo-partitioning)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=spanner_instance_partition_basic&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Spanner Instance Partition Basic


```hcl
resource "google_spanner_instance" "main" {
  name         = "test-instance"
  config       = "nam6"
  display_name = "main-instance"
  num_nodes    = 1
  edition     = "ENTERPRISE_PLUS"
}

resource "google_spanner_instance_partition" "partition" {
  name         = "test-partition"
  instance     = google_spanner_instance.main.name
  config       = "nam8"
  display_name = "test-spanner-partition"
  node_count   = 1
} 
```

## Argument Reference

The following arguments are supported:


* `name` -
  (Required)
  A unique identifier for the instance partition, which cannot be changed after
  the instance partition is created. The name must be between 2 and 64 characters
  and match the regular expression [a-z][a-z0-9\\-]{0,61}[a-z0-9].

* `display_name` -
  (Required)
  The descriptive name for this instance partition as it appears in UIs.
  Must be unique per project and between 4 and 30 characters in length.

* `config` -
  (Required)
  The name of the instance partition's configuration (similar to a region) which
  defines the geographic placement and replication of data in this instance partition.

* `instance` -
  (Required)
  The instance to create the instance partition in.


- - -


* `node_count` -
  (Optional)
  The number of nodes allocated to this instance partition. One node equals
  1000 processing units. Exactly one of either node_count or processing_units
  must be present.

* `processing_units` -
  (Optional)
  The number of processing units allocated to this instance partition.
  Exactly one of either node_count or processing_units must be present.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/instances/{{instance}}/instancePartitions/{{name}}`

* `state` -
  The current instance partition state. Possible values are:
  CREATING: The instance partition is being created. Resources are being
  allocated for the instance partition.
  READY: The instance partition has been allocated resources and is ready for use.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 30 minutes.
- `update` - Default is 30 minutes.
- `delete` - Default is 30 minutes.

## Import


InstancePartition can be imported using any of these accepted formats:

* `projects/{{project}}/instances/{{instance}}/instancePartitions/{{name}}`
* `{{project}}/{{instance}}/{{name}}`
* `{{instance}}/{{name}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import InstancePartition using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/instances/{{instance}}/instancePartitions/{{name}}"
  to = google_spanner_instance_partition.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), InstancePartition can be imported using one of the formats above. For example:

```
$ terraform import google_spanner_instance_partition.default projects/{{project}}/instances/{{instance}}/instancePartitions/{{name}}
$ terraform import google_spanner_instance_partition.default {{project}}/{{instance}}/{{name}}
$ terraform import google_spanner_instance_partition.default {{instance}}/{{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
