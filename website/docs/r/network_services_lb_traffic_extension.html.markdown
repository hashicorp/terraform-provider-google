---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Network services"
description: |-
  LbTrafficExtension is a resource that lets the extension service modify the headers and payloads of both requests and responses without impacting the choice of backend services or any other security policies associated with the backend service.
---

# google_network_services_lb_traffic_extension

LbTrafficExtension is a resource that lets the extension service modify the headers and payloads of both requests and responses without impacting the choice of backend services or any other security policies associated with the backend service.


To get more information about LbTrafficExtension, see:

* [API documentation](https://cloud.google.com/service-extensions/docs/reference/rest/v1beta1/projects.locations.lbTrafficExtensions)
* How-to Guides
    * [Configure a traffic extension](https://cloud.google.com/service-extensions/docs/configure-callout#configure_a_traffic_extension)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=network_services_lb_traffic_extension_basic&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Network Services Lb Traffic Extension Basic


```hcl
# Internal HTTP load balancer with a managed instance group backend
# VPC network
resource "google_compute_network" "ilb_network" {
  name                    = "l7-ilb-network"
  auto_create_subnetworks = false
}

# proxy-only subnet
resource "google_compute_subnetwork" "proxy_subnet" {
  name          = "l7-ilb-proxy-subnet"
  ip_cidr_range = "10.0.0.0/24"
  region        = "us-west1"
  purpose       = "REGIONAL_MANAGED_PROXY"
  role          = "ACTIVE"
  network       = google_compute_network.ilb_network.id
}

# backend subnet
resource "google_compute_subnetwork" "ilb_subnet" {
  name          = "l7-ilb-subnet"
  ip_cidr_range = "10.0.1.0/24"
  region        = "us-west1"
  network       = google_compute_network.ilb_network.id

  depends_on = [
    google_compute_subnetwork.proxy_subnet
  ]
}

# forwarding rule
resource "google_compute_forwarding_rule" "default" {
  name                  = "l7-ilb-forwarding-rule"
  region                = "us-west1"
  ip_protocol           = "TCP"
  load_balancing_scheme = "INTERNAL_MANAGED"
  port_range            = "80"
  target                = google_compute_region_target_http_proxy.default.id
  network               = google_compute_network.ilb_network.id
  subnetwork            = google_compute_subnetwork.ilb_subnet.id
  network_tier          = "PREMIUM"

  depends_on = [
  	google_compute_subnetwork.proxy_subnet
  ]
}

# HTTP target proxy
resource "google_compute_region_target_http_proxy" "default" {
  name     = "l7-ilb-target-http-proxy"
  region   = "us-west1"
  url_map  = google_compute_region_url_map.default.id
}

# URL map
resource "google_compute_region_url_map" "default" {
  name            = "l7-ilb-regional-url-map"
  region          = "us-west1"
  default_service = google_compute_region_backend_service.default.id
}

# backend service
resource "google_compute_region_backend_service" "default" {
  name                  = "l7-ilb-backend-subnet"
  region                = "us-west1"
  protocol              = "HTTP"
  load_balancing_scheme = "INTERNAL_MANAGED"
  timeout_sec           = 10
  health_checks         = [google_compute_region_health_check.default.id]

  backend {
    group           = google_compute_region_instance_group_manager.mig.instance_group
    balancing_mode  = "UTILIZATION"
    capacity_scaler = 1.0
  }
}

# instance template
resource "google_compute_instance_template" "instance_template" {
  name         = "l7-ilb-mig-template"
  machine_type = "e2-small"
  tags         = ["http-server"]

  network_interface {
    network    = google_compute_network.ilb_network.id
    subnetwork = google_compute_subnetwork.ilb_subnet.id

    access_config {
      # add external ip to fetch packages
    }
  }

  disk {
    source_image = "debian-cloud/debian-12"
    auto_delete  = true
    boot         = true
  }

  # install nginx and serve a simple web page
  metadata = {
    startup-script = <<-EOF1
      #! /bin/bash
      set -euo pipefail

      export DEBIAN_FRONTEND=noninteractive
      apt-get update
      apt-get install -y nginx-light jq

      NAME=$(curl -H "Metadata-Flavor: Google" "http://metadata.google.internal/computeMetadata/v1/instance/hostname")
      IP=$(curl -H "Metadata-Flavor: Google" "http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/ip")
      METADATA=$(curl -f -H "Metadata-Flavor: Google" "http://metadata.google.internal/computeMetadata/v1/instance/attributes/?recursive=True" | jq 'del(.["startup-script"])')

      cat <<EOF > /var/www/html/index.html
      <pre>
      Name: $NAME
      IP: $IP
      Metadata: $METADATA
      </pre>
      EOF
    EOF1
  }

  lifecycle {
    create_before_destroy = true
  }
}

# health check
resource "google_compute_region_health_check" "default" {
  name     = "l7-ilb-hc"
  region   = "us-west1"

  http_health_check {
    port_specification = "USE_SERVING_PORT"
  }
}

# MIG
resource "google_compute_region_instance_group_manager" "mig" {
  name     = "l7-ilb-mig1"
  region   = "us-west1"

  base_instance_name = "vm"
  target_size        = 2

  version {
    instance_template = google_compute_instance_template.instance_template.id
    name              = "primary"
  }
}

# allow all access from IAP and health check ranges
resource "google_compute_firewall" "fw_iap" {
  name          = "l7-ilb-fw-allow-iap-hc"
  direction     = "INGRESS"
  network       = google_compute_network.ilb_network.id
  source_ranges = ["130.211.0.0/22", "35.191.0.0/16", "35.235.240.0/20"]

  allow {
    protocol = "tcp"
  }
}

# allow http from proxy subnet to backends
resource "google_compute_firewall" "fw_ilb_to_backends" {
  name          = "l7-ilb-fw-allow-ilb-to-backends"
  direction     = "INGRESS"
  network       = google_compute_network.ilb_network.id
  source_ranges = ["10.0.0.0/24"]
  target_tags   = ["http-server"]

  allow {
    protocol = "tcp"
    ports    = ["80", "443", "8080"]
  }

  depends_on = [
	  google_compute_firewall.fw_iap
  ]
}

resource "google_network_services_lb_traffic_extension" "default" {
  name     = "l7-ilb-traffic-ext"
  description = "my traffic extension"
  location = "us-west1"

  load_balancing_scheme = "INTERNAL_MANAGED"
  forwarding_rules      = [google_compute_forwarding_rule.default.self_link]

  extension_chains {
      name = "chain1"

      match_condition {
          cel_expression = "request.host == 'example.com'"
      }

      extensions {
          name      = "ext11"
          authority = "ext11.com"
          service   = google_compute_region_backend_service.callouts_backend.self_link
          timeout   = "0.1s"
          fail_open = false

          supported_events = ["REQUEST_HEADERS"]
          forward_headers = ["custom-header"]
      }
  }

  labels = {
    foo = "bar"
  }
}

# test instance
resource "google_compute_instance" "vm_test" {
  name         = "l7-ilb-test-vm"
  zone         = "us-west1-b"
  machine_type = "e2-small"

  network_interface {
    network    = google_compute_network.ilb_network.id
    subnetwork = google_compute_subnetwork.ilb_subnet.id
  }

  boot_disk {
    initialize_params {
      image = "debian-cloud/debian-11"
    }
  }
}

# Traffic Extension Backend Instance
resource "google_compute_instance" "callouts_instance" {
  name         = "l7-ilb-callouts-ins"
  zone         = "us-west1-a"
  machine_type = "e2-small"

  labels = {
    "container-vm" = "cos-stable-109-17800-147-54"
  }

  tags         = ["allow-ssh","load-balanced-backend"]

  network_interface {
    network    = google_compute_network.ilb_network.id
    subnetwork = google_compute_subnetwork.ilb_subnet.id

    access_config {
      # add external ip to fetch packages
    }

  }

  boot_disk {
    auto_delete  = true

    initialize_params {
      type  = "pd-standard"
      size  = 10
      image = "https://www.googleapis.com/compute/v1/projects/cos-cloud/global/images/cos-stable-109-17800-147-54"
    }
  }

  # Initialize an Envoy's Ext Proc gRPC API based on a docker container
  metadata = {
    gce-container-declaration = "# DISCLAIMER:\n# This container declaration format is not a public API and may change without\n# notice. Please use gcloud command-line tool or Google Cloud Console to run\n# Containers on Google Compute Engine.\n\nspec:\n  containers:\n  - image: us-docker.pkg.dev/service-extensions/ext-proc/service-callout-basic-example-python:latest\n    name: callouts-vm\n    securityContext:\n      privileged: false\n    stdin: false\n    tty: false\n    volumeMounts: []\n  restartPolicy: Always\n  volumes: []\n"
    google-logging-enabled = "true"
  }

  lifecycle {
    create_before_destroy = true
  }

  deletion_protection = false

  depends_on = [
	  google_compute_instance.vm_test
  ]
}

// callouts instance group
resource "google_compute_instance_group" "callouts_instance_group" {
  name        = "l7-ilb-callouts-ins-group"
  description = "Terraform test instance group"
  zone        = "us-west1-a"

  instances = [
    google_compute_instance.callouts_instance.id,
  ]

  named_port {
    name = "http"
    port = "80"
  }

  named_port {
    name = "grpc"
    port = "443"
  }
}

# callout health check
resource "google_compute_region_health_check" "callouts_health_check" {
  name     = "l7-ilb-callouts-hc"
  region   = "us-west1"

  http_health_check {
    port = 80
  }

  depends_on = [
	google_compute_region_health_check.default
  ]
}

# callout backend service
resource "google_compute_region_backend_service" "callouts_backend" {
  name                  = "l7-ilb-callouts-backend"
  region                = "us-west1"
  protocol              = "HTTP2"
  load_balancing_scheme = "INTERNAL_MANAGED"
  timeout_sec           = 10
  port_name             = "grpc"
  health_checks         = [google_compute_region_health_check.callouts_health_check.id]

  backend {
    group           = google_compute_instance_group.callouts_instance_group.id
    balancing_mode  = "UTILIZATION"
    capacity_scaler = 1.0
  }

  depends_on = [
	  google_compute_region_backend_service.default
  ]
}
```

## Argument Reference

The following arguments are supported:


* `forwarding_rules` -
  (Required)
  A list of references to the forwarding rules to which this service extension is attached to.
  At least one forwarding rule is required. There can be only one LBTrafficExtension resource per forwarding rule.

* `extension_chains` -
  (Required)
  A set of ordered extension chains that contain the match conditions and extensions to execute.
  Match conditions for each extension chain are evaluated in sequence for a given request.
  The first extension chain that has a condition that matches the request is executed.
  Any subsequent extension chains do not execute. Limited to 5 extension chains per resource.
  Structure is [documented below](#nested_extension_chains).

* `location` -
  (Required)
  The location of the traffic extension

* `name` -
  (Required)
  Name of the LbTrafficExtension resource in the following format: projects/{project}/locations/{location}/lbTrafficExtensions/{lbTrafficExtension}.


<a name="nested_extension_chains"></a>The `extension_chains` block supports:

* `name` -
  (Required)
  The name for this extension chain. The name is logged as part of the HTTP request logs.
  The name must conform with RFC-1034, is restricted to lower-cased letters, numbers and hyphens,
  and can have a maximum length of 63 characters. Additionally, the first character must be a letter
  and the last a letter or a number.

* `match_condition` -
  (Required)
  Conditions under which this chain is invoked for a request.
  Structure is [documented below](#nested_match_condition).

* `extensions` -
  (Required)
  A set of extensions to execute for the matching request.
  At least one extension is required. Up to 3 extensions can be defined for each extension chain for
  LbTrafficExtension resource. LbRouteExtension chains are limited to 1 extension per extension chain.
  Structure is [documented below](#nested_extensions).


<a name="nested_match_condition"></a>The `match_condition` block supports:

* `cel_expression` -
  (Required)
  A Common Expression Language (CEL) expression that is used to match requests for which the extension chain is executed.

<a name="nested_extensions"></a>The `extensions` block supports:

* `name` -
  (Required)
  The name for this extension. The name is logged as part of the HTTP request logs.
  The name must conform with RFC-1034, is restricted to lower-cased letters, numbers and hyphens,
  and can have a maximum length of 63 characters. Additionally, the first character must be a letter
  and the last a letter or a number.

* `authority` -
  (Optional)
  The :authority header in the gRPC request sent from Envoy to the extension service.

* `service` -
  (Required)
  The reference to the service that runs the extension. Must be a reference to a backend service

* `timeout` -
  (Optional)
  Specifies the timeout for each individual message on the stream. The timeout must be between 10-1000 milliseconds.
  A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".

* `fail_open` -
  (Optional)
  Determines how the proxy behaves if the call to the extension fails or times out.
  When set to TRUE, request or response processing continues without error.
  Any subsequent extensions in the extension chain are also executed.
  When set to FALSE: * If response headers have not been delivered to the downstream client,
  a generic 500 error is returned to the client. The error response can be tailored by
  configuring a custom error response in the load balancer.

* `forward_headers` -
  (Optional)
  List of the HTTP headers to forward to the extension (from the client or backend).
  If omitted, all headers are sent. Each element is a string indicating the header name.

* `supported_events` -
  (Optional)
  A set of events during request or response processing for which this extension is called.
  This field is required for the LbTrafficExtension resource. It's not relevant for the LbRouteExtension
  resource. Possible values:`EVENT_TYPE_UNSPECIFIED`, `REQUEST_HEADERS`, `REQUEST_BODY`, `RESPONSE_HEADERS`,
  `RESPONSE_BODY`, `RESPONSE_BODY` and `RESPONSE_BODY`.

- - -


* `description` -
  (Optional)
  A human-readable description of the resource.

* `labels` -
  (Optional)
  Set of labels associated with the LbTrafficExtension resource.
  **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
  Please refer to the field `effective_labels` for all of the labels present on the resource.

* `load_balancing_scheme` -
  (Optional)
  All backend services and forwarding rules referenced by this extension must share the same load balancing scheme.
  For more information, refer to [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service) and
  [Supported application load balancers](https://cloud.google.com/service-extensions/docs/callouts-overview#supported-lbs).
  Possible values are: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/lbTrafficExtensions/{{name}}`

* `terraform_labels` -
  The combination of labels configured directly on the resource
   and default labels configured on the provider.

* `effective_labels` -
  All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


LbTrafficExtension can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/lbTrafficExtensions/{{name}}`
* `{{project}}/{{location}}/{{name}}`
* `{{location}}/{{name}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import LbTrafficExtension using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/lbTrafficExtensions/{{name}}"
  to = google_network_services_lb_traffic_extension.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), LbTrafficExtension can be imported using one of the formats above. For example:

```
$ terraform import google_network_services_lb_traffic_extension.default projects/{{project}}/locations/{{location}}/lbTrafficExtensions/{{name}}
$ terraform import google_network_services_lb_traffic_extension.default {{project}}/{{location}}/{{name}}
$ terraform import google_network_services_lb_traffic_extension.default {{location}}/{{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
