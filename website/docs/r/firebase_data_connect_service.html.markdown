---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Firebase Data Connect"
description: |-
  A Firebase Data Connect service.
---

# google_firebase_data_connect_service

A Firebase Data Connect service.


To get more information about Service, see:

* [API documentation](https://firebase.google.com/docs/reference/data-connect/rest)
* How-to Guides
    * [Official Documentation](https://firebase.google.com/docs/data-connect)

## Example Usage - Firebasedataconnect Service Basic


```hcl
# Enable Firebase Data Connect API
resource "google_project_service" "fdc" {
  project = "my-project-name"
  service = "firebasedataconnect.googleapis.com"
  disable_on_destroy = false
}

# Create an FDC service
resource "google_firebase_data_connect_service" "default" {
  project = "my-project-name"
  location = "us-central1"
  service_id = "example-service"
  deletion_policy = "DEFAULT"

  labels = {
    label = "my-label"
  }

  annotations = {
    key1 = "value1",
    key2 = "value2",
  }

  depends_on = [google_project_service.fdc]
}
```

## Argument Reference

The following arguments are supported:


* `location` -
  (Required)
  The region in which the service resides, e.g. "us-central1" or "asia-east1".

* `service_id` -
  (Required)
  Required. The ID to use for the service, which will become the final component of the
  service's resource name.


- - -


* `display_name` -
  (Optional)
  Optional. Mutable human-readable name. 63 character limit.

* `annotations` -
  (Optional)
  Optional. Stores small amounts of arbitrary data.
  **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
  Please refer to the field `effective_annotations` for all of the annotations present on the resource.

* `labels` -
  (Optional)
  Optional. Labels as key value pairs.
  **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
  Please refer to the field `effective_labels` for all of the labels present on the resource.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.

* `deletion_policy` - (Optional) The deletion policy for the database. Setting the field to FORCE allows the
Service to be deleted even if a Schema or Connector is present. By default,
the Service deletion will only succeed when no Schema or Connectors are
present.
Possible values: DEFAULT, FORCE

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/services/{{service_id}}`

* `reconciling` -
  Output only. A field that if true, indicates that the system is working update the
  service.

* `etag` -
  Output only. This checksum is computed by the server based on the value of other
  fields, and may be sent on update and delete requests to ensure the
  client has an up-to-date value before proceeding.
  [AIP-154](https://google.aip.dev/154)

* `name` -
  Identifier. The relative resource name of the Firebase Data Connect service, in the
  format:
  ```
  projects/{project}/locations/{location}/services/{service}
  ```
  Note that the service ID is specific to Firebase Data Connect and does not
  correspond to any of the instance IDs of the underlying data source
  connections.

* `create_time` -
  Output only. [Output only] Create time stamp.

* `update_time` -
  Output only. [Output only] Update time stamp.

* `uid` -
  Output only. System-assigned, unique identifier.

* `effective_annotations` -
  All of annotations (key/value pairs) present on the resource in GCP, including the annotations configured through Terraform, other clients and services.

* `terraform_labels` -
  The combination of labels configured directly on the resource
   and default labels configured on the provider.

* `effective_labels` -
  All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


Service can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/services/{{service_id}}`
* `{{project}}/{{location}}/{{service_id}}`
* `{{location}}/{{service_id}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Service using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/services/{{service_id}}"
  to = google_firebase_data_connect_service.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), Service can be imported using one of the formats above. For example:

```
$ terraform import google_firebase_data_connect_service.default projects/{{project}}/locations/{{location}}/services/{{service_id}}
$ terraform import google_firebase_data_connect_service.default {{project}}/{{location}}/{{service_id}}
$ terraform import google_firebase_data_connect_service.default {{location}}/{{service_id}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
