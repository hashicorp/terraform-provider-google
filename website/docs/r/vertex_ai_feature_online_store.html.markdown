---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Vertex AI"
description: |-
  Vertex AI Feature Online Store provides a centralized repository for serving ML features and embedding indexes at low latency.
---

# google\_vertex\_ai\_feature\_online\_store

Vertex AI Feature Online Store provides a centralized repository for serving ML features and embedding indexes at low latency. The Feature Online Store is a top-level container.


To get more information about FeatureOnlineStore, see:

* [API documentation](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.featureOnlineStores)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/vertex-ai/docs)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=vertex_ai_feature_online_store&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Vertex Ai Feature Online Store


```hcl
resource "google_vertex_ai_feature_online_store" "feature_online_store" {
  name = "example_feature_online_store"
  labels = {
    foo = "bar"
  }
  region = "us-central1"
  bigtable {
    auto_scaling {
      min_node_count         = 1
      max_node_count         = 3
      cpu_utilization_target = 50
    }
  }
}
```
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=vertex_ai_featureonlinestore_with_beta_fields_optimized&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Vertex Ai Featureonlinestore With Beta Fields Optimized


```hcl
resource "google_vertex_ai_feature_online_store" "featureonlinestore" {
  provider = google-beta
  name     = "example_feature_online_store_optimized"
  labels = {
    foo = "bar"
  }
  region = "us-central1"
  optimized {}
  dedicated_serving_endpoint {
    private_service_connect_config {
      enable_private_service_connect = true
      project_allowlist              = [data.google_project.project.number]
    }
  }
}

data "google_project" "project" {
  provider = google-beta
}
```
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=vertex_ai_featureonlinestore_with_beta_fields_bigtable&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Vertex Ai Featureonlinestore With Beta Fields Bigtable


```hcl
resource "google_vertex_ai_feature_online_store" "featureonlinestore" {
  provider = google-beta
  name     = "example_feature_online_store_beta_bigtable"
  labels = {
    foo = "bar"
  }
  region = "us-central1"
  bigtable {
    auto_scaling {
      min_node_count         = 1
      max_node_count         = 2
      cpu_utilization_target = 80
    }
  }
  embedding_management {
    enabled = true
  }
  force_destroy = true
}

data "google_project" "project" {
  provider = google-beta
}
```

## Argument Reference

The following arguments are supported:


* `name` -
  (Required)
  The resource name of the Feature Online Store. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.


- - -


* `labels` -
  (Optional)
  The labels with user-defined metadata to organize your feature online stores.
  **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
  Please refer to the field `effective_labels` for all of the labels present on the resource.

* `bigtable` -
  (Optional)
  Settings for Cloud Bigtable instance that will be created to serve featureValues for all FeatureViews under this FeatureOnlineStore.
  Structure is [documented below](#nested_bigtable).

* `optimized` -
  (Optional, [Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html))
  Settings for the Optimized store that will be created to serve featureValues for all FeatureViews under this FeatureOnlineStore

* `dedicated_serving_endpoint` -
  (Optional, [Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html))
  The dedicated serving endpoint for this FeatureOnlineStore, which is different from common vertex service endpoint. Only need to set when you choose Optimized storage type or enable EmbeddingManagement. Will use public endpoint by default.
  Structure is [documented below](#nested_dedicated_serving_endpoint).

* `embedding_management` -
  (Optional, [Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html))
  The settings for embedding management in FeatureOnlineStore. Embedding management can only be used with BigTable.
  Structure is [documented below](#nested_embedding_management).

* `region` -
  (Optional)
  The region of feature online store. eg us-central1

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.

* `force_destroy` - (Optional) If set to true, any FeatureViews and Features for this FeatureOnlineStore will also be deleted.

<a name="nested_bigtable"></a>The `bigtable` block supports:

* `auto_scaling` -
  (Required)
  Autoscaling config applied to Bigtable Instance.
  Structure is [documented below](#nested_auto_scaling).


<a name="nested_auto_scaling"></a>The `auto_scaling` block supports:

* `min_node_count` -
  (Required)
  The minimum number of nodes to scale down to. Must be greater than or equal to 1.

* `max_node_count` -
  (Required)
  The maximum number of nodes to scale up to. Must be greater than or equal to minNodeCount, and less than or equal to 10 times of 'minNodeCount'.

* `cpu_utilization_target` -
  (Optional)
  A percentage of the cluster's CPU capacity. Can be from 10% to 80%. When a cluster's CPU utilization exceeds the target that you have set, Bigtable immediately adds nodes to the cluster. When CPU utilization is substantially lower than the target, Bigtable removes nodes. If not set will default to 50%.

<a name="nested_dedicated_serving_endpoint"></a>The `dedicated_serving_endpoint` block supports:

* `public_endpoint_domain_name` -
  (Output)
  Domain name to use for this FeatureOnlineStore

* `service_attachment` -
  (Output)
  Name of the service attachment resource. Applicable only if private service connect is enabled and after FeatureViewSync is created.

* `private_service_connect_config` -
  (Optional)
  Private service connect config.
  Structure is [documented below](#nested_private_service_connect_config).


<a name="nested_private_service_connect_config"></a>The `private_service_connect_config` block supports:

* `enable_private_service_connect` -
  (Required)
  If set to true, customers will use private service connection to send request. Otherwise, the connection will set to public endpoint.

* `project_allowlist` -
  (Optional)
  A list of Projects from which the forwarding rule will target the service attachment.

<a name="nested_embedding_management"></a>The `embedding_management` block supports:

* `enabled` -
  (Optional)
  Enable embedding management.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{region}}/featureOnlineStores/{{name}}`

* `create_time` -
  The timestamp of when the feature online store was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.

* `update_time` -
  The timestamp of when the feature online store was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.

* `etag` -
  Used to perform consistent read-modify-write updates.

* `state` -
  The state of the Feature Online Store. See the possible states in [this link](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.featureOnlineStores#state).

* `terraform_labels` -
  The combination of labels configured directly on the resource
   and default labels configured on the provider.

* `effective_labels` -
  All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


FeatureOnlineStore can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{region}}/featureOnlineStores/{{name}}`
* `{{project}}/{{region}}/{{name}}`
* `{{region}}/{{name}}`
* `{{name}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import FeatureOnlineStore using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{region}}/featureOnlineStores/{{name}}"
  to = google_vertex_ai_feature_online_store.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), FeatureOnlineStore can be imported using one of the formats above. For example:

```
$ terraform import google_vertex_ai_feature_online_store.default projects/{{project}}/locations/{{region}}/featureOnlineStores/{{name}}
$ terraform import google_vertex_ai_feature_online_store.default {{project}}/{{region}}/{{name}}
$ terraform import google_vertex_ai_feature_online_store.default {{region}}/{{name}}
$ terraform import google_vertex_ai_feature_online_store.default {{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
