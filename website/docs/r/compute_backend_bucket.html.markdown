---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Compute Engine"
layout: "google"
page_title: "Google: google_compute_backend_bucket"
sidebar_current: "docs-google-compute-backend-bucket"
description: |-
  Backend buckets allow you to use Google Cloud Storage buckets with HTTP(S)
  load balancing.
---

# google\_compute\_backend\_bucket

Backend buckets allow you to use Google Cloud Storage buckets with HTTP(S)
load balancing.

An HTTP(S) load balancer can direct traffic to specified URLs to a
backend bucket rather than a backend service. It can send requests for
static content to a Cloud Storage bucket and requests for dynamic content
to a virtual machine instance.


To get more information about BackendBucket, see:

* [API documentation](https://cloud.google.com/compute/docs/reference/v1/backendBuckets)
* How-to Guides
    * [Using a Cloud Storage bucket as a load balancer backend](https://cloud.google.com/compute/docs/load-balancing/http/backend-bucket)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=backend_bucket_basic&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Backend Bucket Basic


```hcl
resource "google_compute_backend_bucket" "image_backend" {
  name        = "image-backend-bucket"
  description = "Contains beautiful images"
  bucket_name = google_storage_bucket.image_bucket.name
  enable_cdn  = true
}

resource "google_storage_bucket" "image_bucket" {
  name     = "image-store-bucket"
  location = "EU"
}
```

## Argument Reference

The following arguments are supported:


* `bucket_name` -
  (Required)
  Cloud Storage bucket name.

* `name` -
  (Required)
  Name of the resource. Provided by the client when the resource is
  created. The name must be 1-63 characters long, and comply with
  RFC1035.  Specifically, the name must be 1-63 characters long and
  match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means
  the first character must be a lowercase letter, and all following
  characters must be a dash, lowercase letter, or digit, except the
  last character, which cannot be a dash.


- - -


* `cdn_policy` -
  (Optional)
  Cloud CDN configuration for this Backend Bucket.
  Structure is documented below.

* `custom_response_headers` -
  (Optional, [Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html))
  Headers that the HTTP/S load balancer should add to proxied responses.

* `description` -
  (Optional)
  An optional textual description of the resource; provided by the
  client when the resource is created.

* `enable_cdn` -
  (Optional)
  If true, enable Cloud CDN for this BackendBucket.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


The `cdn_policy` block supports:

* `signed_url_cache_max_age_sec` -
  (Optional)
  Maximum number of seconds the response to a signed URL request will
  be considered fresh. After this time period,
  the response will be revalidated before being served.
  When serving responses to signed URL requests,
  Cloud CDN will internally behave as though
  all responses from this backend had a "Cache-Control: public,
  max-age=[TTL]" header, regardless of any existing Cache-Control
  header. The actual headers served in responses will not be altered.

* `default_ttl` -
  (Optional, [Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html))
  Specifies the default TTL for cached content served by this origin for responses
  that do not have an existing valid TTL (max-age or s-max-age).

* `max_ttl` -
  (Optional, [Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html))
  Specifies the maximum allowed TTL for cached content served by this origin.

* `client_ttl` -
  (Optional, [Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html))
  Specifies the maximum allowed TTL for cached content served by this origin.

* `negative_caching` -
  (Optional, [Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html))
  Negative caching allows per-status code TTLs to be set, in order to apply fine-grained caching for common errors or redirects.

* `negative_caching_policy` -
  (Optional, [Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html))
  Sets a cache TTL for the specified HTTP status code. negativeCaching must be enabled to configure negativeCachingPolicy.
  Omitting the policy and leaving negativeCaching enabled will use Cloud CDN's default cache TTLs.
  Structure is documented below.

* `cache_mode` -
  (Optional, [Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html))
  Specifies the cache setting for all responses from this backend.
  The possible values are: USE_ORIGIN_HEADERS, FORCE_CACHE_ALL and CACHE_ALL_STATIC
  Possible values are `USE_ORIGIN_HEADERS`, `FORCE_CACHE_ALL`, and `CACHE_ALL_STATIC`.

* `serve_while_stale` -
  (Optional, [Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html))
  Serve existing content from the cache (if available) when revalidating content with the origin, or when an error is encountered when refreshing the cache.


The `negative_caching_policy` block supports:

* `code` -
  (Optional, [Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html))
  The HTTP status code to define a TTL against. Only HTTP status codes 300, 301, 308, 404, 405, 410, 421, 451 and 501
  can be specified as values, and you cannot specify a status code more than once.

* `ttl` -
  (Optional, [Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html))
  The TTL (in seconds) for which to cache responses with the corresponding status code. The maximum allowed value is 1800s
  (30 minutes), noting that infrequently accessed objects may be evicted from the cache before the defined TTL.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/global/backendBuckets/{{name}}`

* `creation_timestamp` -
  Creation timestamp in RFC3339 text format.
* `self_link` - The URI of the created resource.


## Timeouts

This resource provides the following
[Timeouts](/docs/configuration/resources.html#timeouts) configuration options:

- `create` - Default is 4 minutes.
- `update` - Default is 4 minutes.
- `delete` - Default is 4 minutes.

## Import


BackendBucket can be imported using any of these accepted formats:

```
$ terraform import google_compute_backend_bucket.default projects/{{project}}/global/backendBuckets/{{name}}
$ terraform import google_compute_backend_bucket.default {{project}}/{{name}}
$ terraform import google_compute_backend_bucket.default {{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://www.terraform.io/docs/providers/google/guides/provider_reference.html#user_project_override).
