---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Colab Enterprise"
description: |-
  'A runtime template is a VM configuration that specifies a machine type and other characteristics of the VM,
   as well as common settings such as the network and whether public internet access is enabled.
---

# google_colab_runtime_template

'A runtime template is a VM configuration that specifies a machine type and other characteristics of the VM,
 as well as common settings such as the network and whether public internet access is enabled. When you create
 a runtime, its VM is created according to the specifications of a runtime template.'


To get more information about RuntimeTemplate, see:

* [API documentation](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.notebookRuntimeTemplates)
* How-to Guides
    * [Create a runtime template](https://cloud.google.com/colab/docs/create-runtime-template)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=colab_runtime_template_basic&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Colab Runtime Template Basic


```hcl
resource "google_colab_runtime_template" "runtime-template" {
  name = "colab-runtime-template"
  display_name = "Runtime template basic"
  location = "us-central1"

  machine_spec {
    machine_type     = "e2-standard-4"
  }

  network_spec {
    enable_internet_access = true
  }
}
```
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=colab_runtime_template_no_name&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Colab Runtime Template No Name


```hcl
resource "google_colab_runtime_template" "runtime-template" {
  display_name = "Runtime template no name"
  location = "us-central1"

  machine_spec {
    machine_type     = "e2-standard-4"
  }

  network_spec {
    enable_internet_access = true
  }
}
```
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=colab_runtime_template_full&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Colab Runtime Template Full


```hcl
resource "google_compute_network" "my_network" {
  name = "colab-test-default"
  auto_create_subnetworks = false
}

resource "google_compute_subnetwork" "my_subnetwork" {
  name   = "colab-test-default"
  network = google_compute_network.my_network.id
  region = "us-central1"
  ip_cidr_range = "10.0.1.0/24"
}

resource "google_colab_runtime_template" "runtime-template" {
  name        = "colab-runtime-template"
  display_name = "Runtime template full"
  location    = "us-central1"
  description = "Full runtime template"
  machine_spec {
    machine_type     = "n1-standard-2"
    accelerator_type = "NVIDIA_TESLA_T4"
    accelerator_count = "1"
  }

  data_persistent_disk_spec {
    disk_type    = "pd-standard"
    disk_size_gb = 200
  }

  network_spec {
    enable_internet_access = true
    network = google_compute_network.my_network.id
    subnetwork = google_compute_subnetwork.my_subnetwork.id
  }

  labels = {
    k = "val"
  }

  idle_shutdown_config {
    idle_timeout = "3600s"
  }

  euc_config {
    euc_disabled = true
  }

  shielded_vm_config {
    enable_secure_boot = true
  }

  network_tags = ["abc", "def"]

  encryption_spec {
    kms_key_name = "my-crypto-key"
  }

  software_config {
    env {
      name         = "TEST"
      value   = 1
    }

    post_startup_script_config {
      post_startup_script = "echo 'hello world'"
      post_startup_script_url = "gs://colab-enterprise-pss-secure/secure_pss.sh"
      post_startup_script_behavior = "RUN_ONCE"
    }
  }
}
```

## Argument Reference

The following arguments are supported:


* `display_name` -
  (Required)
  Required. The display name of the Runtime Template.

* `location` -
  (Required)
  The location for the resource: https://cloud.google.com/colab/docs/locations


- - -


* `name` -
  (Optional)
  The resource name of the Runtime Template

* `description` -
  (Optional)
  The description of the Runtime Template.

* `machine_spec` -
  (Optional)
  'The machine configuration of the runtime.'
  Structure is [documented below](#nested_machine_spec).

* `data_persistent_disk_spec` -
  (Optional)
  The configuration for the data disk of the runtime.
  Structure is [documented below](#nested_data_persistent_disk_spec).

* `network_spec` -
  (Optional)
  The network configuration for the runtime.
  Structure is [documented below](#nested_network_spec).

* `labels` -
  (Optional)
  Labels to identify and group the runtime template.
  **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
  Please refer to the field `effective_labels` for all of the labels present on the resource.

* `idle_shutdown_config` -
  (Optional)
  Notebook Idle Shutdown configuration for the runtime.
  Structure is [documented below](#nested_idle_shutdown_config).

* `euc_config` -
  (Optional)
  EUC configuration of the NotebookRuntimeTemplate.
  Structure is [documented below](#nested_euc_config).

* `shielded_vm_config` -
  (Optional)
  Runtime Shielded VM spec.
  Structure is [documented below](#nested_shielded_vm_config).

* `network_tags` -
  (Optional)
  Applies the given Compute Engine tags to the runtime.

* `encryption_spec` -
  (Optional)
  Customer-managed encryption key spec for the notebook runtime.
  Structure is [documented below](#nested_encryption_spec).

* `software_config` -
  (Optional)
  The notebook software configuration of the notebook runtime.
  Structure is [documented below](#nested_software_config).

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


<a name="nested_machine_spec"></a>The `machine_spec` block supports:

* `machine_type` -
  (Optional)
  The Compute Engine machine type selected for the runtime.

* `accelerator_type` -
  (Optional)
  The type of hardware accelerator used by the runtime. If specified, acceleratorCount must also be specified.

* `accelerator_count` -
  (Optional)
  The number of accelerators used by the runtime.

<a name="nested_data_persistent_disk_spec"></a>The `data_persistent_disk_spec` block supports:

* `disk_type` -
  (Optional)
  The type of the persistent disk.

* `disk_size_gb` -
  (Optional)
  The disk size of the runtime in GB. If specified, the diskType must also be specified. The minimum size is 10GB and the maximum is 65536GB.

<a name="nested_network_spec"></a>The `network_spec` block supports:

* `enable_internet_access` -
  (Optional)
  Enable public internet access for the runtime.

* `network` -
  (Optional)
  The name of the VPC that this runtime is in.

* `subnetwork` -
  (Optional)
  The name of the subnetwork that this runtime is in.

<a name="nested_idle_shutdown_config"></a>The `idle_shutdown_config` block supports:

* `idle_timeout` -
  (Optional)
  The duration after which the runtime is automatically shut down. An input of 0s disables the idle shutdown feature, and a valid range is [10m, 24h].

<a name="nested_euc_config"></a>The `euc_config` block supports:

* `euc_disabled` -
  (Optional)
  Disable end user credential access for the runtime.

<a name="nested_shielded_vm_config"></a>The `shielded_vm_config` block supports:

* `enable_secure_boot` -
  (Optional)
  Enables secure boot for the runtime.

<a name="nested_encryption_spec"></a>The `encryption_spec` block supports:

* `kms_key_name` -
  (Optional)
  The Cloud KMS encryption key (customer-managed encryption key) used to protect the runtime.

<a name="nested_software_config"></a>The `software_config` block supports:

* `env` -
  (Optional)
  Environment variables to be passed to the container.
  Structure is [documented below](#nested_software_config_env).

* `post_startup_script_config` -
  (Optional)
  Post startup script config.
  Structure is [documented below](#nested_software_config_post_startup_script_config).


<a name="nested_software_config_env"></a>The `env` block supports:

* `name` -
  (Optional)
  Name of the environment variable. Must be a valid C identifier.

* `value` -
  (Optional)
  Variables that reference a $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not.

<a name="nested_software_config_post_startup_script_config"></a>The `post_startup_script_config` block supports:

* `post_startup_script` -
  (Optional)
  Post startup script to run after runtime is started.

* `post_startup_script_url` -
  (Optional)
  Post startup script url to download. Example: https://bucket/script.sh.

* `post_startup_script_behavior` -
  (Optional)
  Post startup script behavior that defines download and execution behavior.
  Possible values are: `RUN_ONCE`, `RUN_EVERY_START`, `DOWNLOAD_AND_RUN_EVERY_START`.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/notebookRuntimeTemplates/{{name}}`

* `terraform_labels` -
  The combination of labels configured directly on the resource
   and default labels configured on the provider.

* `effective_labels` -
  All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


RuntimeTemplate can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/notebookRuntimeTemplates/{{name}}`
* `{{project}}/{{location}}/{{name}}`
* `{{location}}/{{name}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import RuntimeTemplate using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/notebookRuntimeTemplates/{{name}}"
  to = google_colab_runtime_template.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), RuntimeTemplate can be imported using one of the formats above. For example:

```
$ terraform import google_colab_runtime_template.default projects/{{project}}/locations/{{location}}/notebookRuntimeTemplates/{{name}}
$ terraform import google_colab_runtime_template.default {{project}}/{{location}}/{{name}}
$ terraform import google_colab_runtime_template.default {{location}}/{{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
