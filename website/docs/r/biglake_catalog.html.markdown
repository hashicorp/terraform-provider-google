---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Biglake"
description: |-
  Catalogs are top-level containers for Databases and Tables.
---

# google\_biglake\_catalog

Catalogs are top-level containers for Databases and Tables.


To get more information about Catalog, see:

* [API documentation](https://cloud.google.com/bigquery/docs/reference/biglake/rest/v1/projects.locations.catalogs)
* How-to Guides
    * [Manage open source metadata with BigLake Metastore](https://cloud.google.com/bigquery/docs/manage-open-source-metadata#create_catalogs)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=bigquery_biglake_catalog&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Bigquery Biglake Catalog


```hcl
resource "google_biglake_catalog" "default"  {
    name = "my_catalog"
    location = "US"
}
```

## Argument Reference

The following arguments are supported:


* `location` -
  (Required)
  The geographic location where the Catalog should reside.

* `name` -
  (Required)
  The name of the Catalog. Format:
  projects/{project_id_or_number}/locations/{locationId}/catalogs/{catalogId}


- - -


* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/catalogs/{{name}}`

* `create_time` -
  Output only. The creation time of the catalog. A timestamp in RFC3339 UTC
  "Zulu" format, with nanosecond resolution and up to nine fractional
  digits.

* `update_time` -
  Output only. The last modification time of the catalog. A timestamp in
  RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
  fractional digits.

* `delete_time` -
  Output only. The deletion time of the catalog. Only set after the catalog
  is deleted. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
  resolution and up to nine fractional digits.

* `expire_time` -
  Output only. The time when this catalog is considered expired. Only set
  after the catalog is deleted. Only set after the catalog is deleted.
  A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
  up to nine fractional digits.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


Catalog can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/catalogs/{{name}}`
* `{{project}}/{{location}}/{{name}}`
* `{{location}}/{{name}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Catalog using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/catalogs/{{name}}"
  to = google_biglake_catalog.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), Catalog can be imported using one of the formats above. For example:

```
$ terraform import google_biglake_catalog.default projects/{{project}}/locations/{{location}}/catalogs/{{name}}
$ terraform import google_biglake_catalog.default {{project}}/{{location}}/{{name}}
$ terraform import google_biglake_catalog.default {{location}}/{{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
