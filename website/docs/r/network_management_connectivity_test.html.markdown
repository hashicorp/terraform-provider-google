---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Configuration: https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/networkmanagement/ConnectivityTest.yaml
#     Template:      https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/terraform/resource.html.markdown.tmpl
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "Network Management"
description: |-
  A connectivity test are a static analysis of your resource configurations
  that enables you to evaluate connectivity to and from Google Cloud
  resources in your Virtual Private Cloud (VPC) network.
---

# google_network_management_connectivity_test

A connectivity test are a static analysis of your resource configurations
that enables you to evaluate connectivity to and from Google Cloud
resources in your Virtual Private Cloud (VPC) network.


To get more information about ConnectivityTest, see:

* [API documentation](https://cloud.google.com/network-intelligence-center/docs/connectivity-tests/reference/networkmanagement/rest/v1/projects.locations.global.connectivityTests)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/network-intelligence-center/docs)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=network_management_connectivity_test_instances&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Network Management Connectivity Test Instances


```hcl
resource "google_network_management_connectivity_test" "instance-test" {
  name = "conn-test-instances"
  source {
    instance = google_compute_instance.source.id
  }

  destination {
    instance = google_compute_instance.destination.id
  }

  protocol = "TCP"
  labels = {
    env = "test"
  }
}

resource "google_compute_instance" "source" {
  name = "source-vm"
  machine_type = "e2-medium"

  boot_disk {
    initialize_params {
      image = data.google_compute_image.debian_9.id
    }
  }

  network_interface {
    network = google_compute_network.vpc.id
    access_config {
    }
  }
}

resource "google_compute_instance" "destination" {
  name = "dest-vm"
  machine_type = "e2-medium"

  boot_disk {
    initialize_params {
      image = data.google_compute_image.debian_9.id
    }
  }

  network_interface {
    network = google_compute_network.vpc.id
    access_config {
    }
  }
}

resource "google_compute_network" "vpc" {
  name = "conn-test-net"
}

data "google_compute_image" "debian_9" {
  family  = "debian-11"
  project = "debian-cloud"
}
```
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=network_management_connectivity_test_addresses&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Network Management Connectivity Test Addresses


```hcl
resource "google_network_management_connectivity_test" "address-test" {
  name = "conn-test-addr"
  source {
      ip_address = google_compute_address.source-addr.address
      project_id = google_compute_address.source-addr.project
      network = google_compute_network.vpc.id
      network_type = "GCP_NETWORK"
  }

  destination {
      ip_address = google_compute_address.dest-addr.address
      project_id = google_compute_address.dest-addr.project
      network = google_compute_network.vpc.id
  }

  protocol = "UDP"
}

resource "google_compute_network" "vpc" {
  name = "connectivity-vpc"
}

resource "google_compute_subnetwork" "subnet" {
  name          = "connectivity-vpc-subnet"
  ip_cidr_range = "10.0.0.0/16"
  region        = "us-central1"
  network       = google_compute_network.vpc.id
}

resource "google_compute_address" "source-addr" {
  name         = "src-addr"
  subnetwork   = google_compute_subnetwork.subnet.id
  address_type = "INTERNAL"
  address      = "10.0.42.42"
  region       = "us-central1"
}

resource "google_compute_address" "dest-addr" {
  name         = "dest-addr"
  subnetwork   = google_compute_subnetwork.subnet.id
  address_type = "INTERNAL"
  address      = "10.0.43.43"
  region       = "us-central1"
}
```
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=network_management_connectivity_test_endpoints&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Network Management Connectivity Test Endpoints


```hcl
resource "google_network_management_connectivity_test" "endpoints-test" {
  name = "conn-test-endpoints"
  source {
    gke_master_cluster =  "projects/test-project/locations/us-central1/clusters/name"
    cloud_sql_instance = "projects/test-project/instances/name"
    app_engine_version {
         uri = "apps/test-project/services/default/versions/name"
    }
    cloud_function {
      uri = "projects/test-project/locations/us-central1/functions/name"
    }
    cloud_run_revision {
        uri = "projects/test-project/locations/us-central1/revisions/name"
    }
    port = 80
  }
  destination {
    port = 443
    forwarding_rule = "projects/test-project/regions/us-central1/forwardingRules/name"
    gke_master_cluster = "projects/test-project/locations/us-central1/clusters/name"
    fqdn = "name.us-central1.gke.goog"
    cloud_sql_instance = "projects/test-project/instances/name"
    redis_instance = "projects/test-project/locations/us-central1/instances/name"
    redis_cluster = "projects/test-project/locations/us-central1/clusters/name"
  }
  bypass_firewall_checks = true
  round_trip = true
}
```

## Argument Reference

The following arguments are supported:


* `name` -
  (Required)
  Unique name for the connectivity test.

* `source` -
  (Required)
  Required. Source specification of the Connectivity Test.
  You can use a combination of source IP address, URI of a supported
  endpoint, project ID, or VPC network to identify the source location.
  Reachability analysis might proceed even if the source location is
  ambiguous. However, the test result might include endpoints or use a source
  that you don't intend to test.
  Structure is [documented below](#nested_source).

* `destination` -
  (Required)
  Required. Destination specification of the Connectivity Test.
  You can use a combination of destination IP address, URI of a supported
  endpoint, project ID, or VPC network to identify the destination location.
  Reachability analysis proceeds even if the destination location is
  ambiguous. However, the test result might include endpoints or use a
  destination that you don't intend to test.
  Structure is [documented below](#nested_destination).


<a name="nested_source"></a>The `source` block supports:

* `ip_address` -
  (Optional)
  The IP address of the endpoint, which can be an external or internal IP.

* `port` -
  (Optional)
  The IP protocol port of the endpoint. Only applicable when protocol is
  TCP or UDP.

* `instance` -
  (Optional)
  A Compute Engine instance URI.

* `gke_master_cluster` -
  (Optional)
  A cluster URI for Google Kubernetes Engine cluster control plane.

* `cloud_sql_instance` -
  (Optional)
  A Cloud SQL instance URI.

* `cloud_function` -
  (Optional)
  A Cloud Function.
  Structure is [documented below](#nested_source_cloud_function).

* `app_engine_version` -
  (Optional)
  An App Engine service version.
  Structure is [documented below](#nested_source_app_engine_version).

* `cloud_run_revision` -
  (Optional)
  A Cloud Run revision.
  Structure is [documented below](#nested_source_cloud_run_revision).

* `network` -
  (Optional)
  A VPC network URI.

* `network_type` -
  (Optional)
  Type of the network where the endpoint is located.
  Possible values are: `GCP_NETWORK`, `NON_GCP_NETWORK`.

* `project_id` -
  (Optional)
  Project ID where the endpoint is located.
  The project ID can be derived from the URI if you provide a endpoint or
  network URI.
  The following are two cases where you may need to provide the project ID:
  1. Only the IP address is specified, and the IP address is within a Google
  Cloud project.
  2. When you are using Shared VPC and the IP address that you provide is
  from the service project. In this case, the network that the IP address
  resides in is defined in the host project.


<a name="nested_source_cloud_function"></a>The `cloud_function` block supports:

* `uri` -
  (Optional)
  A Cloud Function name.

<a name="nested_source_app_engine_version"></a>The `app_engine_version` block supports:

* `uri` -
  (Optional)
  An App Engine service version name.

<a name="nested_source_cloud_run_revision"></a>The `cloud_run_revision` block supports:

* `uri` -
  (Optional)
  A Cloud Run revision URI.

<a name="nested_destination"></a>The `destination` block supports:

* `ip_address` -
  (Optional)
  The IP address of the endpoint, which can be an external or internal IP.

* `port` -
  (Optional)
  The IP protocol port of the endpoint. Only applicable when protocol is
  TCP or UDP.

* `instance` -
  (Optional)
  A Compute Engine instance URI.

* `forwarding_rule` -
  (Optional)
  Forwarding rule URI. Forwarding rules are frontends for load balancers,
  PSC endpoints, and Protocol Forwarding.

* `gke_master_cluster` -
  (Optional)
  A cluster URI for Google Kubernetes Engine cluster control plane.

* `fqdn` -
  (Optional)
  A DNS endpoint of Google Kubernetes Engine cluster control plane.
  Requires gke_master_cluster to be set, can't be used simultaneoulsly with
  ip_address or network. Applicable only to destination endpoint.

* `cloud_sql_instance` -
  (Optional)
  A Cloud SQL instance URI.

* `redis_instance` -
  (Optional)
  A Redis Instance URI.

* `redis_cluster` -
  (Optional)
  A Redis Cluster URI.

* `network` -
  (Optional)
  A VPC network URI.

* `project_id` -
  (Optional)
  Project ID where the endpoint is located.
  The project ID can be derived from the URI if you provide a endpoint or
  network URI.
  The following are two cases where you may need to provide the project ID:
  1. Only the IP address is specified, and the IP address is within a Google
  Cloud project.
  2. When you are using Shared VPC and the IP address that you provide is
  from the service project. In this case, the network that the IP address
  resides in is defined in the host project.

- - -


* `description` -
  (Optional)
  The user-supplied description of the Connectivity Test.
  Maximum of 512 characters.

* `protocol` -
  (Optional)
  IP Protocol of the test. When not provided, "TCP" is assumed.

* `related_projects` -
  (Optional)
  Other projects that may be relevant for reachability analysis.
  This is applicable to scenarios where a test can cross project
  boundaries.

* `labels` -
  (Optional)
  Resource labels to represent user-provided metadata.

  **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
  Please refer to the field `effective_labels` for all of the labels present on the resource.

* `round_trip` -
  (Optional)
  Whether run analysis for the return path from destination to source.
  Default value is false.

* `bypass_firewall_checks` -
  (Optional)
  Whether the analysis should skip firewall checking. Default value is false.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/global/connectivityTests/{{name}}`

* `terraform_labels` -
  The combination of labels configured directly on the resource
   and default labels configured on the provider.

* `effective_labels` -
  All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 5 minutes.
- `update` - Default is 5 minutes.
- `delete` - Default is 5 minutes.

## Import


ConnectivityTest can be imported using any of these accepted formats:

* `projects/{{project}}/locations/global/connectivityTests/{{name}}`
* `{{project}}/{{name}}`
* `{{name}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import ConnectivityTest using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/global/connectivityTests/{{name}}"
  to = google_network_management_connectivity_test.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), ConnectivityTest can be imported using one of the formats above. For example:

```
$ terraform import google_network_management_connectivity_test.default projects/{{project}}/locations/global/connectivityTests/{{name}}
$ terraform import google_network_management_connectivity_test.default {{project}}/{{name}}
$ terraform import google_network_management_connectivity_test.default {{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
