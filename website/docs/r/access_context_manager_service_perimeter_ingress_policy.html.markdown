---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Access Context Manager (VPC Service Controls)"
description: |-
  IngressPolicies match requests based on ingressFrom and ingressTo stanzas.
---

# google\_access\_context\_manager\_service\_perimeter\_ingress\_policy

IngressPolicies match requests based on ingressFrom and ingressTo stanzas. For an ingress policy to match,
both the ingressFrom and ingressTo stanzas must be matched. If an IngressPolicy matches a request,
the request is allowed through the perimeter boundary from outside the perimeter.
For example, access from the internet can be allowed either based on an AccessLevel or,
for traffic hosted on Google Cloud, the project of the source network.
For access from private networks, using the project of the hosting network is required.
Individual ingress policies can be limited by restricting which services and/
or actions they match using the ingressTo field.


To get more information about ServicePerimeterIngressPolicy, see:

* [API documentation](https://cloud.google.com/access-context-manager/docs/reference/rest/v1/accessPolicies.servicePerimeters#ingresspolicy)

## Argument Reference

The following arguments are supported:


* `perimeter` -
  (Required)
  The name of the Service Perimeter to add this resource to.


- - -


* `ingress_from` -
  (Optional)
  Defines the conditions on the source of a request causing this `IngressPolicy`
  to apply.
  Structure is [documented below](#nested_ingress_from).

* `ingress_to` -
  (Optional)
  Defines the conditions on the `ApiOperation` and request destination that cause
  this `IngressPolicy` to apply.
  Structure is [documented below](#nested_ingress_to).


<a name="nested_ingress_from"></a>The `ingress_from` block supports:

* `identity_type` -
  (Optional)
  Specifies the type of identities that are allowed access from outside the
  perimeter. If left unspecified, then members of `identities` field will be
  allowed access.
  Possible values are: `ANY_IDENTITY`, `ANY_USER_ACCOUNT`, `ANY_SERVICE_ACCOUNT`.

* `identities` -
  (Optional)
  A list of identities that are allowed access through this ingress policy.
  Should be in the format of email address. The email address should represent
  individual user or service account only.

* `sources` -
  (Optional)
  Sources that this `IngressPolicy` authorizes access from.
  Structure is [documented below](#nested_sources).


<a name="nested_sources"></a>The `sources` block supports:

* `access_level` -
  (Optional)
  An `AccessLevel` resource name that allow resources within the
  `ServicePerimeters` to be accessed from the internet. `AccessLevels` listed
  must be in the same policy as this `ServicePerimeter`. Referencing a nonexistent
  `AccessLevel` will cause an error. If no `AccessLevel` names are listed,
  resources within the perimeter can only be accessed via Google Cloud calls
  with request origins within the perimeter.
  Example `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL.`
  If * is specified, then all IngressSources will be allowed.

* `resource` -
  (Optional)
  A Google Cloud resource that is allowed to ingress the perimeter.
  Requests from these resources will be allowed to access perimeter data.
  Currently only projects are allowed. Format `projects/{project_number}`
  The project may be in any Google Cloud organization, not just the
  organization that the perimeter is defined in. `*` is not allowed, the case
  of allowing all Google Cloud resources only is not supported.

<a name="nested_ingress_to"></a>The `ingress_to` block supports:

* `resources` -
  (Optional)
  A list of resources, currently only projects in the form
  `projects/<projectnumber>`, protected by this `ServicePerimeter`
  that are allowed to be accessed by sources defined in the
  corresponding `IngressFrom`. A request matches if it contains
  a resource in this list. If `*` is specified for resources,
  then this `IngressTo` rule will authorize access to all
  resources inside the perimeter, provided that the request
  also matches the `operations` field.

* `operations` -
  (Optional)
  A list of `ApiOperations` the sources specified in corresponding `IngressFrom`
  are allowed to perform in this `ServicePerimeter`.
  Structure is [documented below](#nested_operations).


<a name="nested_operations"></a>The `operations` block supports:

* `service_name` -
  (Optional)
  The name of the API whose methods or permissions the `IngressPolicy` or
  `EgressPolicy` want to allow. A single `ApiOperation` with `serviceName`
  field set to `*` will allow all methods AND permissions for all services.

* `method_selectors` -
  (Optional)
  API methods or permissions to allow. Method or permission must belong to
  the service specified by serviceName field. A single `MethodSelector` entry
  with `*` specified for the method field will allow all methods AND
  permissions for the service specified in `serviceName`.
  Structure is [documented below](#nested_method_selectors).


<a name="nested_method_selectors"></a>The `method_selectors` block supports:

* `method` -
  (Optional)
  Value for method should be a valid method name for the corresponding
  serviceName in `ApiOperation`. If `*` used as value for `method`, then
  ALL methods and permissions are allowed.

* `permission` -
  (Optional)
  Value for permission should be a valid Cloud IAM permission for the
  corresponding `serviceName` in `ApiOperation`.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `{{perimeter}}`


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


ServicePerimeterIngressPolicy can be imported using any of these accepted formats:

```
$ terraform import google_access_context_manager_service_perimeter_ingress_policy.default {{perimeter}}
```
