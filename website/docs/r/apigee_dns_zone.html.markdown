---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Configuration: https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/apigee/DnsZone.yaml
#     Template:      https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/terraform/resource.html.markdown.tmpl
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "Apigee"
description: |-
  Apigee Dns Zone.
---

# google_apigee_dns_zone

Apigee Dns Zone.


To get more information about DnsZone, see:

* [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.dnsZones/create)
* How-to Guides
    * [Creating a DnsZone](https://cloud.google.com/apigee/docs/api-platform/get-started/create-dns)

## Example Usage - Apigee Dns Zone Basic


```hcl
data "google_client_config" "current" {}

resource "google_compute_network" "apigee_network" {
  name = "apigee-network"
}

resource "google_apigee_organization" "org" {
  description         = "Terraform-provisioned basic Apigee Org without VPC Peering."
  analytics_region    = "us-central1"
  project_id          = data.google_client_config.current.project
  disable_vpc_peering = true
}

resource "google_apigee_dns_zone" "apigee_dns_zone" {
  org_id                 = google_apigee_organization.apigee_org.id
  dns_zone_id = "test1"
  domain = "foo.com"
  description = "test"
  peering_config {
    target_project_id = data.google_client_config.current.project
    target_network_id = google_compute_network.apigee_network.id
  }
}
```

## Argument Reference

The following arguments are supported:


* `domain` -
  (Required)
  Doamin for the zone.

* `description` -
  (Required)
  Description for the zone.

* `peering_config` -
  (Required)
  Peering zone config
  Structure is [documented below](#nested_peering_config).

* `org_id` -
  (Required)
  The Apigee Organization associated with the Apigee instance,
  in the format `organizations/{{org_name}}`.

* `dns_zone_id` -
  (Required)
  ID of the dns zone.


<a name="nested_peering_config"></a>The `peering_config` block supports:

* `target_project_id` -
  (Required)
  The ID of the project that contains the producer VPC network.

* `target_network_id` -
  (Required)
  The name of the producer VPC network.

- - -



## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `{{org_id}}/dnsZones/{{dns_zone_id}}`

* `name` -
  Name of the Dns Zone in the following format:
  organizations/{organization}/dnsZones/{dnsZone}.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 30 minutes.
- `delete` - Default is 30 minutes.

## Import


DnsZone can be imported using any of these accepted formats:

* `{{org_id}}/dnsZones/{{dns_zone_id}}`
* `{{org_id}}/{{dns_zone_id}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import DnsZone using one of the formats above. For example:

```tf
import {
  id = "{{org_id}}/dnsZones/{{dns_zone_id}}"
  to = google_apigee_dns_zone.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), DnsZone can be imported using one of the formats above. For example:

```
$ terraform import google_apigee_dns_zone.default {{org_id}}/dnsZones/{{dns_zone_id}}
$ terraform import google_apigee_dns_zone.default {{org_id}}/{{dns_zone_id}}
```
