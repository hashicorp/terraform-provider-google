---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Dialogflow CX"
description: |-
  A Dialogflow CX conversation (session) can be described and visualized as a state machine.
---

# google\_dialogflow\_cx\_page

A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages.


To get more information about Page, see:

* [API documentation](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.flows.pages)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/dialogflow/cx/docs)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=dialogflowcx_page_full&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Dialogflowcx Page Full


```hcl
resource "google_dialogflow_cx_agent" "agent" {
  display_name = "dialogflowcx-agent"
  location = "global"
  default_language_code = "en"
  supported_language_codes = ["fr","de","es"]
  time_zone = "America/New_York"
  description = "Example description."
  avatar_uri = "https://cloud.google.com/_static/images/cloud/icons/favicons/onecloud/super_cloud.png"
  enable_stackdriver_logging = true
  enable_spell_correction    = true
	speech_to_text_settings {
		enable_speech_adaptation = true
	}
}


resource "google_dialogflow_cx_page" "basic_page" {
  parent       = google_dialogflow_cx_agent.agent.start_flow
  display_name = "MyPage"

  entry_fulfillment {
		messages {
			text {
				text = ["Welcome to page"]
			}
		}
   }

   form {
		parameters {
			display_name = "param1"
			entity_type  = "projects/-/locations/-/agents/-/entityTypes/sys.date"
			fill_behavior {
				initial_prompt_fulfillment {
					messages {
						text {
							text = ["Please provide param1"]
						}
					}
				}
			}
			required = "true"
			redact   = "true"
		}
	}

    transition_routes {
		condition = "$page.params.status = 'FINAL'"
		trigger_fulfillment {
			messages {
				text {
					text = ["information completed, navigating to page 2"]
				}
			}
		}
		target_page = google_dialogflow_cx_page.my_page2.id
	}
} 

resource "google_dialogflow_cx_page" "my_page2" {
    parent       = google_dialogflow_cx_agent.agent.start_flow
    display_name  = "MyPage2"
}
```

## Argument Reference

The following arguments are supported:


* `display_name` -
  (Required)
  The human-readable name of the page, unique within the agent.


- - -


* `entry_fulfillment` -
  (Optional)
  The fulfillment to call when the session is entering the page.
  Structure is [documented below](#nested_entry_fulfillment).

* `form` -
  (Optional)
  The form associated with the page, used for collecting parameters relevant to the page.
  Structure is [documented below](#nested_form).

* `transition_route_groups` -
  (Optional)
  Ordered list of TransitionRouteGroups associated with the page. Transition route groups must be unique within a page.
  If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes.
  If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence.
  Format:projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>/transitionRouteGroups/<TransitionRouteGroup ID>.

* `transition_routes` -
  (Optional)
  A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow.
  When we are in a certain page, the TransitionRoutes are evalauted in the following order:
  TransitionRoutes defined in the page with intent specified.
  TransitionRoutes defined in the transition route groups with intent specified.
  TransitionRoutes defined in flow with intent specified.
  TransitionRoutes defined in the transition route groups with intent specified.
  TransitionRoutes defined in the page with only condition specified.
  TransitionRoutes defined in the transition route groups with only condition specified.
  Structure is [documented below](#nested_transition_routes).

* `event_handlers` -
  (Optional)
  Handlers associated with the page to handle events such as webhook errors, no match or no input.
  Structure is [documented below](#nested_event_handlers).

* `parent` -
  (Optional)
  The flow to create a page for.
  Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.

* `language_code` -
  (Optional)
  The language of the following fields in page:
  Page.entry_fulfillment.messages
  Page.entry_fulfillment.conditional_cases
  Page.event_handlers.trigger_fulfillment.messages
  Page.event_handlers.trigger_fulfillment.conditional_cases
  Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages
  Page.form.parameters.fill_behavior.initial_prompt_fulfillment.conditional_cases
  Page.form.parameters.fill_behavior.reprompt_event_handlers.messages
  Page.form.parameters.fill_behavior.reprompt_event_handlers.conditional_cases
  Page.transition_routes.trigger_fulfillment.messages
  Page.transition_routes.trigger_fulfillment.conditional_cases
  If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.


<a name="nested_entry_fulfillment"></a>The `entry_fulfillment` block supports:

* `messages` -
  (Optional)
  The list of rich message responses to present to the user.
  Structure is [documented below](#nested_messages).

* `webhook` -
  (Optional)
  The webhook to call. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/webhooks/<Webhook ID>.

* `return_partial_responses` -
  (Optional)
  Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.

* `tag` -
  (Optional)
  The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.


<a name="nested_messages"></a>The `messages` block supports:

* `text` -
  (Optional)
  The text response message.
  Structure is [documented below](#nested_text).


<a name="nested_text"></a>The `text` block supports:

* `text` -
  (Optional)
  A collection of text responses.

* `allow_playback_interruption` -
  Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.

<a name="nested_form"></a>The `form` block supports:

* `parameters` -
  (Optional)
  Parameters to collect from the user.
  Structure is [documented below](#nested_parameters).


<a name="nested_parameters"></a>The `parameters` block supports:

* `display_name` -
  (Optional)
  The human-readable name of the parameter, unique within the form.

* `required` -
  (Optional)
  Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them.
  Required parameters must be filled before form filling concludes.

* `entity_type` -
  (Optional)
  The entity type of the parameter.
  Format: projects/-/locations/-/agents/-/entityTypes/<System Entity Type ID> for system entity types (for example, projects/-/locations/-/agents/-/entityTypes/sys.date), or projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/entityTypes/<Entity Type ID> for developer entity types.

* `is_list` -
  (Optional)
  Indicates whether the parameter represents a list of values.

* `fill_behavior` -
  (Optional)
  Defines fill behavior for the parameter.
  Structure is [documented below](#nested_fill_behavior).

* `redact` -
  (Optional)
  Indicates whether the parameter content should be redacted in log.
  If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.


<a name="nested_fill_behavior"></a>The `fill_behavior` block supports:

* `initial_prompt_fulfillment` -
  (Optional)
  The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter.
  Structure is [documented below](#nested_initial_prompt_fulfillment).


<a name="nested_initial_prompt_fulfillment"></a>The `initial_prompt_fulfillment` block supports:

* `messages` -
  (Optional)
  The list of rich message responses to present to the user.
  Structure is [documented below](#nested_messages).

* `webhook` -
  (Optional)
  The webhook to call. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/webhooks/<Webhook ID>.

* `return_partial_responses` -
  (Optional)
  Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.

* `tag` -
  (Optional)
  The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.


<a name="nested_messages"></a>The `messages` block supports:

* `text` -
  (Optional)
  The text response message.
  Structure is [documented below](#nested_text).


<a name="nested_text"></a>The `text` block supports:

* `text` -
  (Optional)
  A collection of text responses.

* `allow_playback_interruption` -
  Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.

<a name="nested_transition_routes"></a>The `transition_routes` block supports:

* `name` -
  The unique identifier of this transition route.

* `intent` -
  (Optional)
  The unique identifier of an Intent.
  Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/intents/<Intent ID>. Indicates that the transition can only happen when the given intent is matched. At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.

* `condition` -
  (Optional)
  The condition to evaluate against form parameters or session parameters.
  At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.

* `trigger_fulfillment` -
  (Optional)
  The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
  Structure is [documented below](#nested_trigger_fulfillment).

* `target_page` -
  (Optional)
  The target page to transition to.
  Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>/pages/<Page ID>.

* `target_flow` -
  (Optional)
  The target flow to transition to.
  Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.


<a name="nested_trigger_fulfillment"></a>The `trigger_fulfillment` block supports:

* `messages` -
  (Optional)
  The list of rich message responses to present to the user.
  Structure is [documented below](#nested_messages).

* `webhook` -
  (Optional)
  The webhook to call. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/webhooks/<Webhook ID>.

* `return_partial_responses` -
  (Optional)
  Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.

* `tag` -
  (Optional)
  The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.


<a name="nested_messages"></a>The `messages` block supports:

* `text` -
  (Optional)
  The text response message.
  Structure is [documented below](#nested_text).


<a name="nested_text"></a>The `text` block supports:

* `text` -
  (Optional)
  A collection of text responses.

* `allow_playback_interruption` -
  Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.

<a name="nested_event_handlers"></a>The `event_handlers` block supports:

* `name` -
  The unique identifier of this event handler.

* `event` -
  (Optional)
  The name of the event to handle.

* `trigger_fulfillment` -
  (Optional)
  The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
  Structure is [documented below](#nested_trigger_fulfillment).

* `target_page` -
  (Optional)
  The target page to transition to.
  Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>/pages/<Page ID>.

* `target_flow` -
  (Optional)
  The target flow to transition to.
  Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.


<a name="nested_trigger_fulfillment"></a>The `trigger_fulfillment` block supports:

* `messages` -
  (Optional)
  The list of rich message responses to present to the user.
  Structure is [documented below](#nested_messages).

* `webhook` -
  (Optional)
  The webhook to call. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/webhooks/<Webhook ID>.

* `return_partial_responses` -
  (Optional)
  Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.

* `tag` -
  (Optional)
  The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.


<a name="nested_messages"></a>The `messages` block supports:

* `text` -
  (Optional)
  The text response message.
  Structure is [documented below](#nested_text).


<a name="nested_text"></a>The `text` block supports:

* `text` -
  (Optional)
  A collection of text responses.

* `allow_playback_interruption` -
  Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `{{parent}}/pages/{{name}}`

* `name` -
  The unique identifier of the page.
  Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>/pages/<Page ID>.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 40 minutes.
- `update` - Default is 40 minutes.
- `delete` - Default is 20 minutes.

## Import


Page can be imported using any of these accepted formats:

```
$ terraform import google_dialogflow_cx_page.default {{parent}}/pages/{{name}}
$ terraform import google_dialogflow_cx_page.default {{parent}}/{{name}}
```
