---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Compute Engine"
description: |-
  Allows associating hierarchical firewall policies with the target where they are applied.
---

# google_compute_firewall_policy_association

Allows associating hierarchical firewall policies with the target where they are applied. This allows creating policies and rules in a different location than they are applied.
For more information on applying hierarchical firewall policies see the [official documentation](https://cloud.google.com/firewall/docs/firewall-policies#managing_hierarchical_firewall_policy_resources)

~> **Warning:** This resource is in beta, and should be used with the terraform-provider-google-beta provider.
See [Provider Versions](https://terraform.io/docs/providers/google/guides/provider_versions.html) for more details on beta resources.

To get more information about FirewallPolicyAssociation, see:

* [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/firewallPolicies/addAssociation)

## Example Usage - Firewall Policy Association


```hcl
resource "google_folder" "folder" {
  display_name = "my-folder"
  parent       = "organizations/123456789"
  deletion_protection = false
}

resource "google_compute_firewall_policy" "policy" {
  parent      = "organizations/123456789"
  short_name  = "my-policy"
  description = "Example Resource"
}

resource "google_compute_firewall_policy_association" "default" {
  firewall_policy = google_compute_firewall_policy.policy.id
  attachment_target = google_folder.folder.name
  name = "my-association"
}
```

## Argument Reference

The following arguments are supported:


* `name` -
  (Required)
  The name for an association.

* `attachment_target` -
  (Required)
  The target that the firewall policy is attached to.

* `firewall_policy` -
  (Required)
  The firewall policy of the resource.


- - -



## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `locations/global/firewallPolicies/{{firewall_policy}}/associations/{{name}}`

* `short_name` -
  The short name of the firewall policy of the association.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


FirewallPolicyAssociation can be imported using any of these accepted formats:

* `locations/global/firewallPolicies/{{firewall_policy}}/associations/{{name}}`
* `{{firewall_policy}}/{{name}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import FirewallPolicyAssociation using one of the formats above. For example:

```tf
import {
  id = "locations/global/firewallPolicies/{{firewall_policy}}/associations/{{name}}"
  to = google_compute_firewall_policy_association.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), FirewallPolicyAssociation can be imported using one of the formats above. For example:

```
$ terraform import google_compute_firewall_policy_association.default locations/global/firewallPolicies/{{firewall_policy}}/associations/{{name}}
$ terraform import google_compute_firewall_policy_association.default {{firewall_policy}}/{{name}}
```
