---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Configuration: https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/bigquery/RowAccessPolicy.yaml
#     Template:      https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/terraform/resource.html.markdown.tmpl
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "BigQuery"
description: |-
  Represents access on a subset of rows on the specified table, defined by its filter predicate.
---

# google_bigquery_row_access_policy

Represents access on a subset of rows on the specified table, defined by its filter predicate. Access to the subset of rows is controlled by its IAM policy.



<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=bigquery_row_access_policy_basic&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Bigquery Row Access Policy Basic


```hcl
resource "google_bigquery_dataset" "example" {
  dataset_id = "dataset_id"
  location = "US"
}

resource "google_bigquery_table" "example" {
  deletion_protection = false

  dataset_id = google_bigquery_dataset.example.dataset_id
  table_id   = "table_id"
}

resource "google_bigquery_row_access_policy" "example" {
  dataset_id = google_bigquery_dataset.example.dataset_id
  table_id   = google_bigquery_table.example.table_id
  policy_id = "policy_id"

  filter_predicate = "nullable_field is not NULL"
  grantees = [
    "domain:google.com"
  ]
}
```

## Argument Reference

The following arguments are supported:


* `dataset_id` -
  (Required)
  The ID of the dataset containing this row access policy.

* `table_id` -
  (Required)
  The ID of the table containing this row access policy.

* `policy_id` -
  (Required)
  The ID of the row access policy. The ID must contain only
  letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum
  length is 256 characters.

* `filter_predicate` -
  (Required)
  A SQL boolean expression that represents the rows defined by this row
  access policy, similar to the boolean expression in a WHERE clause of a
  SELECT query on a table.
  References to other tables, routines, and temporary functions are not
  supported.
  Examples: region="EU"
  date_field = CAST('2019-9-27' as DATE)
  nullable_field is not NULL
  numeric_field BETWEEN 1.0 AND 5.0


- - -


* `grantees` -
  (Optional)
  Input only. The optional list of iam_member users or groups that specifies the initial
  members that the row-level access policy should be created with.
  grantees types:
  - "user:alice@example.com": An email address that represents a specific
  Google account.
  - "serviceAccount:my-other-app@appspot.gserviceaccount.com": An email
  address that represents a service account.
  - "group:admins@example.com": An email address that represents a Google
  group.
  - "domain:example.com":The Google Workspace domain (primary) that
  represents all the users of that domain.
  - "allAuthenticatedUsers": A special identifier that represents all service
  accounts and all users on the internet who have authenticated with a Google
  Account. This identifier includes accounts that aren't connected to a
  Google Workspace or Cloud Identity domain, such as personal Gmail accounts.
  Users who aren't authenticated, such as anonymous visitors, aren't
  included.
  - "allUsers":A special identifier that represents anyone who is on
  the internet, including authenticated and unauthenticated users. Because
  BigQuery requires authentication before a user can access the service,
  allUsers includes only authenticated users.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}/rowAccessPolicies/{{policy_id}}`

* `creation_time` -
  The time when this row access policy was created, in milliseconds since
  the epoch.

* `last_modified_time` -
  The time when this row access policy was last modified, in milliseconds
  since the epoch.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


RowAccessPolicy can be imported using any of these accepted formats:

* `projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}/rowAccessPolicies/{{policy_id}}`
* `{{project}}/{{dataset_id}}/{{table_id}}/{{policy_id}}`
* `{{dataset_id}}/{{table_id}}/{{policy_id}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import RowAccessPolicy using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}/rowAccessPolicies/{{policy_id}}"
  to = google_bigquery_row_access_policy.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), RowAccessPolicy can be imported using one of the formats above. For example:

```
$ terraform import google_bigquery_row_access_policy.default projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}/rowAccessPolicies/{{policy_id}}
$ terraform import google_bigquery_row_access_policy.default {{project}}/{{dataset_id}}/{{table_id}}/{{policy_id}}
$ terraform import google_bigquery_row_access_policy.default {{dataset_id}}/{{table_id}}/{{policy_id}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
