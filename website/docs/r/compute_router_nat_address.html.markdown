---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Compute Engine"
description: |-
  A resource used to set the list of IP addresses to be used in a NAT service and manage the draining of destroyed IPs.
---

# google_compute_router_nat_address

A resource used to set the list of IP addresses to be used in a NAT service and manage the draining of destroyed IPs.

~> **Note:** This resource is to be used alongside a `google_compute_router_nat` resource,
the router nat resource must have no defined `nat_ips` or `drain_nat_ips` parameters,
instead using the `initial_nat_ips` parameter to set at least one IP for the creation of the resource.


To get more information about RouterNatAddress, see:

* [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/routers)
* How-to Guides
    * [Google Cloud Router](https://cloud.google.com/router/docs/)

## Example Usage - Router Nat Address Count


```hcl
resource "google_compute_network" "net" {
  name = "my-network"
}

resource "google_compute_subnetwork" "subnet" {
  name          = "my-subnetwork"
  network       = google_compute_network.net.id
  ip_cidr_range = "10.0.0.0/16"
  region        = "us-central1"
}

resource "google_compute_router" "router" {
  name    = "my-router"
  region  = google_compute_subnetwork.subnet.region
  network = google_compute_network.net.id
}

resource "google_compute_address" "address" {
  count  = 3
  name   = "nat-manual-ip-${count.index}"
  region = google_compute_subnetwork.subnet.region

  lifecycle {
    create_before_destroy = true
  }
}

resource "google_compute_router_nat_address" "nat_address" {
  nat_ips = google_compute_address.address.*.self_link
  router = google_compute_router.router.name
  router_nat = google_compute_router_nat.router_nat.name
  region = google_compute_router_nat.router_nat.region
}

resource "google_compute_router_nat" "router_nat" {
  name   = "my-router-nat"
  router = google_compute_router.router.name
  region = google_compute_router.router.region

  nat_ip_allocate_option = "MANUAL_ONLY"
  initial_nat_ips = [google_compute_address.address[0].self_link]

  source_subnetwork_ip_ranges_to_nat = "LIST_OF_SUBNETWORKS"
  subnetwork {
    name                    = google_compute_subnetwork.subnet.id
    source_ip_ranges_to_nat = ["ALL_IP_RANGES"]
  }
}
```

## Argument Reference

The following arguments are supported:


* `nat_ips` -
  (Required)
  Self-links of NAT IPs to be used in a Nat service. Only valid if the referenced RouterNat
  natIpAllocateOption is set to MANUAL_ONLY.

* `router` -
  (Required)
  The name of the Cloud Router in which the referenced NAT service is configured.

* `router_nat` -
  (Required)
  The name of the Nat service in which this address will be configured.


- - -


* `drain_nat_ips` -
  (Optional)
  A list of URLs of the IP resources to be drained. These IPs must be
  valid static external IPs that have been assigned to the NAT.

* `region` -
  (Optional)
  Region where the NAT service reside.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/regions/{{region}}/routers/{{router}}/{{router_nat}}`


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


RouterNatAddress can be imported using any of these accepted formats:

* `projects/{{project}}/regions/{{region}}/routers/{{router}}/{{router_nat}}`
* `{{project}}/{{region}}/{{router}}/{{router_nat}}`
* `{{region}}/{{router}}/{{router_nat}}`
* `{{router}}/{{router_nat}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import RouterNatAddress using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/regions/{{region}}/routers/{{router}}/{{router_nat}}"
  to = google_compute_router_nat_address.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), RouterNatAddress can be imported using one of the formats above. For example:

```
$ terraform import google_compute_router_nat_address.default projects/{{project}}/regions/{{region}}/routers/{{router}}/{{router_nat}}
$ terraform import google_compute_router_nat_address.default {{project}}/{{region}}/{{router}}/{{router_nat}}
$ terraform import google_compute_router_nat_address.default {{region}}/{{router}}/{{router_nat}}
$ terraform import google_compute_router_nat_address.default {{router}}/{{router_nat}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
