---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Configuration: https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/saasservicemgmt/RolloutKind.yaml
#     Template:      https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/terraform/resource.html.markdown.tmpl
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "SaaS Runtime"
description: |-
  A RolloutKind is a reusable configuration resource that defines the policies, strategies, and targeting for Rollout operations.
---

# google_saas_runtime_rollout_kind

A RolloutKind is a reusable configuration resource that defines the policies, strategies, and targeting for Rollout operations. It acts as a template for repeatable Rollouts, providing guardrails and ensuring that updates are executed in a consistent manner across a fleet of Units.

~> **Warning:** This resource is in beta, and should be used with the terraform-provider-google-beta provider.
See [Provider Versions](https://terraform.io/docs/providers/google/guides/provider_versions.html) for more details on beta resources.


<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=saas_runtime_rollout_kind_basic&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Saas Runtime Rollout Kind Basic


```hcl
resource "google_saas_runtime_saas" "example_saas" {
  provider = google-beta
  saas_id  = "example-saas"
  location = "global"

  locations {
    name = "us-central1"
  }
}

resource "google_saas_runtime_unit_kind" "example_unitkind" {
  provider     = google-beta
  location     = "global"
  unit_kind_id = "example-unitkind"
  saas         = google_saas_runtime_saas.example_saas.id
}

resource "google_saas_runtime_rollout_kind" "example" {
  provider          = google-beta
  location          = "global"
  rollout_kind_id   = "example-rolloutkind"
  unit_kind         = google_saas_runtime_unit_kind.example_unitkind.id

  rollout_orchestration_strategy = "Google.Cloud.Simple.OneLocationAtATime"
  error_budget {
    allowed_count = 1
  }
  unit_filter = "unit.labels['key1'] == 'value1'"
}
```

## Argument Reference

The following arguments are supported:


* `unit_kind` -
  (Required)
  UnitKind that this rollout kind corresponds to. Rollouts stemming from this
  rollout kind will target the units of this unit kind. In other words, this
  defines the population of target units to be upgraded by rollouts.

* `location` -
  (Required)
  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.

* `rollout_kind_id` -
  (Required)
  The ID value for the new rollout kind.


* `annotations` -
  (Optional)
  Annotations is an unstructured key-value map stored with a resource that
  may be set by external tools to store and retrieve arbitrary metadata.
  They are not queryable and should be preserved when modifying objects.
  More info: https://kubernetes.io/docs/user-guide/annotations
  **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
  Please refer to the field `effective_annotations` for all of the annotations present on the resource.

* `error_budget` -
  (Optional)
  The configuration for error budget. If the number of failed units exceeds
  max(allowed_count, allowed_ratio * total_units), the rollout will be paused.
  Structure is [documented below](#nested_error_budget).

* `labels` -
  (Optional)
  The labels on the resource, which can be used for categorization.
  similar to Kubernetes resource labels.
  **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
  Please refer to the field `effective_labels` for all of the labels present on the resource.

* `rollout_orchestration_strategy` -
  (Optional)
  The strategy used for executing a Rollout. This is a required field.
  There are two supported values strategies which are used to control a rollout.
  - "Google.Cloud.Simple.AllAtOnce"
  - "Google.Cloud.Simple.OneLocationAtATime"
  A rollout with one of these simple strategies will rollout across
  all locations defined in the associated UnitKind's Saas Locations.

* `unit_filter` -
  (Optional)
  CEL(https://github.com/google/cel-spec) formatted filter string against
  Unit. The filter will be applied to determine the eligible unit population.
  This filter can only reduce, but not expand the scope of the rollout.

* `update_unit_kind_strategy` -
  (Optional)
  The config for updating the unit kind. By default, the unit kind will be
  updated on the rollout start.
  Possible values:
  UPDATE_UNIT_KIND_STRATEGY_ON_START
  UPDATE_UNIT_KIND_STRATEGY_NEVER
  Possible values are: `UPDATE_UNIT_KIND_STRATEGY_ON_START`, `UPDATE_UNIT_KIND_STRATEGY_NEVER`.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.



<a name="nested_error_budget"></a>The `error_budget` block supports:

* `allowed_count` -
  (Optional)
  The maximum number of failed units allowed in a location without pausing
  the rollout.

* `allowed_percentage` -
  (Optional)
  The maximum percentage of units allowed to fail (0, 100] within a location
  without pausing the rollout.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/rolloutKinds/{{rollout_kind_id}}`

* `create_time` -
  The timestamp when the resource was created.

* `name` -
  Identifier. The resource name (full URI of the resource) following the standard naming
  scheme:
  "projects/{project}/locations/{location}/rolloutKinds/{rollout_kind_id}"

* `uid` -
  The unique identifier of the resource. UID is unique in the time
  and space for this resource within the scope of the service. It is
  typically generated by the server on successful creation of a resource
  and must not be changed. UID is used to uniquely identify resources
  with resource name reuses. This should be a UUID4.

* `update_time` -
  The timestamp when the resource was last updated. Any
  change to the resource made by users must refresh this value.
  Changes to a resource made by the service should refresh this value.

* `effective_annotations` -
  All of annotations (key/value pairs) present on the resource in GCP, including the annotations configured through Terraform, other clients and services.

* `terraform_labels` -
  The combination of labels configured directly on the resource
   and default labels configured on the provider.

* `effective_labels` -
  All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


RolloutKind can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/rolloutKinds/{{rollout_kind_id}}`
* `{{project}}/{{location}}/{{rollout_kind_id}}`
* `{{location}}/{{rollout_kind_id}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import RolloutKind using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/rolloutKinds/{{rollout_kind_id}}"
  to = google_saas_runtime_rollout_kind.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), RolloutKind can be imported using one of the formats above. For example:

```
$ terraform import google_saas_runtime_rollout_kind.default projects/{{project}}/locations/{{location}}/rolloutKinds/{{rollout_kind_id}}
$ terraform import google_saas_runtime_rollout_kind.default {{project}}/{{location}}/{{rollout_kind_id}}
$ terraform import google_saas_runtime_rollout_kind.default {{location}}/{{rollout_kind_id}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
