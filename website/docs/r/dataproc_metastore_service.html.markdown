---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Dataproc metastore"
layout: "google"
page_title: "Google: google_dataproc_metastore_service"
sidebar_current: "docs-google-dataproc-metastore-service"
description: |-
  A managed metastore service that serves metadata queries.
---

# google\_dataproc\_metastore\_service

A managed metastore service that serves metadata queries.

~> **Warning:** This resource is in beta, and should be used with the terraform-provider-google-beta provider.
See [Provider Versions](https://terraform.io/docs/providers/google/guides/provider_versions.html) for more details on beta resources.


<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=dataproc_metastore_service_basic&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Dataproc Metastore Service Basic


```hcl
resource "google_dataproc_metastore_service" "default" {
  provider   = google-beta
  service_id = "metastore-srv"
  location   = "us-central1"
  port       = 9080
  tier       = "DEVELOPER"

  maintenance_window {
    hour_of_day = 2
    day_of_week = "SUNDAY"
  }

  hive_metastore_config {
    version = "2.3.6"
  }
}
```
## Example Usage - Dataproc Metastore Service Cmek Example


```hcl
resource "google_dataproc_metastore_service" "default" {
  provider   = google-beta
  service_id = "example-service"
  location   = "us-central1"

  encryption_config {
    kms_key = google_kms_crypto_key.crypto_key.id
  }

  hive_metastore_config {
    version = "3.1.2"
  }
}

resource "google_kms_crypto_key" "crypto_key" {
  provider = google-beta
  name     = "example-key"
  key_ring = google_kms_key_ring.key_ring.id

  purpose  = "ENCRYPT_DECRYPT"
}

resource "google_kms_key_ring" "key_ring" {
  provider = google-beta
  name     = "example-keyring"
  location = "us-central1"
}
```

## Argument Reference

The following arguments are supported:


* `service_id` -
  (Required)
  The ID of the metastore service. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
  and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
  3 and 63 characters.


- - -


* `labels` -
  (Optional)
  User-defined labels for the metastore service.

* `network` -
  (Optional)
  The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:
  "projects/{projectNumber}/global/networks/{network_id}".

* `port` -
  (Optional)
  The TCP port at which the metastore service is reached. Default: 9083.

* `tier` -
  (Optional)
  The tier of the service.
  Possible values are `DEVELOPER` and `ENTERPRISE`.

* `maintenance_window` -
  (Optional)
  The one hour maintenance window of the metastore service.
  This specifies when the service can be restarted for maintenance purposes in UTC time.
  Structure is [documented below](#nested_maintenance_window).

* `encryption_config` -
  (Optional)
  Information used to configure the Dataproc Metastore service to encrypt
  customer data at rest.
  Structure is [documented below](#nested_encryption_config).

* `hive_metastore_config` -
  (Optional)
  Configuration information specific to running Hive metastore software as the metastore service.
  Structure is [documented below](#nested_hive_metastore_config).

* `location` -
  (Optional)
  The  location where the autoscaling policy should reside.
  The default value is `global`.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


<a name="nested_maintenance_window"></a>The `maintenance_window` block supports:

* `hour_of_day` -
  (Required)
  The hour of day (0-23) when the window starts.

* `day_of_week` -
  (Required)
  The day of week, when the window starts.
  Possible values are `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, and `SUNDAY`.

<a name="nested_encryption_config"></a>The `encryption_config` block supports:

* `kms_key` -
  (Required)
  The fully qualified customer provided Cloud KMS key name to use for customer data encryption.
  Use the following format: `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`

<a name="nested_hive_metastore_config"></a>The `hive_metastore_config` block supports:

* `version` -
  (Required)
  The Hive metastore schema version.

* `config_overrides` -
  (Optional)
  A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml).
  The mappings override system defaults (some keys cannot be overridden)

* `kerberos_config` -
  (Optional)
  Information used to configure the Hive metastore service as a service principal in a Kerberos realm.
  Structure is [documented below](#nested_kerberos_config).


<a name="nested_kerberos_config"></a>The `kerberos_config` block supports:

* `keytab` -
  (Required)
  A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).
  Structure is [documented below](#nested_keytab).

* `principal` -
  (Required)
  A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form "primary/instance@REALM", but there is no exact format.

* `krb5_config_gcs_uri` -
  (Required)
  A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf, although the file does not need to be named krb5.conf explicitly.


<a name="nested_keytab"></a>The `keytab` block supports:

* `cloud_secret` -
  (Required)
  The relative resource name of a Secret Manager secret version, in the following form:
  "projects/{projectNumber}/secrets/{secret_id}/versions/{version_id}".

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/services/{{service_id}}`

* `name` -
  The relative resource name of the metastore service.

* `endpoint_uri` -
  The URI of the endpoint used to access the metastore service.

* `state` -
  The current state of the metastore service.

* `state_message` -
  Additional information about the current state of the metastore service, if available.

* `artifact_gcs_uri` -
  A Cloud Storage URI (starting with gs://) that specifies where artifacts related to the metastore service are stored.


## Timeouts

This resource provides the following
[Timeouts](/docs/configuration/resources.html#timeouts) configuration options:

- `create` - Default is 40 minutes.
- `update` - Default is 40 minutes.
- `delete` - Default is 40 minutes.

## Import


Service can be imported using any of these accepted formats:

```
$ terraform import google_dataproc_metastore_service.default projects/{{project}}/locations/{{location}}/services/{{service_id}}
$ terraform import google_dataproc_metastore_service.default {{project}}/{{location}}/{{service_id}}
$ terraform import google_dataproc_metastore_service.default {{location}}/{{service_id}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://www.terraform.io/docs/providers/google/guides/provider_reference.html#user_project_override).
