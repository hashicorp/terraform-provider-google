---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Configuration: https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/networksecurity/DnsThreatDetector.yaml
#     Template:      https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/terraform/resource.html.markdown.tmpl
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "Network Security"
description: |-
  DNS Armor is a fully-managed service that provides DNS-layer security for your Google Cloud workloads.
---

# google_network_security_dns_threat_detector

DNS Armor is a fully-managed service that provides DNS-layer security for your Google Cloud workloads.

~> **Warning:** This resource is in beta, and should be used with the terraform-provider-google-beta provider.
See [Provider Versions](https://terraform.io/docs/providers/google/guides/provider_versions.html) for more details on beta resources.

To get more information about DnsThreatDetector, see:

* [API documentation](https://cloud.google.com/dns/docs/create-threat-detector)
* How-to Guides
    * [DNS Threat Detector](https://cloud.google.com/dns/docs/threat-detection)

## Example Usage - Network Security Dns Threat Detector Basic


```hcl
resource "google_compute_network" "foobar" {
  provider = google-beta

  name                    = "my-vpc"
  auto_create_subnetworks = false
}

resource "google_network_security_dns_threat_detector" "default" {
  provider = google-beta

  name                     = "my-threat-detector"
  location                 = "global"
  threat_detector_provider = "INFOBLOX"
  excluded_networks        = [ google_compute_network.foobar.id ]
  labels                   = {
    foo = "bar"
  }
}
```

## Argument Reference

The following arguments are supported:


* `name` -
  (Required)
  Name of the DnsThreatDetector resource.


* `threat_detector_provider` -
  (Optional)
  DNS Threat Detection provider. The only supported value is `INFOBLOX`.

* `excluded_networks` -
  (Optional)
  List of networks that are excluded from detection. Format: projects/{project}/global/networks/{name}.

* `labels` -
  (Optional)
  Set of label tags associated with the DNS Threat Detector resource.
  An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.

  **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
  Please refer to the field `effective_labels` for all of the labels present on the resource.

* `location` -
  (Optional)
  The location of the DNS Threat Detector. The only supported value is `global`.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.



## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/dnsThreatDetectors/{{name}}`

* `create_time` -
  The timestamp when the resource was created.
  A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
  Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z"

* `update_time` -
  The timestamp when the resource was updated.
  A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
  Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".

* `terraform_labels` -
  The combination of labels configured directly on the resource
   and default labels configured on the provider.

* `effective_labels` -
  All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


DnsThreatDetector can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/dnsThreatDetectors/{{name}}`
* `{{project}}/{{location}}/{{name}}`
* `{{location}}/{{name}}`
* `{{name}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import DnsThreatDetector using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/dnsThreatDetectors/{{name}}"
  to = google_network_security_dns_threat_detector.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), DnsThreatDetector can be imported using one of the formats above. For example:

```
$ terraform import google_network_security_dns_threat_detector.default projects/{{project}}/locations/{{location}}/dnsThreatDetectors/{{name}}
$ terraform import google_network_security_dns_threat_detector.default {{project}}/{{location}}/{{name}}
$ terraform import google_network_security_dns_threat_detector.default {{location}}/{{name}}
$ terraform import google_network_security_dns_threat_detector.default {{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
