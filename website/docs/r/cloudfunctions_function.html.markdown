---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Cloud Functions"
layout: "google"
page_title: "Google: google_cloudfunctions_function"
sidebar_current: "docs-google-cloudfunctions-function"
description: |-
  A Cloud Function that contains user computation executed in response to an event.
---

# google\_cloudfunctions\_function

A Cloud Function that contains user computation executed in response to an event.



<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=cloudfunctions_public_function&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Cloudfunctions Public Function


```hcl
resource "google_storage_bucket" "bucket" {
  name = "test-bucket"
}

resource "google_storage_bucket_object" "archive" {
  name   = "index.zip"
  bucket = google_storage_bucket.bucket.name
  source = "./path/to/zip/file/which/contains/code"
}

resource "google_cloudfunctions_function" "function" {
  name        = "function-test"
  description = "My function"
  runtime     = "nodejs10"

  available_memory_mb   = 128
  source_archive_bucket = google_storage_bucket.bucket.name
  source_archive_object = google_storage_bucket_object.archive.name
  trigger_http          = true
  entry_point           = "helloGET"
}

# IAM entry for all users to invoke the function
resource "google_cloudfunctions_function_iam_member" "invoker" {
  project        = google_cloudfunctions_function.function.project
  region         = google_cloudfunctions_function.function.region
  cloud_function = google_cloudfunctions_function.function.name

  role   = "roles/cloudfunctions.invoker"
  member = "allUsers"
}
```
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=cloudfunctions_single_user&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Cloudfunctions Single User


```hcl
resource "google_storage_bucket" "bucket" {
  name = "test-bucket"
}

resource "google_storage_bucket_object" "archive" {
  name   = "index.zip"
  bucket = google_storage_bucket.bucket.name
  source = "./path/to/zip/file/which/contains/code"
}

resource "google_cloudfunctions_function" "function" {
  name        = "function-test"
  description = "My function"
  runtime     = "nodejs10"

  available_memory_mb   = 128
  source_archive_bucket = google_storage_bucket.bucket.name
  source_archive_object = google_storage_bucket_object.archive.name
  trigger_http          = true
  timeout               = 60
  entry_point           = "helloGET"
  labels = {
    my-label = "my-label-value"
  }

  environment_variables = {
    MY_ENV_VAR = "my-env-var-value"
  }
}

# IAM entry for a single user to invoke the function
resource "google_cloudfunctions_function_iam_member" "invoker" {
  project        = google_cloudfunctions_function.function.project
  region         = google_cloudfunctions_function.function.region
  cloud_function = google_cloudfunctions_function.function.name

  role   = "roles/cloudfunctions.invoker"
  member = "user:myFunctionInvoker@example.com"
}
```

## Argument Reference

The following arguments are supported:


* `name` -
  (Required)
  A user-defined name of the function. Function names must
  be unique globally and match pattern `projects/*/locations/*/functions/*`.

* `region` -
  (Required)
  The location of this cloud function.


- - -


* `description` -
  (Optional)
  User-provided description of a function.

* `entry_point` -
  (Optional)
  The name of the function (as defined in source code) that will be executed.
  Defaults to the resource name suffix, if not specified. For backward
  compatibility, if function with given name is not found, then the system
  will try to use function named "function". For Node.js this is name of a
  function exported by the module specified in `source_location`.

* `runtime` -
  (Optional)
  The runtime in which to run the function. Required when deploying a new
  function, optional when updating an existing function. For a complete
  list of possible choices, see the [gcloud command reference](https://cloud.google.com/sdk/gcloud/reference/functions/deploy#--runtime).

* `timeout` -
  (Optional)
  The function execution timeout. Execution is considered failed and can
  be terminated if the function is not completed at the end of the timeout
  period. Defaults to 60 seconds.

* `available_memory_mb` -
  (Optional)
  The amount of memory in MB available for a function. Defaults to 256MB.

* `labels` -
  (Optional)
  Labels associated with this Cloud Function.

* `environment_variables` -
  (Optional)
  Environment variables that shall be available during function execution.

* `network` -
  (Optional)
  The VPC Network that this cloud function can connect to. It can be either
  the fully-qualified URI, or the short name of the network resource. If the
  short network name is used, the network must belong to the same project.
  Otherwise, it must belong to a project within the same organization.
  The format of this field is either `projects/{project}/global/networks/{network}`
  or `{network}`, where {project} is a project id where the network is defined,
  and {network} is the short name of the network.
  This field is mutually exclusive with `vpcConnector` and will be replaced by it.

* `max_instances` -
  (Optional)
  The limit on the maximum number of function instances that may coexist at a given time.

* `vpc_connector` -
  (Optional)
  The VPC Network Connector that this cloud function can connect to. It can be
  either the fully-qualified URI, or the short name of the network connector
  resource. The format of this field is `projects/*/locations/*/connectors/*`
  This field is mutually exclusive with `network` field and will eventually replace it.

* `vpc_connector_egress_settings` -
  (Optional)
  The egress settings for the connector, controlling what traffic is diverted through it.

  Possible values are:
  * `VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED`
  * `PRIVATE_RANGES_ONLY`
  * `ALL_TRAFFIC`

* `ingress_settings` -
  (Optional)
  The ingress settings for the function, controlling what traffic can reach it.

  Possible values are:
  * `INGRESS_SETTINGS_UNSPECIFIED`
  * `ALLOW_ALL`
  * `ALLOW_INTERNAL_ONLY`

* `source_archive_url` -
  (Optional)
  The Google Cloud Storage URL, starting with gs://, pointing to the zip
  archive which contains the function.

* `source_repository` -
  (Optional)
  The source repository where a function is hosted.  Structure is documented below.

* `source_upload_url` -
  (Optional)
  The Google Cloud Storage signed URL used for source uploading.

* `https_trigger` -
  (Optional)
  An HTTPS endpoint type of source that can be triggered via URL.  Structure is documented below.

* `event_trigger` -
  (Optional)
  A source that fires events in response to a condition in another service.  Structure is documented below.

* `trigger_http` -
  (Optional)
  Use HTTP to trigger this function

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


The `source_repository` block supports:

* `url` -
  (Required)
  The URL pointing to the hosted repository where the function is defined

* `deployed_url` -
  The URL pointing to the hosted repository where the function were defined
  at the time of deployment.

The `https_trigger` block supports:

* `url` -
  The deployed url for the function.

The `event_trigger` block supports:

* `event_type` -
  (Required)
  The type of event to observe. For example:
  `providers/cloud.storage/eventTypes/object.change` and
  `providers/cloud.pubsub/eventTypes/topic.publish`.

* `resource` -
  (Required)
  The resource(s) from which to observe events,
  for example, `projects/_/buckets/myBucket.`

* `service` -
  (Optional)
  The hostname of the service that should be observed.

* `failure_policy` -
  (Optional)
  Specifies policy for failed executions.  Structure is documented below.


The `failure_policy` block supports:

* `retry` -
  (Required)
  Whether the function should be retried on failure. Defaults to `false`.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/functions/{{name}}`

* `status` -
  Status of the function deployment.

* `service_account_email` -
  The email of the function's service account. If empty, defaults to
  `{project_id}@appspot.gserviceaccount.com`.

* `update_time` -
  The last update timestamp of a Cloud Function

* `version_id` -
  The version identifier of the Cloud Function. Each deployment attempt
  results in a new version of a function being created.


## Timeouts

This resource provides the following
[Timeouts](/docs/configuration/resources.html#timeouts) configuration options:

- `create` - Default is 5 minutes.
- `update` - Default is 5 minutes.
- `delete` - Default is 5 minutes.

## Import

Function can be imported using any of these accepted formats:

```
$ terraform import google_cloudfunctions_function.default projects/{{project}}/locations/{{location}}/functions/{{name}}
$ terraform import google_cloudfunctions_function.default {{project}}/{{location}}/{{name}}
$ terraform import google_cloudfunctions_function.default {{location}}/{{name}}
```

-> If you're importing a resource with beta features, make sure to include `-provider=google-beta`
as an argument so that Terraform uses the correct provider to import your resource.

## User Project Overrides

This resource supports [User Project Overrides](https://www.terraform.io/docs/providers/google/guides/provider_reference.html#user_project_override).
