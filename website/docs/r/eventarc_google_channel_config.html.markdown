---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Configuration: https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/eventarc/GoogleChannelConfig.yaml
#     Template:      https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/terraform/resource.html.markdown.tmpl
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "Eventarc"
description: |-
  The Eventarc GoogleChannelConfig resource
---

# google_eventarc_google_channel_config

The Eventarc GoogleChannelConfig resource


To get more information about GoogleChannelConfig, see:

* [API documentation](https://cloud.google.com/eventarc/docs/reference/rest/v1/projects.locations)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/eventarc/docs/use-cmek#enable-cmek-google-channel)

## Example Usage - Eventarc Google Channel Config With Cmek


```hcl
data "google_project" "test_project" {
  project_id = "my-project-name"
}

data "google_kms_key_ring" "test_key_ring" {
  name     = "keyring"
  location = "us-centra1"
}

data "google_kms_crypto_key" "key" {
  name     = "key"
  key_ring = data.google_kms_key_ring.test_key_ring.id
}

resource "google_kms_crypto_key_iam_member" "key_member" {
  crypto_key_id = data.google_kms_crypto_key.key.id
  role          = "roles/cloudkms.cryptoKeyEncrypterDecrypter"
  member        = "serviceAccount:service-${data.google_project.test_project.number}@gcp-sa-eventarc.iam.gserviceaccount.com"
}

resource "google_eventarc_google_channel_config" "primary" {
  location        = "us-central1"
  name            = "googleChannelConfig"
  crypto_key_name =  data.google_kms_crypto_key.key.id
  depends_on      = [google_kms_crypto_key_iam_member.key_member]
}
```

## Argument Reference

The following arguments are supported:


* `name` -
  (Required)
  Required. The resource name of the config. Must be in the format of, `projects/{project}/locations/{location}/googleChannelConfig`.

* `location` -
  (Required)
  The location for the resource


- - -


* `crypto_key_name` -
  (Optional)
  Optional. Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt their event data. It must match the pattern `projects/*/locations/*/keyRings/*/cryptoKeys/*`.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/googleChannelConfig`

* `update_time` -
  Output only. The last-modified time.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


GoogleChannelConfig can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/googleChannelConfig`
* `{{project}}/{{location}}`
* `{{location}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import GoogleChannelConfig using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/googleChannelConfig"
  to = google_eventarc_google_channel_config.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), GoogleChannelConfig can be imported using one of the formats above. For example:

```
$ terraform import google_eventarc_google_channel_config.default projects/{{project}}/locations/{{location}}/googleChannelConfig
$ terraform import google_eventarc_google_channel_config.default {{project}}/{{location}}
$ terraform import google_eventarc_google_channel_config.default {{location}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
