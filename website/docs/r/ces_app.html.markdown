---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Configuration: https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/ces/App.yaml
#     Template:      https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/terraform/resource.html.markdown.tmpl
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "Customer Engagement Suite"
description: |-
  Description
---

# google_ces_app

Description



<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=ces_app_basic&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Ces App Basic


```hcl
resource "google_ces_app" "ces_app_basic" {
  app_id = "app-id"
  location = "us"
  description = "Basic CES App example"
  display_name = "my-app"

  language_settings {
    default_language_code    = "en-US"
    supported_language_codes = ["es-ES", "fr-FR"]
    enable_multilingual_support = true
    fallback_action          = "escalate"
  }

  audio_processing_config {
    synthesize_speech_configs {
      language_code = "en-US"
      voice         = "en-US-Standard-A"
      speaking_rate = 1.0
    }
    synthesize_speech_configs {
      language_code = "es-ES"
      voice         = "es-ES-Standard-A"
      speaking_rate = 0.95
    }

    barge_in_config {
      barge_in_awareness = true
    }

    inactivity_timeout = "300s"

    ambient_sound_config {
      prebuilt_ambient_sound = "room_2"
      volume_gain_db         = -6.0
    }
  }

  logging_settings {
    redaction_config {
      enable_redaction   = true
      inspect_template   = "projects/fake-project/locations/us/inspectTemplates/example-inspect"
      deidentify_template = "projects/fake-project/locations/us/deidentifyTemplates/example-deidentify"
    }

    audio_recording_config {
      gcs_bucket      = "gs://fake-app-audio-recordings"
      gcs_path_prefix = "projects/fake-project/location/us/app/test-app/123/$session/123"
    }

    bigquery_export_settings {
      dataset = "projects/fake-project/datasets/fake_app_logs"
      enabled = false
      project = "projects/fake-project"
    }

    cloud_logging_settings {
      enable_cloud_logging = true
    }

    conversation_logging_settings {
      disable_conversation_logging = true
    }
  }

  model_settings {
    model       = "gemini-1.5-flash"
    temperature = 0.5
  }

  evaluation_metrics_thresholds {
    golden_evaluation_metrics_thresholds {
      turn_level_metrics_thresholds {
        semantic_similarity_success_threshold        = 3
        overall_tool_invocation_correctness_threshold = 1.0
      }
      expectation_level_metrics_thresholds {
        tool_invocation_parameter_correctness_threshold = 1.0
      }
    }
  }

variable_declarations {
    name        = "test"
    description = "test"
    schema {
      description = "schema description"
      type        = "ARRAY"
      nullable    = true
      required = ["some_property"]
      enum = ["VALUE_A", "VALUE_B"]
      ref = "#/defs/MyDefinition"
      unique_items = true
      defs = jsonencode({
        SimpleString = {
          type        = "STRING"
          description = "A simple string definition"
      }})
      any_of = jsonencode([
        {
          type        = "STRING"
          description = "any_of option 1: string"
        },])
      default = jsonencode(
        false)
      prefix_items = jsonencode([
        {
          type        = "ARRAY"
          description = "prefix item 1"
        },])
      additional_properties = jsonencode(
        {
          type        = "BOOLEAN"
        })
      properties = jsonencode({
        name = {
          type        = "STRING"
          description = "A name"
      }})
      items = jsonencode({
          type        = "ARRAY"
          description = "An array"
      })
    }
  }

  global_instruction = "You are a virtual assistant for an e-commerce platform. Be friendly and helpful."

  guardrails = [
  ]

  default_channel_profile {
    channel_type = "WEB_UI"
    disable_barge_in_control = false
    disable_dtmf = true
    persona_property {
      persona = "CONCISE"
    }
    profile_id = "profile-id"
    web_widget_config {
      modality = "CHAT_ONLY"
      theme    = "LIGHT"
      web_widget_title = "Help Assistant"
    }
  }

  metadata = {
    "deployment_env" = "test"
  }

  time_zone_settings {
    time_zone = "America/Los_Angeles"
  }

  # Root agent should not be specified when creating an app
}
```
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=ces_app_ambient_sound_gcs_uri&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Ces App Ambient Sound Gcs Uri


```hcl
resource "google_ces_app" "ces_app_ambient_sound_gcs_uri" {
  app_id = "app-id"
  location = "us"
  description = "Basic CES App example"
  display_name = "my-app-ambient-sound-gcs-uri"

  language_settings {
    default_language_code    = "en-US"
    supported_language_codes = ["es-ES", "fr-FR"]
    enable_multilingual_support = true
    fallback_action          = "escalate"
  }

  audio_processing_config {
    synthesize_speech_configs {
      language_code = "en-US"
      voice         = "en-US-Standard-A"
      speaking_rate = 1.0
    }
    synthesize_speech_configs {
      language_code = "es-ES"
      voice         = "es-ES-Standard-A"
      speaking_rate = 0.95
    }

    barge_in_config {
      barge_in_awareness = true
    }

    inactivity_timeout = "300s"

    ambient_sound_config {
      gcs_uri = "gs://fake-bucket/sounds/ambient.wav"
      volume_gain_db         = -6.0
    }
  }

  logging_settings {
    redaction_config {
      enable_redaction   = true
      inspect_template   = "projects/fake-project/locations/us/inspectTemplates/example-inspect"
      deidentify_template = "projects/fake-project/locations/us/deidentifyTemplates/example-deidentify"
    }

    audio_recording_config {
      gcs_bucket      = "gs://fake-app-audio-recordings"
      gcs_path_prefix = "projects/fake-project/location/us/app/fake-app/123/$session/123"
    }

    bigquery_export_settings {
      dataset = "projects/fake-project/datasets/fake_app_logs"
      enabled = false
      project = "projects/fake-project"
    }

    cloud_logging_settings {
      enable_cloud_logging = true
    }

    conversation_logging_settings {
      disable_conversation_logging = true
    }
  }

  model_settings {
    model       = "gemini-1.5-flash"
    temperature = 0.5
  }

  evaluation_metrics_thresholds {
    golden_evaluation_metrics_thresholds {
      turn_level_metrics_thresholds {
        semantic_similarity_success_threshold        = 3
        overall_tool_invocation_correctness_threshold = 1.0
      }
      expectation_level_metrics_thresholds {
        tool_invocation_parameter_correctness_threshold = 1.0
      }
    }
  }

variable_declarations {
    name        = "test"
    description = "test"
    schema {
      description = "schema description"
      type        = "ARRAY"
      nullable    = true
      required = ["some_property"]
      enum = ["VALUE_A", "VALUE_B"]
      ref = "#/defs/MyDefinition"
      unique_items = true
      defs = jsonencode({
        SimpleString = {
          type        = "STRING"
          description = "A simple string definition"
      }})
      any_of = jsonencode([
        {
          type        = "STRING"
          description = "any_of option 1: string"
        },])
      default = jsonencode(
        false)
      prefix_items = jsonencode([
        {
          type        = "ARRAY"
          description = "prefix item 1"
        },])
      additional_properties = jsonencode(
        {
          type        = "BOOLEAN"
        })
      properties = jsonencode({
        name = {
          type        = "STRING"
          description = "A name"
      }})
      items = jsonencode({
          type        = "ARRAY"
          description = "An array"
      })
    }
  }

  global_instruction = "You are a virtual assistant for an e-commerce platform. Be friendly and helpful."

  guardrails = [
  ]

  default_channel_profile {
    channel_type = "WEB_UI"
    disable_barge_in_control = false
    disable_dtmf = true
    persona_property {
      persona = "CONCISE"
    }
    profile_id = "profile-id"
    web_widget_config {
      modality = "CHAT_ONLY"
      theme    = "LIGHT"
      web_widget_title = "Help Assistant"
    }
  }

  metadata = {
    "deployment_env" = "test"
  }

  time_zone_settings {
    time_zone = "America/Los_Angeles"
  }

  # Root agent should not be specified when creating an app
}
```

## Argument Reference

The following arguments are supported:


* `display_name` -
  (Required)
  Display name of the app.

* `location` -
  (Required)
  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.

* `app_id` -
  (Required)
  The ID to use for the app, which will become the final component of
  the app's resource name. If not provided, a unique ID will be
  automatically assigned for the app.


* `audio_processing_config` -
  (Optional)
  Configuration for how the input and output audio should be processed and
  delivered.
  Structure is [documented below](#nested_audio_processing_config).

* `data_store_settings` -
  (Optional)
  Data store related settings for the app.
  Structure is [documented below](#nested_data_store_settings).

* `default_channel_profile` -
  (Optional)
  A ChannelProfile configures the agent's behavior for a specific communication
  channel, such as web UI or telephony.
  Structure is [documented below](#nested_default_channel_profile).

* `description` -
  (Optional)
  Human-readable description of the app.

* `evaluation_metrics_thresholds` -
  (Optional)
  Threshold settings for metrics in an Evaluation.
  Structure is [documented below](#nested_evaluation_metrics_thresholds).

* `global_instruction` -
  (Optional)
  Instructions for all the agents in the app.
  You can use this instruction to set up a stable identity or personality
  across all the agents.

* `guardrails` -
  (Optional)
  List of guardrails for the app.
  Format:
  `projects/{project}/locations/{location}/apps/{app}/guardrails/{guardrail}`

* `language_settings` -
  (Optional)
  Language settings of the app.
  Structure is [documented below](#nested_language_settings).

* `logging_settings` -
  (Optional)
  Settings to describe the logging behaviors for the app.
  Structure is [documented below](#nested_logging_settings).

* `metadata` -
  (Optional)
  Metadata about the app. This field can be used to store additional
  information relevant to the app's details or intended usages.

* `model_settings` -
  (Optional)
  Model settings contains various configurations for the LLM model.
  Structure is [documented below](#nested_model_settings).

* `root_agent` -
  (Optional)
  The root agent is the entry point of the app.
  Format: `projects/{project}/locations/{location}/apps/{app}/agents/{agent}`

* `time_zone_settings` -
  (Optional)
  TimeZone settings of the app.
  Structure is [documented below](#nested_time_zone_settings).

* `variable_declarations` -
  (Optional)
  The declarations of the variables.
  Structure is [documented below](#nested_variable_declarations).

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.



<a name="nested_audio_processing_config"></a>The `audio_processing_config` block supports:

* `ambient_sound_config` -
  (Optional)
  Configuration for the ambient sound to be played with the synthesized agent
  response, to enhance the naturalness of the conversation.
  Structure is [documented below](#nested_audio_processing_config_ambient_sound_config).

* `barge_in_config` -
  (Optional)
  Configuration for how the user barge-in activities should be handled.
  Structure is [documented below](#nested_audio_processing_config_barge_in_config).

* `inactivity_timeout` -
  (Optional)
  The duration of user inactivity (no speech or interaction) before the agent
  prompts the user for reengagement. If not set, the agent will not prompt
  the user for reengagement.

* `synthesize_speech_configs` -
  (Optional)
  Configuration of how the agent response should be synthesized, mapping from
  the language code to SynthesizeSpeechConfig.
  If the configuration for the specified language code is not found, the
  configuration for the root language code will be used. For example, if the
  map contains "en-us" and "en", and the specified language code is "en-gb",
  then "en" configuration will be used.
  Note: Language code is case-insensitive.
  Structure is [documented below](#nested_audio_processing_config_synthesize_speech_configs).


<a name="nested_audio_processing_config_ambient_sound_config"></a>The `ambient_sound_config` block supports:

* `gcs_uri` -
  (Optional)
  Ambient noise as a mono-channel, 16kHz WAV file stored in [Cloud
  Storage](https://cloud.google.com/storage).
  Note: Please make sure the CES service agent
  `service-@gcp-sa-ces.iam.gserviceaccount.com` has
  `storage.objects.get` permission to the Cloud Storage object.

* `prebuilt_ambient_sound` -
  (Optional)
  Name of the prebuilt ambient sound.
  Valid values are: - "coffee_shop" - "keyboard" - "keypad" - "hum"
  -"office_1" - "office_2" - "office_3"
  -"room_1" - "room_2" - "room_3"
  -"room_4" - "room_5" - "air_conditioner"

* `volume_gain_db` -
  (Optional)
  Volume gain (in dB) of the normal native volume supported by
  ambient noise, in the range [-96.0, 16.0]. If unset, or set to a value of
  0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB)
  will play at approximately half the amplitude of the normal native signal
  amplitude. A value of +6.0 (dB) will play at approximately twice the
  amplitude of the normal native signal amplitude. We strongly recommend not
  to exceed +10 (dB) as there's usually no effective increase in loudness for
  any value greater than that.

<a name="nested_audio_processing_config_barge_in_config"></a>The `barge_in_config` block supports:

* `barge_in_awareness` -
  (Optional)
  If enabled, the agent will adapt its next response based on the assumption
  that the user hasn't heard the full preceding agent message.
  This should not be used in scenarios where agent responses are displayed
  visually.

<a name="nested_audio_processing_config_synthesize_speech_configs"></a>The `synthesize_speech_configs` block supports:

* `language_code` - (Required) The identifier for this object. Format specified above.

* `voice` -
  (Optional)
  The name of the voice. If not set, the service will choose a
  voice based on the other parameters such as language_code.
  For the list of available voices, please refer to Supported voices and
  languages from Cloud Text-to-Speech.

* `speaking_rate` -
  (Optional)
  The speaking rate/speed in the range [0.25, 2.0]. 1.0 is the normal native
  speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is
  half as fast. Values outside of the range [0.25, 2.0] will return an error.

<a name="nested_data_store_settings"></a>The `data_store_settings` block supports:

* `engines` -
  (Output)
  The engines for the app.
  Structure is [documented below](#nested_data_store_settings_engines).


<a name="nested_data_store_settings_engines"></a>The `engines` block contains:

* `name` -
  (Output)
  The resource name of the engine.
  Format:
  `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}`

* `type` -
  (Output)
  The type of the engine.
  Possible values:
  ENGINE_TYPE_SEARCH
  ENGINE_TYPE_CHAT

<a name="nested_default_channel_profile"></a>The `default_channel_profile` block supports:

* `channel_type` -
  (Optional)
  The type of the channel profile.
  Possible values:
  UNKNOWN
  WEB_UI
  API
  TWILIO
  GOOGLE_TELEPHONY_PLATFORM
  CONTACT_CENTER_AS_A_SERVICE

* `disable_barge_in_control` -
  (Optional)
  Whether to disable user barge-in in the conversation.
  - true: User interruptions are disabled while the agent is speaking.
  - false: The agent retains automatic control over when the user can interrupt.

* `disable_dtmf` -
  (Optional)
  Whether to disable DTMF (dual-tone multi-frequency).

* `persona_property` -
  (Optional)
  Represents the persona property of a channel.
  Structure is [documented below](#nested_default_channel_profile_persona_property).

* `profile_id` -
  (Optional)
  The unique identifier of the channel profile.

* `web_widget_config` -
  (Optional)
  Message for configuration for the web widget.
  Structure is [documented below](#nested_default_channel_profile_web_widget_config).


<a name="nested_default_channel_profile_persona_property"></a>The `persona_property` block supports:

* `persona` -
  (Optional)
  The persona of the channel.
  Possible values:
  UNKNOWN
  CONCISE
  CHATTY

<a name="nested_default_channel_profile_web_widget_config"></a>The `web_widget_config` block supports:

* `modality` -
  (Optional)
  The modality of the web widget.
  Possible values:
  UNKNOWN_MODALITY
  CHAT_AND_VOICE
  VOICE_ONLY
  CHAT_ONLY

* `theme` -
  (Optional)
  The theme of the web widget.
  Possible values:
  UNKNOWN_THEME
  LIGHT
  DARK

* `web_widget_title` -
  (Optional)
  The title of the web widget.

<a name="nested_evaluation_metrics_thresholds"></a>The `evaluation_metrics_thresholds` block supports:

* `golden_evaluation_metrics_thresholds` -
  (Optional)
  Settings for golden evaluations.
  Structure is [documented below](#nested_evaluation_metrics_thresholds_golden_evaluation_metrics_thresholds).


<a name="nested_evaluation_metrics_thresholds_golden_evaluation_metrics_thresholds"></a>The `golden_evaluation_metrics_thresholds` block supports:

* `expectation_level_metrics_thresholds` -
  (Optional)
  Expectation level metrics thresholds.
  Structure is [documented below](#nested_evaluation_metrics_thresholds_golden_evaluation_metrics_thresholds_expectation_level_metrics_thresholds).

* `turn_level_metrics_thresholds` -
  (Optional)
  Turn level metrics thresholds.
  Structure is [documented below](#nested_evaluation_metrics_thresholds_golden_evaluation_metrics_thresholds_turn_level_metrics_thresholds).


<a name="nested_evaluation_metrics_thresholds_golden_evaluation_metrics_thresholds_expectation_level_metrics_thresholds"></a>The `expectation_level_metrics_thresholds` block supports:

* `tool_invocation_parameter_correctness_threshold` -
  (Optional)
  The success threshold for individual tool invocation parameter
  correctness. Must be a float between 0 and 1. Default is 1.0.

<a name="nested_evaluation_metrics_thresholds_golden_evaluation_metrics_thresholds_turn_level_metrics_thresholds"></a>The `turn_level_metrics_thresholds` block supports:

* `overall_tool_invocation_correctness_threshold` -
  (Optional)
  The success threshold for overall tool invocation correctness. Must be
  a float between 0 and 1. Default is 1.0.

* `semantic_similarity_success_threshold` -
  (Optional)
  The success threshold for semantic similarity. Must be an integer
  between 0 and 4. Default is >= 3.

<a name="nested_language_settings"></a>The `language_settings` block supports:

* `default_language_code` -
  (Optional)
  The default language code of the app.

* `enable_multilingual_support` -
  (Optional)
  Enables multilingual support. If true, agents in the app will use pre-built
  instructions to improve handling of multilingual input.

* `fallback_action` -
  (Optional)
  The action to perform when an agent receives input in an unsupported
  language.
  This can be a predefined action or a custom tool call.
  Valid values are:
  - A tool's full resource name, which triggers a specific tool execution.
  - A predefined system action, such as "escalate" or "exit", which triggers
  an EndSession signal with corresponding metadata
  to terminate the conversation.

* `supported_language_codes` -
  (Optional)
  List of languages codes supported by the app, in addition to the
  `default_language_code`.

<a name="nested_logging_settings"></a>The `logging_settings` block supports:

* `audio_recording_config` -
  (Optional)
  Configuration for how the audio interactions should be recorded.
  Structure is [documented below](#nested_logging_settings_audio_recording_config).

* `bigquery_export_settings` -
  (Optional)
  Settings to describe the BigQuery export behaviors for the app.
  Structure is [documented below](#nested_logging_settings_bigquery_export_settings).

* `cloud_logging_settings` -
  (Optional)
  Settings to describe the Cloud Logging behaviors for the app.
  Structure is [documented below](#nested_logging_settings_cloud_logging_settings).

* `conversation_logging_settings` -
  (Optional)
  Settings to describe the conversation logging behaviors for the app.
  Structure is [documented below](#nested_logging_settings_conversation_logging_settings).

* `redaction_config` -
  (Optional)
  Configuration to instruct how sensitive data should be handled.
  Structure is [documented below](#nested_logging_settings_redaction_config).


<a name="nested_logging_settings_audio_recording_config"></a>The `audio_recording_config` block supports:

* `gcs_bucket` -
  (Optional)
  The [Cloud Storage](https://cloud.google.com/storage) bucket to store the
  session audio recordings. The URI must start with "gs://".
  Note: If the Cloud Storage bucket is in a different project from the app,
  you should grant `storage.objects.create` permission to the CES service
  agent `service-@gcp-sa-ces.iam.gserviceaccount.com`.

* `gcs_path_prefix` -
  (Optional)
  The Cloud Storage path prefix for audio recordings.
  This prefix can include the following placeholders, which will be
  dynamically substituted at serving time:
  - $project:   project ID
  - $location:  app location
  - $app:       app ID
  - $date:      session date in YYYY-MM-DD format
  - $session:   session ID
  If the path prefix is not specified, the default prefix
  `$project/$location/$app/$date/$session/` will be used.

<a name="nested_logging_settings_bigquery_export_settings"></a>The `bigquery_export_settings` block supports:

* `dataset` -
  (Optional)
  The BigQuery dataset to export the data to.

* `enabled` -
  (Optional)
  Indicates whether the BigQuery export is enabled.

* `project` -
  (Optional)
  The project ID of the BigQuery dataset to export the data to.
  Note: If the BigQuery dataset is in a different project from the app, you should grant
  roles/bigquery.admin role to the CES service agent service-<PROJECT-
  NUMBER>@gcp-sa-ces.iam.gserviceaccount.com.

<a name="nested_logging_settings_cloud_logging_settings"></a>The `cloud_logging_settings` block supports:

* `enable_cloud_logging` -
  (Optional)
  Whether to enable Cloud Logging for the sessions.

<a name="nested_logging_settings_conversation_logging_settings"></a>The `conversation_logging_settings` block supports:

* `disable_conversation_logging` -
  (Optional)
  Whether to disable conversation logging for the sessions.

<a name="nested_logging_settings_redaction_config"></a>The `redaction_config` block supports:

* `deidentify_template` -
  (Optional)
  [DLP](https://cloud.google.com/dlp/docs) deidentify template name to
  instruct on how to de-identify content.
  Format:
  `projects/{project}/locations/{location}/deidentifyTemplates/{deidentify_template}`

* `enable_redaction` -
  (Optional)
  If true, redaction will be applied in various logging scenarios, including
  conversation history, Cloud Logging and audio recording.

* `inspect_template` -
  (Optional)
  [DLP](https://cloud.google.com/dlp/docs) inspect template name to configure
  detection of sensitive data types.
  Format:
  `projects/{project}/locations/{location}/inspectTemplates/{inspect_template}`

<a name="nested_model_settings"></a>The `model_settings` block supports:

* `model` -
  (Optional)
  The LLM model that the agent should use.
  If not set, the agent will inherit the model from its parent agent.

* `temperature` -
  (Optional)
  If set, this temperature will be used for the LLM model. Temperature
  controls the randomness of the model's responses. Lower temperatures
  produce responses that are more predictable. Higher temperatures produce
  responses that are more creative.

<a name="nested_time_zone_settings"></a>The `time_zone_settings` block supports:

* `time_zone` -
  (Optional)
  The time zone of the app from the time zone database, e.g., America/Los_Angeles, Europe/Paris.

<a name="nested_variable_declarations"></a>The `variable_declarations` block supports:

* `description` -
  (Required)
  The description of the variable.

* `name` -
  (Required)
  The name of the variable. The name must start with a letter or underscore
  and contain only letters, numbers, or underscores.

* `schema` -
  (Required)
  Represents a select subset of an OpenAPI 3.0 schema object.
  Structure is [documented below](#nested_variable_declarations_variable_declarations_schema).


<a name="nested_variable_declarations_variable_declarations_schema"></a>The `schema` block supports:

* `description` -
  (Optional)
  The description of the data.

* `enum` -
  (Optional)
  Possible values of the element of primitive type with enum format.
  Examples:
  1. We can define direction as :
  {type:STRING, format:enum, enum:["EAST", NORTH", "SOUTH", "WEST"]}
  2. We can define apartment number as :
  {type:INTEGER, format:enum, enum:["101", "201", "301"]}

* `nullable` -
  (Optional)
  Indicates if the value may be null.

* `ref` -
  (Optional)
  Allows indirect references between schema nodes. The value should be a
  valid reference to a child of the root `defs`.
  For example, the following schema defines a reference to a schema node
  named "Pet":
  type: object
  properties:
    pet:
      ref: #/defs/Pet
  defs:
    Pet:
      type: object
      properties:
        name:
          type: string
  The value of the "pet" property is a reference to the schema node
  named "Pet".
  See details in
  https://json-schema.org/understanding-json-schema/structuring.

* `required` -
  (Optional)
  Required properties of Type.OBJECT.

* `type` -
  (Required)
  The type of the data.
  Possible values:
  STRING
  INTEGER
  NUMBER
  BOOLEAN
  OBJECT
  ARRAY

* `unique_items` -
  (Optional)
  Indicate the items in the array must be unique. Only applies to TYPE.ARRAY.

* `defs` -
  (Optional)
  A map of definitions for use by ref. Only allowed at the root of the schema.

* `default` -
  (Optional)
  Optional. Default value of the data. Represents a dynamically typed value
  which can be either null, a number, a string, a boolean, a struct,
  or a list of values. The provided default value must be compatible
  with the defined 'type' and other schema constraints.

* `additional_properties` -
  (Optional)
  Optional. Defines the schema for additional properties allowed in an object.
  The value must be a valid JSON string representing the Schema object.
  (Note: OpenAPI also allows a boolean, this definition expects a Schema JSON).

* `any_of` -
  (Optional)
  Optional. The instance value should be valid against at least one of the schemas in this list.

* `prefix_items` -
  (Optional)
  Optional. Schemas of initial elements of Type.ARRAY.

* `properties` -
  (Optional)
  Properties of Type.OBJECT.

* `items` -
  (Optional)
  Schema of the elements of Type.ARRAY.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/apps/{{name}}`

* `create_time` -
  Timestamp when the app was created.

* `deployment_count` -
  Number of deployments in the app.

* `etag` -
  Etag used to ensure the object hasn't changed during a read-modify-write
  operation. If the etag is empty, the update will overwrite any concurrent
  changes.

* `name` -
  Identifier. The unique identifier of the app.
  Format: `projects/{project}/locations/{location}/apps/{app}`

* `update_time` -
  Timestamp when the app was last updated.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


App can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/apps/{{name}}`
* `{{project}}/{{location}}/{{name}}`
* `{{location}}/{{name}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import App using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/apps/{{name}}"
  to = google_ces_app.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), App can be imported using one of the formats above. For example:

```
$ terraform import google_ces_app.default projects/{{project}}/locations/{{location}}/apps/{{name}}
$ terraform import google_ces_app.default {{project}}/{{location}}/{{name}}
$ terraform import google_ces_app.default {{location}}/{{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
