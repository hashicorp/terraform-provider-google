---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Cloud Storage"
layout: "google"
page_title: "Google: google_storage_bucket_access_control"
sidebar_current: "docs-google-storage-bucket-access-control"
description: |-
  The BucketAccessControls resource represents the Access Control Lists
  (ACLs) for buckets within Google Cloud Storage.
---

# google\_storage\_bucket\_access\_control

The BucketAccessControls resource represents the Access Control Lists
(ACLs) for buckets within Google Cloud Storage. ACLs let you specify who
has access to your data and to what extent.

There are three roles that can be assigned to an entity:

READERs can get the bucket, though no acl property will be returned, and
list the bucket's objects.  WRITERs are READERs, and they can insert
objects into the bucket and delete the bucket's objects.  OWNERs are
WRITERs, and they can get the acl property of a bucket, update a bucket,
and call all BucketAccessControls methods on the bucket.  For more
information, see Access Control, with the caveat that this API uses
READER, WRITER, and OWNER instead of READ, WRITE, and FULL_CONTROL.



<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=storage_bucket_access_control_public_bucket&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Storage Bucket Access Control Public Bucket


```hcl
resource "google_storage_bucket_access_control" "public_rule" {
  bucket = google_storage_bucket.bucket.name
  role   = "READER"
  entity = "allUsers"
}

resource "google_storage_bucket" "bucket" {
  name = "static-content-bucket"
}
```

## Argument Reference

The following arguments are supported:


* `bucket` -
  (Required)
  The name of the bucket.

* `entity` -
  (Required)
  The entity holding the permission, in one of the following forms:
    user-userId
    user-email
    group-groupId
    group-email
    domain-domain
    project-team-projectId
    allUsers
    allAuthenticatedUsers
  Examples:
    The user liz@example.com would be user-liz@example.com.
    The group example@googlegroups.com would be
    group-example@googlegroups.com.
    To refer to all members of the Google Apps for Business domain
    example.com, the entity would be domain-example.com.


- - -


* `role` -
  (Optional)
  The access permission for the entity.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:


* `domain` -
  The domain associated with the entity.

* `email` -
  The email address associated with the entity.


## Timeouts

This resource provides the following
[Timeouts](/docs/configuration/resources.html#timeouts) configuration options:

- `create` - Default is 4 minutes.
- `update` - Default is 4 minutes.
- `delete` - Default is 4 minutes.

## Import

BucketAccessControl can be imported using any of these accepted formats:

```
$ terraform import google_storage_bucket_access_control.default {{bucket}}/{{entity}}
```

-> If you're importing a resource with beta features, make sure to include `-provider=google-beta`
as an argument so that Terraform uses the correct provider to import your resource.
