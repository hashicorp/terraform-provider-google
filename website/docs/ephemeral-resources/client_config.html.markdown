---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: Handwritten     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Source file: https://github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/third_party/terraform/website/docs/ephemeral-resources/client_config.html.markdown
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "Cloud Platform"
description: |-
  Get information about the configuration of the Google Cloud provider.
---

# google_client_config

Use this ephemeral resource to access the configuration of the Google Cloud provider.

Unlike the `google_client_config` data source, this ephemeral resource does not persist sensitive credentials in Terraform's state, making it ideal for scenarios where you need to access provider configuration without storing sensitive data.

## Example Usage

```tf
ephemeral "google_client_config" "current" {
}

output "project" {
  value = ephemeral.google_client_config.current.project
}
```

## Example Usage: Configure provider with ephemeral credentials

```tf
provider "google" {
  default_labels = {
    environment = "production"
  }
}

ephemeral "google_client_config" "current" {
}

provider "google" {
  alias        = "ephemeral_configured"
  access_token = ephemeral.google_client_config.current.access_token
  project      = ephemeral.google_client_config.current.project
  region       = ephemeral.google_client_config.current.region
  zone         = ephemeral.google_client_config.current.zone
}

data "google_client_openid_userinfo" "me" {
  provider = google.ephemeral_configured
}
```

## Example Usage: Configure Kubernetes provider with ephemeral OAuth2 access token

```tf
ephemeral "google_client_config" "default" {
}

data "google_container_cluster" "my_cluster" {
  name = "my-cluster"
  zone = "us-east1-a"
}

provider "kubernetes" {
  host  = "https://${data.google_container_cluster.my_cluster.endpoint}"
  token = ephemeral.google_client_config.default.access_token
  cluster_ca_certificate = base64decode(
    data.google_container_cluster.my_cluster.master_auth[0].cluster_ca_certificate,
  )
}
```

## Argument Reference

There are no arguments available for this ephemeral resource.

## Attributes Reference

The following attributes are exported:

* `project` - The ID of the project to apply any resources to.

* `region` - The region to operate under.

* `zone` - The zone to operate under.

* `access_token` - The OAuth2 access token used by the client to authenticate against the Google Cloud API.

* `default_labels` - The default labels configured on the provider.

* `id` - The ID of this ephemeral resource in Terraform state. It is created in a projects/{{project}}/regions/{{region}}/zones/{{zone}} format and is NOT used by the ephemeral resource in requests to Google APIs.

## Benefits over Data Source

The main advantage of using this ephemeral resource over the `google_client_config` data source is that sensitive credentials (like `access_token`) are not persisted in Terraform's state file. This is particularly important when:

- Using remote state backends where state files might be accessible to multiple users
- Working with sensitive credentials that should not be stored persistently
- Implementing security best practices for credential management

The ephemeral resource provides the same functionality as the data source but with improved security characteristics for credential handling.
